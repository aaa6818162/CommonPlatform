/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package picturepark.models;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonSubTypes;

/**
 * The FieldString model.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "kind")
@JsonTypeName("FieldString")
@JsonSubTypes({
    @JsonSubTypes.Type(name = "FieldStringArray", value = FieldStringArray.class)
})
public class FieldString extends FieldBase {
    /**
     * It is a DotLiquid template.
     */
    @JsonProperty(value = "template")
    private String template;

    /**
     * If true the Template will only render on item creation otherwise it will
     * render on each update.
     */
    @JsonProperty(value = "keepFieldValue", required = true)
    private boolean keepFieldValue;

    /**
     * Contains a regex validation pattern.
     */
    @JsonProperty(value = "pattern")
    private String pattern;

    /**
     * Defines the minimal string length.
     */
    @JsonProperty(value = "minimumLength")
    private Integer minimumLength;

    /**
     * Defines the maximal string length.
     */
    @JsonProperty(value = "maximumLength")
    private Integer maximumLength;

    /**
     * A string field can have multiple analyzers, but only one per analyzer
     * type. To have any effect the Index must be true.
     */
    @JsonProperty(value = "analyzers")
    private List<AnalyzerBase> analyzers;

    /**
     * Displays the field value in a multiline component.
     */
    @JsonProperty(value = "multiLine", required = true)
    private boolean multiLine;

    /**
     * Similar to an enumeration valid field values are limited to values of
     * this list.
     */
    @JsonProperty(value = "grantedValues")
    private List<String> grantedValues;

    /**
     * Priorizes search results. SimpleSearch must be true.
     */
    @JsonProperty(value = "boost", required = true)
    private double boost;

    /**
     * Get the template value.
     *
     * @return the template value
     */
    public String template() {
        return this.template;
    }

    /**
     * Set the template value.
     *
     * @param template the template value to set
     * @return the FieldString object itself.
     */
    public FieldString withTemplate(String template) {
        this.template = template;
        return this;
    }

    /**
     * Get the keepFieldValue value.
     *
     * @return the keepFieldValue value
     */
    public boolean keepFieldValue() {
        return this.keepFieldValue;
    }

    /**
     * Set the keepFieldValue value.
     *
     * @param keepFieldValue the keepFieldValue value to set
     * @return the FieldString object itself.
     */
    public FieldString withKeepFieldValue(boolean keepFieldValue) {
        this.keepFieldValue = keepFieldValue;
        return this;
    }

    /**
     * Get the pattern value.
     *
     * @return the pattern value
     */
    public String pattern() {
        return this.pattern;
    }

    /**
     * Set the pattern value.
     *
     * @param pattern the pattern value to set
     * @return the FieldString object itself.
     */
    public FieldString withPattern(String pattern) {
        this.pattern = pattern;
        return this;
    }

    /**
     * Get the minimumLength value.
     *
     * @return the minimumLength value
     */
    public Integer minimumLength() {
        return this.minimumLength;
    }

    /**
     * Set the minimumLength value.
     *
     * @param minimumLength the minimumLength value to set
     * @return the FieldString object itself.
     */
    public FieldString withMinimumLength(Integer minimumLength) {
        this.minimumLength = minimumLength;
        return this;
    }

    /**
     * Get the maximumLength value.
     *
     * @return the maximumLength value
     */
    public Integer maximumLength() {
        return this.maximumLength;
    }

    /**
     * Set the maximumLength value.
     *
     * @param maximumLength the maximumLength value to set
     * @return the FieldString object itself.
     */
    public FieldString withMaximumLength(Integer maximumLength) {
        this.maximumLength = maximumLength;
        return this;
    }

    /**
     * Get the analyzers value.
     *
     * @return the analyzers value
     */
    public List<AnalyzerBase> analyzers() {
        return this.analyzers;
    }

    /**
     * Set the analyzers value.
     *
     * @param analyzers the analyzers value to set
     * @return the FieldString object itself.
     */
    public FieldString withAnalyzers(List<AnalyzerBase> analyzers) {
        this.analyzers = analyzers;
        return this;
    }

    /**
     * Get the multiLine value.
     *
     * @return the multiLine value
     */
    public boolean multiLine() {
        return this.multiLine;
    }

    /**
     * Set the multiLine value.
     *
     * @param multiLine the multiLine value to set
     * @return the FieldString object itself.
     */
    public FieldString withMultiLine(boolean multiLine) {
        this.multiLine = multiLine;
        return this;
    }

    /**
     * Get the grantedValues value.
     *
     * @return the grantedValues value
     */
    public List<String> grantedValues() {
        return this.grantedValues;
    }

    /**
     * Set the grantedValues value.
     *
     * @param grantedValues the grantedValues value to set
     * @return the FieldString object itself.
     */
    public FieldString withGrantedValues(List<String> grantedValues) {
        this.grantedValues = grantedValues;
        return this;
    }

    /**
     * Get the boost value.
     *
     * @return the boost value
     */
    public double boost() {
        return this.boost;
    }

    /**
     * Set the boost value.
     *
     * @param boost the boost value to set
     * @return the FieldString object itself.
     */
    public FieldString withBoost(double boost) {
        this.boost = boost;
        return this;
    }

}
