/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package picturepark.models;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The SchemaDetail model.
 */
public class SchemaDetail {
    /**
     * The schema id.
     */
    @JsonProperty(value = "id")
    private String id;

    /**
     * The parent schema id.
     */
    @JsonProperty(value = "parentSchemaId")
    private String parentSchemaId;

    /**
     * Types control schema usage.
     */
    @JsonProperty(value = "types")
    private List<String> types;

    /**
     * Language specific schema names.
     */
    @JsonProperty(value = "names")
    private Object names;

    /**
     * Language specific schema descriptions.
     */
    @JsonProperty(value = "descriptions")
    private Object descriptions;

    /**
     * An optional id list of schemas with type layer.
     */
    @JsonProperty(value = "layerSchemaIds")
    private List<String> layerSchemaIds;

    /**
     * Language specific DotLiquid templates. These templates will be resolved
     * into display values in content documents and/or list items.
     */
    @JsonProperty(value = "displayPatterns")
    private List<DisplayPattern> displayPatterns;

    /**
     * The schema fields.
     */
    @JsonProperty(value = "fields")
    private List<FieldBase> fields;

    /**
     * The schema fields overwrite information.
     */
    @JsonProperty(value = "fieldsOverwrite")
    private List<FieldOverwriteBase> fieldsOverwrite;

    /**
     * Sorts content documents and/or list items.
     */
    @JsonProperty(value = "sort")
    private List<SortInfo> sort;

    /**
     * An optional list of aggregations to group content documents and list
     * items.
     */
    @JsonProperty(value = "aggregations")
    private List<AggregatorBase> aggregations;

    /**
     * A simple ordering property for schemas.
     */
    @JsonProperty(value = "sortOrder", required = true)
    private int sortOrder;

    /**
     * Is true when schema is system provided.
     */
    @JsonProperty(value = "system", required = true)
    private boolean system;

    /**
     * The owner token id. Defines the schema owner.
     */
    @JsonProperty(value = "ownerTokenId")
    private String ownerTokenId;

    /**
     * Opens list item document accessibility. If true the
     * SchemaPermissionSetIds must be empty.
     */
    @JsonProperty(value = "public", required = true)
    private boolean publicProperty;

    /**
     * An optional id list of schema permission sets which control list item
     * permissions. When not empty Public must be false.
     */
    @JsonProperty(value = "schemaPermissionSetIds")
    private List<String> schemaPermissionSetIds;

    /**
     * An optional id list of schemas with type content for a schema with type
     * layer.
     */
    @JsonProperty(value = "referencedInContentSchemaIds")
    private List<String> referencedInContentSchemaIds;

    /**
     * A complete id list of all descendant schemas.
     */
    @JsonProperty(value = "descendantSchemaIds")
    private List<String> descendantSchemaIds;

    /**
     * The audit property.
     */
    @JsonProperty(value = "audit")
    private UserAudit audit;

    /**
     * The number of fields generated by the schema for the Search operations.
     */
    @JsonProperty(value = "searchFieldCount")
    private SearchFieldCount searchFieldCount;

    /**
     * Get the id value.
     *
     * @return the id value
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id value.
     *
     * @param id the id value to set
     * @return the SchemaDetail object itself.
     */
    public SchemaDetail withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the parentSchemaId value.
     *
     * @return the parentSchemaId value
     */
    public String parentSchemaId() {
        return this.parentSchemaId;
    }

    /**
     * Set the parentSchemaId value.
     *
     * @param parentSchemaId the parentSchemaId value to set
     * @return the SchemaDetail object itself.
     */
    public SchemaDetail withParentSchemaId(String parentSchemaId) {
        this.parentSchemaId = parentSchemaId;
        return this;
    }

    /**
     * Get the types value.
     *
     * @return the types value
     */
    public List<String> types() {
        return this.types;
    }

    /**
     * Set the types value.
     *
     * @param types the types value to set
     * @return the SchemaDetail object itself.
     */
    public SchemaDetail withTypes(List<String> types) {
        this.types = types;
        return this;
    }

    /**
     * Get the names value.
     *
     * @return the names value
     */
    public Object names() {
        return this.names;
    }

    /**
     * Set the names value.
     *
     * @param names the names value to set
     * @return the SchemaDetail object itself.
     */
    public SchemaDetail withNames(Object names) {
        this.names = names;
        return this;
    }

    /**
     * Get the descriptions value.
     *
     * @return the descriptions value
     */
    public Object descriptions() {
        return this.descriptions;
    }

    /**
     * Set the descriptions value.
     *
     * @param descriptions the descriptions value to set
     * @return the SchemaDetail object itself.
     */
    public SchemaDetail withDescriptions(Object descriptions) {
        this.descriptions = descriptions;
        return this;
    }

    /**
     * Get the layerSchemaIds value.
     *
     * @return the layerSchemaIds value
     */
    public List<String> layerSchemaIds() {
        return this.layerSchemaIds;
    }

    /**
     * Set the layerSchemaIds value.
     *
     * @param layerSchemaIds the layerSchemaIds value to set
     * @return the SchemaDetail object itself.
     */
    public SchemaDetail withLayerSchemaIds(List<String> layerSchemaIds) {
        this.layerSchemaIds = layerSchemaIds;
        return this;
    }

    /**
     * Get the displayPatterns value.
     *
     * @return the displayPatterns value
     */
    public List<DisplayPattern> displayPatterns() {
        return this.displayPatterns;
    }

    /**
     * Set the displayPatterns value.
     *
     * @param displayPatterns the displayPatterns value to set
     * @return the SchemaDetail object itself.
     */
    public SchemaDetail withDisplayPatterns(List<DisplayPattern> displayPatterns) {
        this.displayPatterns = displayPatterns;
        return this;
    }

    /**
     * Get the fields value.
     *
     * @return the fields value
     */
    public List<FieldBase> fields() {
        return this.fields;
    }

    /**
     * Set the fields value.
     *
     * @param fields the fields value to set
     * @return the SchemaDetail object itself.
     */
    public SchemaDetail withFields(List<FieldBase> fields) {
        this.fields = fields;
        return this;
    }

    /**
     * Get the fieldsOverwrite value.
     *
     * @return the fieldsOverwrite value
     */
    public List<FieldOverwriteBase> fieldsOverwrite() {
        return this.fieldsOverwrite;
    }

    /**
     * Set the fieldsOverwrite value.
     *
     * @param fieldsOverwrite the fieldsOverwrite value to set
     * @return the SchemaDetail object itself.
     */
    public SchemaDetail withFieldsOverwrite(List<FieldOverwriteBase> fieldsOverwrite) {
        this.fieldsOverwrite = fieldsOverwrite;
        return this;
    }

    /**
     * Get the sort value.
     *
     * @return the sort value
     */
    public List<SortInfo> sort() {
        return this.sort;
    }

    /**
     * Set the sort value.
     *
     * @param sort the sort value to set
     * @return the SchemaDetail object itself.
     */
    public SchemaDetail withSort(List<SortInfo> sort) {
        this.sort = sort;
        return this;
    }

    /**
     * Get the aggregations value.
     *
     * @return the aggregations value
     */
    public List<AggregatorBase> aggregations() {
        return this.aggregations;
    }

    /**
     * Set the aggregations value.
     *
     * @param aggregations the aggregations value to set
     * @return the SchemaDetail object itself.
     */
    public SchemaDetail withAggregations(List<AggregatorBase> aggregations) {
        this.aggregations = aggregations;
        return this;
    }

    /**
     * Get the sortOrder value.
     *
     * @return the sortOrder value
     */
    public int sortOrder() {
        return this.sortOrder;
    }

    /**
     * Set the sortOrder value.
     *
     * @param sortOrder the sortOrder value to set
     * @return the SchemaDetail object itself.
     */
    public SchemaDetail withSortOrder(int sortOrder) {
        this.sortOrder = sortOrder;
        return this;
    }

    /**
     * Get the system value.
     *
     * @return the system value
     */
    public boolean system() {
        return this.system;
    }

    /**
     * Set the system value.
     *
     * @param system the system value to set
     * @return the SchemaDetail object itself.
     */
    public SchemaDetail withSystem(boolean system) {
        this.system = system;
        return this;
    }

    /**
     * Get the ownerTokenId value.
     *
     * @return the ownerTokenId value
     */
    public String ownerTokenId() {
        return this.ownerTokenId;
    }

    /**
     * Set the ownerTokenId value.
     *
     * @param ownerTokenId the ownerTokenId value to set
     * @return the SchemaDetail object itself.
     */
    public SchemaDetail withOwnerTokenId(String ownerTokenId) {
        this.ownerTokenId = ownerTokenId;
        return this;
    }

    /**
     * Get the publicProperty value.
     *
     * @return the publicProperty value
     */
    public boolean publicProperty() {
        return this.publicProperty;
    }

    /**
     * Set the publicProperty value.
     *
     * @param publicProperty the publicProperty value to set
     * @return the SchemaDetail object itself.
     */
    public SchemaDetail withPublicProperty(boolean publicProperty) {
        this.publicProperty = publicProperty;
        return this;
    }

    /**
     * Get the schemaPermissionSetIds value.
     *
     * @return the schemaPermissionSetIds value
     */
    public List<String> schemaPermissionSetIds() {
        return this.schemaPermissionSetIds;
    }

    /**
     * Set the schemaPermissionSetIds value.
     *
     * @param schemaPermissionSetIds the schemaPermissionSetIds value to set
     * @return the SchemaDetail object itself.
     */
    public SchemaDetail withSchemaPermissionSetIds(List<String> schemaPermissionSetIds) {
        this.schemaPermissionSetIds = schemaPermissionSetIds;
        return this;
    }

    /**
     * Get the referencedInContentSchemaIds value.
     *
     * @return the referencedInContentSchemaIds value
     */
    public List<String> referencedInContentSchemaIds() {
        return this.referencedInContentSchemaIds;
    }

    /**
     * Set the referencedInContentSchemaIds value.
     *
     * @param referencedInContentSchemaIds the referencedInContentSchemaIds value to set
     * @return the SchemaDetail object itself.
     */
    public SchemaDetail withReferencedInContentSchemaIds(List<String> referencedInContentSchemaIds) {
        this.referencedInContentSchemaIds = referencedInContentSchemaIds;
        return this;
    }

    /**
     * Get the descendantSchemaIds value.
     *
     * @return the descendantSchemaIds value
     */
    public List<String> descendantSchemaIds() {
        return this.descendantSchemaIds;
    }

    /**
     * Set the descendantSchemaIds value.
     *
     * @param descendantSchemaIds the descendantSchemaIds value to set
     * @return the SchemaDetail object itself.
     */
    public SchemaDetail withDescendantSchemaIds(List<String> descendantSchemaIds) {
        this.descendantSchemaIds = descendantSchemaIds;
        return this;
    }

    /**
     * Get the audit value.
     *
     * @return the audit value
     */
    public UserAudit audit() {
        return this.audit;
    }

    /**
     * Set the audit value.
     *
     * @param audit the audit value to set
     * @return the SchemaDetail object itself.
     */
    public SchemaDetail withAudit(UserAudit audit) {
        this.audit = audit;
        return this;
    }

    /**
     * Get the searchFieldCount value.
     *
     * @return the searchFieldCount value
     */
    public SearchFieldCount searchFieldCount() {
        return this.searchFieldCount;
    }

    /**
     * Set the searchFieldCount value.
     *
     * @param searchFieldCount the searchFieldCount value to set
     * @return the SchemaDetail object itself.
     */
    public SchemaDetail withSearchFieldCount(SearchFieldCount searchFieldCount) {
        this.searchFieldCount = searchFieldCount;
        return this;
    }

}
