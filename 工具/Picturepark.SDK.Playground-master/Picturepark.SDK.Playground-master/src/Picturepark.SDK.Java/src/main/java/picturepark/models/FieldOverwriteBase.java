/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package picturepark.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonSubTypes;

/**
 * Base class for overwritten information on a field.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "kind")
@JsonTypeName("FieldOverwriteBase")
@JsonSubTypes({
    @JsonSubTypes.Type(name = "FieldOverwriteSingleTagbox", value = FieldOverwriteSingleTagbox.class),
    @JsonSubTypes.Type(name = "FieldOverwriteMultiTagbox", value = FieldOverwriteMultiTagbox.class)
})
public class FieldOverwriteBase {
    /**
     * The field id. Can be a slug and must be unique within the schema.
     */
    @JsonProperty(value = "id")
    private String id;

    /**
     * Defines if a field value is mandatory or not.
     */
    @JsonProperty(value = "required", required = true)
    private boolean required;

    /**
     * Defines if the required property of the field is overwritten.
     */
    @JsonProperty(value = "overwriteRequired", required = true)
    private boolean overwriteRequired;

    /**
     * Get the id value.
     *
     * @return the id value
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id value.
     *
     * @param id the id value to set
     * @return the FieldOverwriteBase object itself.
     */
    public FieldOverwriteBase withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the required value.
     *
     * @return the required value
     */
    public boolean required() {
        return this.required;
    }

    /**
     * Set the required value.
     *
     * @param required the required value to set
     * @return the FieldOverwriteBase object itself.
     */
    public FieldOverwriteBase withRequired(boolean required) {
        this.required = required;
        return this;
    }

    /**
     * Get the overwriteRequired value.
     *
     * @return the overwriteRequired value
     */
    public boolean overwriteRequired() {
        return this.overwriteRequired;
    }

    /**
     * Set the overwriteRequired value.
     *
     * @param overwriteRequired the overwriteRequired value to set
     * @return the FieldOverwriteBase object itself.
     */
    public FieldOverwriteBase withOverwriteRequired(boolean overwriteRequired) {
        this.overwriteRequired = overwriteRequired;
        return this;
    }

}
