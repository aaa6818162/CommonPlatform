/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package picturepark.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * The SchemaFieldImportRelatedSchemaMismatchException model.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "kind")
@JsonTypeName("SchemaFieldImportRelatedSchemaMismatchException")
public class SchemaFieldImportRelatedSchemaMismatchException extends PictureparkValidationException {
    /**
     * The schemaId property.
     */
    @JsonProperty(value = "schemaId")
    private String schemaId;

    /**
     * The fieldId property.
     */
    @JsonProperty(value = "fieldId")
    private String fieldId;

    /**
     * The importingRelatedSchemaId property.
     */
    @JsonProperty(value = "importingRelatedSchemaId")
    private String importingRelatedSchemaId;

    /**
     * The existingRelatedSchemaId property.
     */
    @JsonProperty(value = "existingRelatedSchemaId")
    private String existingRelatedSchemaId;

    /**
     * Get the schemaId value.
     *
     * @return the schemaId value
     */
    public String schemaId() {
        return this.schemaId;
    }

    /**
     * Set the schemaId value.
     *
     * @param schemaId the schemaId value to set
     * @return the SchemaFieldImportRelatedSchemaMismatchException object itself.
     */
    public SchemaFieldImportRelatedSchemaMismatchException withSchemaId(String schemaId) {
        this.schemaId = schemaId;
        return this;
    }

    /**
     * Get the fieldId value.
     *
     * @return the fieldId value
     */
    public String fieldId() {
        return this.fieldId;
    }

    /**
     * Set the fieldId value.
     *
     * @param fieldId the fieldId value to set
     * @return the SchemaFieldImportRelatedSchemaMismatchException object itself.
     */
    public SchemaFieldImportRelatedSchemaMismatchException withFieldId(String fieldId) {
        this.fieldId = fieldId;
        return this;
    }

    /**
     * Get the importingRelatedSchemaId value.
     *
     * @return the importingRelatedSchemaId value
     */
    public String importingRelatedSchemaId() {
        return this.importingRelatedSchemaId;
    }

    /**
     * Set the importingRelatedSchemaId value.
     *
     * @param importingRelatedSchemaId the importingRelatedSchemaId value to set
     * @return the SchemaFieldImportRelatedSchemaMismatchException object itself.
     */
    public SchemaFieldImportRelatedSchemaMismatchException withImportingRelatedSchemaId(String importingRelatedSchemaId) {
        this.importingRelatedSchemaId = importingRelatedSchemaId;
        return this;
    }

    /**
     * Get the existingRelatedSchemaId value.
     *
     * @return the existingRelatedSchemaId value
     */
    public String existingRelatedSchemaId() {
        return this.existingRelatedSchemaId;
    }

    /**
     * Set the existingRelatedSchemaId value.
     *
     * @param existingRelatedSchemaId the existingRelatedSchemaId value to set
     * @return the SchemaFieldImportRelatedSchemaMismatchException object itself.
     */
    public SchemaFieldImportRelatedSchemaMismatchException withExistingRelatedSchemaId(String existingRelatedSchemaId) {
        this.existingRelatedSchemaId = existingRelatedSchemaId;
        return this;
    }

}
