/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package picturepark.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * The SchemaFieldOverwriteTypeMismatchException model.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "kind")
@JsonTypeName("SchemaFieldOverwriteTypeMismatchException")
public class SchemaFieldOverwriteTypeMismatchException extends PictureparkValidationException {
    /**
     * The schemaId property.
     */
    @JsonProperty(value = "schemaId")
    private String schemaId;

    /**
     * The fieldId property.
     */
    @JsonProperty(value = "fieldId")
    private String fieldId;

    /**
     * The fieldOverwriteType property.
     */
    @JsonProperty(value = "fieldOverwriteType")
    private String fieldOverwriteType;

    /**
     * The fieldType property.
     */
    @JsonProperty(value = "fieldType")
    private String fieldType;

    /**
     * Get the schemaId value.
     *
     * @return the schemaId value
     */
    public String schemaId() {
        return this.schemaId;
    }

    /**
     * Set the schemaId value.
     *
     * @param schemaId the schemaId value to set
     * @return the SchemaFieldOverwriteTypeMismatchException object itself.
     */
    public SchemaFieldOverwriteTypeMismatchException withSchemaId(String schemaId) {
        this.schemaId = schemaId;
        return this;
    }

    /**
     * Get the fieldId value.
     *
     * @return the fieldId value
     */
    public String fieldId() {
        return this.fieldId;
    }

    /**
     * Set the fieldId value.
     *
     * @param fieldId the fieldId value to set
     * @return the SchemaFieldOverwriteTypeMismatchException object itself.
     */
    public SchemaFieldOverwriteTypeMismatchException withFieldId(String fieldId) {
        this.fieldId = fieldId;
        return this;
    }

    /**
     * Get the fieldOverwriteType value.
     *
     * @return the fieldOverwriteType value
     */
    public String fieldOverwriteType() {
        return this.fieldOverwriteType;
    }

    /**
     * Set the fieldOverwriteType value.
     *
     * @param fieldOverwriteType the fieldOverwriteType value to set
     * @return the SchemaFieldOverwriteTypeMismatchException object itself.
     */
    public SchemaFieldOverwriteTypeMismatchException withFieldOverwriteType(String fieldOverwriteType) {
        this.fieldOverwriteType = fieldOverwriteType;
        return this;
    }

    /**
     * Get the fieldType value.
     *
     * @return the fieldType value
     */
    public String fieldType() {
        return this.fieldType;
    }

    /**
     * Set the fieldType value.
     *
     * @param fieldType the fieldType value to set
     * @return the SchemaFieldOverwriteTypeMismatchException object itself.
     */
    public SchemaFieldOverwriteTypeMismatchException withFieldType(String fieldType) {
        this.fieldType = fieldType;
        return this;
    }

}
