/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package picturepark.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * The IndexedFieldThresholdExceededException model.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "kind")
@JsonTypeName("IndexedFieldThresholdExceededException")
public class IndexedFieldThresholdExceededException extends PictureparkValidationException {
    /**
     * The schemaId property.
     */
    @JsonProperty(value = "schemaId")
    private String schemaId;

    /**
     * The indexedFieldCount property.
     */
    @JsonProperty(value = "indexedFieldCount", required = true)
    private double indexedFieldCount;

    /**
     * The indexedFieldThreshold property.
     */
    @JsonProperty(value = "indexedFieldThreshold", required = true)
    private int indexedFieldThreshold;

    /**
     * Get the schemaId value.
     *
     * @return the schemaId value
     */
    public String schemaId() {
        return this.schemaId;
    }

    /**
     * Set the schemaId value.
     *
     * @param schemaId the schemaId value to set
     * @return the IndexedFieldThresholdExceededException object itself.
     */
    public IndexedFieldThresholdExceededException withSchemaId(String schemaId) {
        this.schemaId = schemaId;
        return this;
    }

    /**
     * Get the indexedFieldCount value.
     *
     * @return the indexedFieldCount value
     */
    public double indexedFieldCount() {
        return this.indexedFieldCount;
    }

    /**
     * Set the indexedFieldCount value.
     *
     * @param indexedFieldCount the indexedFieldCount value to set
     * @return the IndexedFieldThresholdExceededException object itself.
     */
    public IndexedFieldThresholdExceededException withIndexedFieldCount(double indexedFieldCount) {
        this.indexedFieldCount = indexedFieldCount;
        return this;
    }

    /**
     * Get the indexedFieldThreshold value.
     *
     * @return the indexedFieldThreshold value
     */
    public int indexedFieldThreshold() {
        return this.indexedFieldThreshold;
    }

    /**
     * Set the indexedFieldThreshold value.
     *
     * @param indexedFieldThreshold the indexedFieldThreshold value to set
     * @return the IndexedFieldThresholdExceededException object itself.
     */
    public IndexedFieldThresholdExceededException withIndexedFieldThreshold(int indexedFieldThreshold) {
        this.indexedFieldThreshold = indexedFieldThreshold;
        return this;
    }

}
