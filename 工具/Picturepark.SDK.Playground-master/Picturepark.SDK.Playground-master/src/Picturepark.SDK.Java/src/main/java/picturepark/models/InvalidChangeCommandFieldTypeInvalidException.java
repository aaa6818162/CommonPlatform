/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package picturepark.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * The InvalidChangeCommandFieldTypeInvalidException model.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "kind")
@JsonTypeName("InvalidChangeCommandFieldTypeInvalidException")
public class InvalidChangeCommandFieldTypeInvalidException extends PictureparkValidationException {
    /**
     * The commandType property.
     */
    @JsonProperty(value = "commandType")
    private String commandType;

    /**
     * The fieldId property.
     */
    @JsonProperty(value = "fieldId")
    private String fieldId;

    /**
     * The schemaId property.
     */
    @JsonProperty(value = "schemaId")
    private String schemaId;

    /**
     * The fieldActualType property.
     */
    @JsonProperty(value = "fieldActualType")
    private String fieldActualType;

    /**
     * The fieldExpectedType property.
     */
    @JsonProperty(value = "fieldExpectedType")
    private String fieldExpectedType;

    /**
     * Get the commandType value.
     *
     * @return the commandType value
     */
    public String commandType() {
        return this.commandType;
    }

    /**
     * Set the commandType value.
     *
     * @param commandType the commandType value to set
     * @return the InvalidChangeCommandFieldTypeInvalidException object itself.
     */
    public InvalidChangeCommandFieldTypeInvalidException withCommandType(String commandType) {
        this.commandType = commandType;
        return this;
    }

    /**
     * Get the fieldId value.
     *
     * @return the fieldId value
     */
    public String fieldId() {
        return this.fieldId;
    }

    /**
     * Set the fieldId value.
     *
     * @param fieldId the fieldId value to set
     * @return the InvalidChangeCommandFieldTypeInvalidException object itself.
     */
    public InvalidChangeCommandFieldTypeInvalidException withFieldId(String fieldId) {
        this.fieldId = fieldId;
        return this;
    }

    /**
     * Get the schemaId value.
     *
     * @return the schemaId value
     */
    public String schemaId() {
        return this.schemaId;
    }

    /**
     * Set the schemaId value.
     *
     * @param schemaId the schemaId value to set
     * @return the InvalidChangeCommandFieldTypeInvalidException object itself.
     */
    public InvalidChangeCommandFieldTypeInvalidException withSchemaId(String schemaId) {
        this.schemaId = schemaId;
        return this;
    }

    /**
     * Get the fieldActualType value.
     *
     * @return the fieldActualType value
     */
    public String fieldActualType() {
        return this.fieldActualType;
    }

    /**
     * Set the fieldActualType value.
     *
     * @param fieldActualType the fieldActualType value to set
     * @return the InvalidChangeCommandFieldTypeInvalidException object itself.
     */
    public InvalidChangeCommandFieldTypeInvalidException withFieldActualType(String fieldActualType) {
        this.fieldActualType = fieldActualType;
        return this;
    }

    /**
     * Get the fieldExpectedType value.
     *
     * @return the fieldExpectedType value
     */
    public String fieldExpectedType() {
        return this.fieldExpectedType;
    }

    /**
     * Set the fieldExpectedType value.
     *
     * @param fieldExpectedType the fieldExpectedType value to set
     * @return the InvalidChangeCommandFieldTypeInvalidException object itself.
     */
    public InvalidChangeCommandFieldTypeInvalidException withFieldExpectedType(String fieldExpectedType) {
        this.fieldExpectedType = fieldExpectedType;
        return this;
    }

}
