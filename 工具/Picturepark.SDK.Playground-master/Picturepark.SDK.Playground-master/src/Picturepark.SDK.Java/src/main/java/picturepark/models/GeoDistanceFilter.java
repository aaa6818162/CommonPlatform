/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package picturepark.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * The GeoDistanceFilter returns documents that include only hits that exists
 * within a specific distance from a geo point.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "kind")
@JsonTypeName("GeoDistanceFilter")
public class GeoDistanceFilter extends FilterBase {
    /**
     * The elastic search index field to execute the filter on.
     */
    @JsonProperty(value = "field")
    private String field;

    /**
     * The longitude/latitude configuration for the point of origin.
     */
    @JsonProperty(value = "location")
    private GeoLocation location;

    /**
     * The range distance in meters.
     */
    @JsonProperty(value = "distance", required = true)
    private double distance;

    /**
     * Get the field value.
     *
     * @return the field value
     */
    public String field() {
        return this.field;
    }

    /**
     * Set the field value.
     *
     * @param field the field value to set
     * @return the GeoDistanceFilter object itself.
     */
    public GeoDistanceFilter withField(String field) {
        this.field = field;
        return this;
    }

    /**
     * Get the location value.
     *
     * @return the location value
     */
    public GeoLocation location() {
        return this.location;
    }

    /**
     * Set the location value.
     *
     * @param location the location value to set
     * @return the GeoDistanceFilter object itself.
     */
    public GeoDistanceFilter withLocation(GeoLocation location) {
        this.location = location;
        return this;
    }

    /**
     * Get the distance value.
     *
     * @return the distance value
     */
    public double distance() {
        return this.distance;
    }

    /**
     * Set the distance value.
     *
     * @param distance the distance value to set
     * @return the GeoDistanceFilter object itself.
     */
    public GeoDistanceFilter withDistance(double distance) {
        this.distance = distance;
        return this;
    }

}
