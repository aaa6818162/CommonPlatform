/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package picturepark.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * The DocumentVersionConflictException model.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "kind")
@JsonTypeName("DocumentVersionConflictException")
public class DocumentVersionConflictException extends PictureparkConflictException {
    /**
     * The documentId property.
     */
    @JsonProperty(value = "documentId")
    private String documentId;

    /**
     * The documentType property.
     */
    @JsonProperty(value = "documentType")
    private String documentType;

    /**
     * The documentVersion property.
     */
    @JsonProperty(value = "documentVersion", required = true)
    private long documentVersion;

    /**
     * Get the documentId value.
     *
     * @return the documentId value
     */
    public String documentId() {
        return this.documentId;
    }

    /**
     * Set the documentId value.
     *
     * @param documentId the documentId value to set
     * @return the DocumentVersionConflictException object itself.
     */
    public DocumentVersionConflictException withDocumentId(String documentId) {
        this.documentId = documentId;
        return this;
    }

    /**
     * Get the documentType value.
     *
     * @return the documentType value
     */
    public String documentType() {
        return this.documentType;
    }

    /**
     * Set the documentType value.
     *
     * @param documentType the documentType value to set
     * @return the DocumentVersionConflictException object itself.
     */
    public DocumentVersionConflictException withDocumentType(String documentType) {
        this.documentType = documentType;
        return this;
    }

    /**
     * Get the documentVersion value.
     *
     * @return the documentVersion value
     */
    public long documentVersion() {
        return this.documentVersion;
    }

    /**
     * Set the documentVersion value.
     *
     * @param documentVersion the documentVersion value to set
     * @return the DocumentVersionConflictException object itself.
     */
    public DocumentVersionConflictException withDocumentVersion(long documentVersion) {
        this.documentVersion = documentVersion;
        return this;
    }

}
