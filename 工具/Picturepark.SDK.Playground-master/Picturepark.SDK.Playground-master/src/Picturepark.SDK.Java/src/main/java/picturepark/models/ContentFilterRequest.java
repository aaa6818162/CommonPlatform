/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package picturepark.models;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The ContentFilterRequest model.
 */
public class ContentFilterRequest {
    /**
     * Limits the simple search fields to the fields available in the specified
     * in the channel.
     */
    @JsonProperty(value = "channelIds")
    private List<String> channelIds;

    /**
     * Only searches the specified language values. Defaults to all metadata
     * languages of the language configuration.
     */
    @JsonProperty(value = "searchLanguages")
    private List<String> searchLanguages;

    /**
     * Defines the return language of translation values. Defaults to
     * x-default.
     */
    @JsonProperty(value = "displayLanguage")
    private String displayLanguage;

    /**
     * Limits the search by using a query string filter. The Lucene query
     * string syntax is supported. Defaults to *.
     */
    @JsonProperty(value = "searchString")
    private String searchString;

    /**
     * Type of search to be performed: against metadata, extracted fulltext
     * from documents or both. Default to Metadata. Possible values include:
     * 'Metadata', 'FullText', 'MetadataAndFullText'.
     */
    @JsonProperty(value = "searchType", required = true)
    private String searchType;

    /**
     * The collection id.
     */
    @JsonProperty(value = "collectionId")
    private String collectionId;

    /**
     * An optional search filter. Limits the content document result set.
     */
    @JsonProperty(value = "filter")
    private FilterBase filter;

    /**
     * Limits the content document result set to that life cycle state.
     * Defaults to ActiveOnly. Possible values include: 'ActiveOnly', 'All',
     * 'InactiveOnly', 'ActiveInactiveOnly'.
     */
    @JsonProperty(value = "lifeCycleFilter", required = true)
    private String lifeCycleFilter;

    /**
     * Limits the content document result set to specific ContentRights the
     * user has.
     */
    @JsonProperty(value = "rightsFilter")
    private List<String> rightsFilter;

    /**
     * Get the channelIds value.
     *
     * @return the channelIds value
     */
    public List<String> channelIds() {
        return this.channelIds;
    }

    /**
     * Set the channelIds value.
     *
     * @param channelIds the channelIds value to set
     * @return the ContentFilterRequest object itself.
     */
    public ContentFilterRequest withChannelIds(List<String> channelIds) {
        this.channelIds = channelIds;
        return this;
    }

    /**
     * Get the searchLanguages value.
     *
     * @return the searchLanguages value
     */
    public List<String> searchLanguages() {
        return this.searchLanguages;
    }

    /**
     * Set the searchLanguages value.
     *
     * @param searchLanguages the searchLanguages value to set
     * @return the ContentFilterRequest object itself.
     */
    public ContentFilterRequest withSearchLanguages(List<String> searchLanguages) {
        this.searchLanguages = searchLanguages;
        return this;
    }

    /**
     * Get the displayLanguage value.
     *
     * @return the displayLanguage value
     */
    public String displayLanguage() {
        return this.displayLanguage;
    }

    /**
     * Set the displayLanguage value.
     *
     * @param displayLanguage the displayLanguage value to set
     * @return the ContentFilterRequest object itself.
     */
    public ContentFilterRequest withDisplayLanguage(String displayLanguage) {
        this.displayLanguage = displayLanguage;
        return this;
    }

    /**
     * Get the searchString value.
     *
     * @return the searchString value
     */
    public String searchString() {
        return this.searchString;
    }

    /**
     * Set the searchString value.
     *
     * @param searchString the searchString value to set
     * @return the ContentFilterRequest object itself.
     */
    public ContentFilterRequest withSearchString(String searchString) {
        this.searchString = searchString;
        return this;
    }

    /**
     * Get the searchType value.
     *
     * @return the searchType value
     */
    public String searchType() {
        return this.searchType;
    }

    /**
     * Set the searchType value.
     *
     * @param searchType the searchType value to set
     * @return the ContentFilterRequest object itself.
     */
    public ContentFilterRequest withSearchType(String searchType) {
        this.searchType = searchType;
        return this;
    }

    /**
     * Get the collectionId value.
     *
     * @return the collectionId value
     */
    public String collectionId() {
        return this.collectionId;
    }

    /**
     * Set the collectionId value.
     *
     * @param collectionId the collectionId value to set
     * @return the ContentFilterRequest object itself.
     */
    public ContentFilterRequest withCollectionId(String collectionId) {
        this.collectionId = collectionId;
        return this;
    }

    /**
     * Get the filter value.
     *
     * @return the filter value
     */
    public FilterBase filter() {
        return this.filter;
    }

    /**
     * Set the filter value.
     *
     * @param filter the filter value to set
     * @return the ContentFilterRequest object itself.
     */
    public ContentFilterRequest withFilter(FilterBase filter) {
        this.filter = filter;
        return this;
    }

    /**
     * Get the lifeCycleFilter value.
     *
     * @return the lifeCycleFilter value
     */
    public String lifeCycleFilter() {
        return this.lifeCycleFilter;
    }

    /**
     * Set the lifeCycleFilter value.
     *
     * @param lifeCycleFilter the lifeCycleFilter value to set
     * @return the ContentFilterRequest object itself.
     */
    public ContentFilterRequest withLifeCycleFilter(String lifeCycleFilter) {
        this.lifeCycleFilter = lifeCycleFilter;
        return this;
    }

    /**
     * Get the rightsFilter value.
     *
     * @return the rightsFilter value
     */
    public List<String> rightsFilter() {
        return this.rightsFilter;
    }

    /**
     * Set the rightsFilter value.
     *
     * @param rightsFilter the rightsFilter value to set
     * @return the ContentFilterRequest object itself.
     */
    public ContentFilterRequest withRightsFilter(List<String> rightsFilter) {
        this.rightsFilter = rightsFilter;
        return this;
    }

}
