/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package picturepark.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * The GeoDistanceRangeFilter returns documents that exists within a range from
 * a specific point.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "kind")
@JsonTypeName("GeoDistanceRangeFilter")
public class GeoDistanceRangeFilter extends FilterBase {
    /**
     * The elastic search index field to execute the filter on.
     */
    @JsonProperty(value = "field")
    private String field;

    /**
     * The longitude/latitude configuration for the point of origin.
     */
    @JsonProperty(value = "location")
    private GeoLocation location;

    /**
     * The numeric range.
     */
    @JsonProperty(value = "range")
    private NumericRange range;

    /**
     * Get the field value.
     *
     * @return the field value
     */
    public String field() {
        return this.field;
    }

    /**
     * Set the field value.
     *
     * @param field the field value to set
     * @return the GeoDistanceRangeFilter object itself.
     */
    public GeoDistanceRangeFilter withField(String field) {
        this.field = field;
        return this;
    }

    /**
     * Get the location value.
     *
     * @return the location value
     */
    public GeoLocation location() {
        return this.location;
    }

    /**
     * Set the location value.
     *
     * @param location the location value to set
     * @return the GeoDistanceRangeFilter object itself.
     */
    public GeoDistanceRangeFilter withLocation(GeoLocation location) {
        this.location = location;
        return this;
    }

    /**
     * Get the range value.
     *
     * @return the range value
     */
    public NumericRange range() {
        return this.range;
    }

    /**
     * Set the range value.
     *
     * @param range the range value to set
     * @return the GeoDistanceRangeFilter object itself.
     */
    public GeoDistanceRangeFilter withRange(NumericRange range) {
        this.range = range;
        return this;
    }

}
