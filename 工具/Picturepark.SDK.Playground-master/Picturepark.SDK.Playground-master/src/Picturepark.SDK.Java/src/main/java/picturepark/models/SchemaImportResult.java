/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package picturepark.models;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Result information of a schema import operation.
 */
public class SchemaImportResult {
    /**
     * Number of schemas imported.
     */
    @JsonProperty(value = "importedSchemaCount", required = true)
    private int importedSchemaCount;

    /**
     * Number of schema skipped during import phase because they were already
     * found in the system.
     */
    @JsonProperty(value = "skippedSchemaCount", required = true)
    private int skippedSchemaCount;

    /**
     * Total number of schemas requested to be imported.
     */
    @JsonProperty(value = "totalSchemaCount", required = true)
    private int totalSchemaCount;

    /**
     * Ids of the schemas that were not imported because already found in the
     * system.
     */
    @JsonProperty(value = "skippedSchemaIds")
    private List<String> skippedSchemaIds;

    /**
     * Ids of the schemas that were successfully imported.
     */
    @JsonProperty(value = "importedSchemaIds")
    private List<String> importedSchemaIds;

    /**
     * Get the importedSchemaCount value.
     *
     * @return the importedSchemaCount value
     */
    public int importedSchemaCount() {
        return this.importedSchemaCount;
    }

    /**
     * Set the importedSchemaCount value.
     *
     * @param importedSchemaCount the importedSchemaCount value to set
     * @return the SchemaImportResult object itself.
     */
    public SchemaImportResult withImportedSchemaCount(int importedSchemaCount) {
        this.importedSchemaCount = importedSchemaCount;
        return this;
    }

    /**
     * Get the skippedSchemaCount value.
     *
     * @return the skippedSchemaCount value
     */
    public int skippedSchemaCount() {
        return this.skippedSchemaCount;
    }

    /**
     * Set the skippedSchemaCount value.
     *
     * @param skippedSchemaCount the skippedSchemaCount value to set
     * @return the SchemaImportResult object itself.
     */
    public SchemaImportResult withSkippedSchemaCount(int skippedSchemaCount) {
        this.skippedSchemaCount = skippedSchemaCount;
        return this;
    }

    /**
     * Get the totalSchemaCount value.
     *
     * @return the totalSchemaCount value
     */
    public int totalSchemaCount() {
        return this.totalSchemaCount;
    }

    /**
     * Set the totalSchemaCount value.
     *
     * @param totalSchemaCount the totalSchemaCount value to set
     * @return the SchemaImportResult object itself.
     */
    public SchemaImportResult withTotalSchemaCount(int totalSchemaCount) {
        this.totalSchemaCount = totalSchemaCount;
        return this;
    }

    /**
     * Get the skippedSchemaIds value.
     *
     * @return the skippedSchemaIds value
     */
    public List<String> skippedSchemaIds() {
        return this.skippedSchemaIds;
    }

    /**
     * Set the skippedSchemaIds value.
     *
     * @param skippedSchemaIds the skippedSchemaIds value to set
     * @return the SchemaImportResult object itself.
     */
    public SchemaImportResult withSkippedSchemaIds(List<String> skippedSchemaIds) {
        this.skippedSchemaIds = skippedSchemaIds;
        return this;
    }

    /**
     * Get the importedSchemaIds value.
     *
     * @return the importedSchemaIds value
     */
    public List<String> importedSchemaIds() {
        return this.importedSchemaIds;
    }

    /**
     * Set the importedSchemaIds value.
     *
     * @param importedSchemaIds the importedSchemaIds value to set
     * @return the SchemaImportResult object itself.
     */
    public SchemaImportResult withImportedSchemaIds(List<String> importedSchemaIds) {
        this.importedSchemaIds = importedSchemaIds;
        return this;
    }

}
