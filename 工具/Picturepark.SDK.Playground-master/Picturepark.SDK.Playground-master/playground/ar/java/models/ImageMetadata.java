/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package foobar.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * The ImageMetadata model.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "kind")
@JsonTypeName("ImageMetadata")
public class ImageMetadata extends FileMetadata {
    /**
     * The width property.
     */
    @JsonProperty(value = "width", required = true)
    private int width;

    /**
     * The height property.
     */
    @JsonProperty(value = "height", required = true)
    private int height;

    /**
     * The widthInInch property.
     */
    @JsonProperty(value = "widthInInch", required = true)
    private double widthInInch;

    /**
     * The heightInInch property.
     */
    @JsonProperty(value = "heightInInch", required = true)
    private double heightInInch;

    /**
     * The widthInCm property.
     */
    @JsonProperty(value = "widthInCm", required = true)
    private double widthInCm;

    /**
     * The heightInCm property.
     */
    @JsonProperty(value = "heightInCm", required = true)
    private double heightInCm;

    /**
     * The colorSpace property.
     */
    @JsonProperty(value = "colorSpace")
    private String colorSpace;

    /**
     * The colorProfile property.
     */
    @JsonProperty(value = "colorProfile")
    private String colorProfile;

    /**
     * The bitsPerPixel property.
     */
    @JsonProperty(value = "bitsPerPixel", required = true)
    private int bitsPerPixel;

    /**
     * The bitsPerChannel property.
     */
    @JsonProperty(value = "bitsPerChannel", required = true)
    private int bitsPerChannel;

    /**
     * The channels property.
     */
    @JsonProperty(value = "channels")
    private String channels;

    /**
     * The pixelFormat property.
     */
    @JsonProperty(value = "pixelFormat")
    private String pixelFormat;

    /**
     * The hasAlpha property.
     */
    @JsonProperty(value = "hasAlpha", required = true)
    private boolean hasAlpha;

    /**
     * The isIndexed property.
     */
    @JsonProperty(value = "isIndexed", required = true)
    private boolean isIndexed;

    /**
     * The isExtended property.
     */
    @JsonProperty(value = "isExtended", required = true)
    private boolean isExtended;

    /**
     * The horizontalResolution property.
     */
    @JsonProperty(value = "horizontalResolution", required = true)
    private double horizontalResolution;

    /**
     * The verticalResolution property.
     */
    @JsonProperty(value = "verticalResolution", required = true)
    private double verticalResolution;

    /**
     * The totalFrames property.
     */
    @JsonProperty(value = "totalFrames", required = true)
    private int totalFrames;

    /**
     * The totalUnspecifiedTiffExtraChannels property.
     */
    @JsonProperty(value = "totalUnspecifiedTiffExtraChannels", required = true)
    private int totalUnspecifiedTiffExtraChannels;

    /**
     * The hasExifData property.
     */
    @JsonProperty(value = "hasExifData", required = true)
    private boolean hasExifData;

    /**
     * The hasIptcData property.
     */
    @JsonProperty(value = "hasIptcData", required = true)
    private boolean hasIptcData;

    /**
     * The hasAdobeResourceData property.
     */
    @JsonProperty(value = "hasAdobeResourceData", required = true)
    private boolean hasAdobeResourceData;

    /**
     * The hasXmpData property.
     */
    @JsonProperty(value = "hasXmpData", required = true)
    private boolean hasXmpData;

    /**
     * The uncompressedSizeInBytes property.
     */
    @JsonProperty(value = "uncompressedSizeInBytes", required = true)
    private long uncompressedSizeInBytes;

    /**
     * Get the width value.
     *
     * @return the width value
     */
    public int width() {
        return this.width;
    }

    /**
     * Set the width value.
     *
     * @param width the width value to set
     * @return the ImageMetadata object itself.
     */
    public ImageMetadata withWidth(int width) {
        this.width = width;
        return this;
    }

    /**
     * Get the height value.
     *
     * @return the height value
     */
    public int height() {
        return this.height;
    }

    /**
     * Set the height value.
     *
     * @param height the height value to set
     * @return the ImageMetadata object itself.
     */
    public ImageMetadata withHeight(int height) {
        this.height = height;
        return this;
    }

    /**
     * Get the widthInInch value.
     *
     * @return the widthInInch value
     */
    public double widthInInch() {
        return this.widthInInch;
    }

    /**
     * Set the widthInInch value.
     *
     * @param widthInInch the widthInInch value to set
     * @return the ImageMetadata object itself.
     */
    public ImageMetadata withWidthInInch(double widthInInch) {
        this.widthInInch = widthInInch;
        return this;
    }

    /**
     * Get the heightInInch value.
     *
     * @return the heightInInch value
     */
    public double heightInInch() {
        return this.heightInInch;
    }

    /**
     * Set the heightInInch value.
     *
     * @param heightInInch the heightInInch value to set
     * @return the ImageMetadata object itself.
     */
    public ImageMetadata withHeightInInch(double heightInInch) {
        this.heightInInch = heightInInch;
        return this;
    }

    /**
     * Get the widthInCm value.
     *
     * @return the widthInCm value
     */
    public double widthInCm() {
        return this.widthInCm;
    }

    /**
     * Set the widthInCm value.
     *
     * @param widthInCm the widthInCm value to set
     * @return the ImageMetadata object itself.
     */
    public ImageMetadata withWidthInCm(double widthInCm) {
        this.widthInCm = widthInCm;
        return this;
    }

    /**
     * Get the heightInCm value.
     *
     * @return the heightInCm value
     */
    public double heightInCm() {
        return this.heightInCm;
    }

    /**
     * Set the heightInCm value.
     *
     * @param heightInCm the heightInCm value to set
     * @return the ImageMetadata object itself.
     */
    public ImageMetadata withHeightInCm(double heightInCm) {
        this.heightInCm = heightInCm;
        return this;
    }

    /**
     * Get the colorSpace value.
     *
     * @return the colorSpace value
     */
    public String colorSpace() {
        return this.colorSpace;
    }

    /**
     * Set the colorSpace value.
     *
     * @param colorSpace the colorSpace value to set
     * @return the ImageMetadata object itself.
     */
    public ImageMetadata withColorSpace(String colorSpace) {
        this.colorSpace = colorSpace;
        return this;
    }

    /**
     * Get the colorProfile value.
     *
     * @return the colorProfile value
     */
    public String colorProfile() {
        return this.colorProfile;
    }

    /**
     * Set the colorProfile value.
     *
     * @param colorProfile the colorProfile value to set
     * @return the ImageMetadata object itself.
     */
    public ImageMetadata withColorProfile(String colorProfile) {
        this.colorProfile = colorProfile;
        return this;
    }

    /**
     * Get the bitsPerPixel value.
     *
     * @return the bitsPerPixel value
     */
    public int bitsPerPixel() {
        return this.bitsPerPixel;
    }

    /**
     * Set the bitsPerPixel value.
     *
     * @param bitsPerPixel the bitsPerPixel value to set
     * @return the ImageMetadata object itself.
     */
    public ImageMetadata withBitsPerPixel(int bitsPerPixel) {
        this.bitsPerPixel = bitsPerPixel;
        return this;
    }

    /**
     * Get the bitsPerChannel value.
     *
     * @return the bitsPerChannel value
     */
    public int bitsPerChannel() {
        return this.bitsPerChannel;
    }

    /**
     * Set the bitsPerChannel value.
     *
     * @param bitsPerChannel the bitsPerChannel value to set
     * @return the ImageMetadata object itself.
     */
    public ImageMetadata withBitsPerChannel(int bitsPerChannel) {
        this.bitsPerChannel = bitsPerChannel;
        return this;
    }

    /**
     * Get the channels value.
     *
     * @return the channels value
     */
    public String channels() {
        return this.channels;
    }

    /**
     * Set the channels value.
     *
     * @param channels the channels value to set
     * @return the ImageMetadata object itself.
     */
    public ImageMetadata withChannels(String channels) {
        this.channels = channels;
        return this;
    }

    /**
     * Get the pixelFormat value.
     *
     * @return the pixelFormat value
     */
    public String pixelFormat() {
        return this.pixelFormat;
    }

    /**
     * Set the pixelFormat value.
     *
     * @param pixelFormat the pixelFormat value to set
     * @return the ImageMetadata object itself.
     */
    public ImageMetadata withPixelFormat(String pixelFormat) {
        this.pixelFormat = pixelFormat;
        return this;
    }

    /**
     * Get the hasAlpha value.
     *
     * @return the hasAlpha value
     */
    public boolean hasAlpha() {
        return this.hasAlpha;
    }

    /**
     * Set the hasAlpha value.
     *
     * @param hasAlpha the hasAlpha value to set
     * @return the ImageMetadata object itself.
     */
    public ImageMetadata withHasAlpha(boolean hasAlpha) {
        this.hasAlpha = hasAlpha;
        return this;
    }

    /**
     * Get the isIndexed value.
     *
     * @return the isIndexed value
     */
    public boolean isIndexed() {
        return this.isIndexed;
    }

    /**
     * Set the isIndexed value.
     *
     * @param isIndexed the isIndexed value to set
     * @return the ImageMetadata object itself.
     */
    public ImageMetadata withIsIndexed(boolean isIndexed) {
        this.isIndexed = isIndexed;
        return this;
    }

    /**
     * Get the isExtended value.
     *
     * @return the isExtended value
     */
    public boolean isExtended() {
        return this.isExtended;
    }

    /**
     * Set the isExtended value.
     *
     * @param isExtended the isExtended value to set
     * @return the ImageMetadata object itself.
     */
    public ImageMetadata withIsExtended(boolean isExtended) {
        this.isExtended = isExtended;
        return this;
    }

    /**
     * Get the horizontalResolution value.
     *
     * @return the horizontalResolution value
     */
    public double horizontalResolution() {
        return this.horizontalResolution;
    }

    /**
     * Set the horizontalResolution value.
     *
     * @param horizontalResolution the horizontalResolution value to set
     * @return the ImageMetadata object itself.
     */
    public ImageMetadata withHorizontalResolution(double horizontalResolution) {
        this.horizontalResolution = horizontalResolution;
        return this;
    }

    /**
     * Get the verticalResolution value.
     *
     * @return the verticalResolution value
     */
    public double verticalResolution() {
        return this.verticalResolution;
    }

    /**
     * Set the verticalResolution value.
     *
     * @param verticalResolution the verticalResolution value to set
     * @return the ImageMetadata object itself.
     */
    public ImageMetadata withVerticalResolution(double verticalResolution) {
        this.verticalResolution = verticalResolution;
        return this;
    }

    /**
     * Get the totalFrames value.
     *
     * @return the totalFrames value
     */
    public int totalFrames() {
        return this.totalFrames;
    }

    /**
     * Set the totalFrames value.
     *
     * @param totalFrames the totalFrames value to set
     * @return the ImageMetadata object itself.
     */
    public ImageMetadata withTotalFrames(int totalFrames) {
        this.totalFrames = totalFrames;
        return this;
    }

    /**
     * Get the totalUnspecifiedTiffExtraChannels value.
     *
     * @return the totalUnspecifiedTiffExtraChannels value
     */
    public int totalUnspecifiedTiffExtraChannels() {
        return this.totalUnspecifiedTiffExtraChannels;
    }

    /**
     * Set the totalUnspecifiedTiffExtraChannels value.
     *
     * @param totalUnspecifiedTiffExtraChannels the totalUnspecifiedTiffExtraChannels value to set
     * @return the ImageMetadata object itself.
     */
    public ImageMetadata withTotalUnspecifiedTiffExtraChannels(int totalUnspecifiedTiffExtraChannels) {
        this.totalUnspecifiedTiffExtraChannels = totalUnspecifiedTiffExtraChannels;
        return this;
    }

    /**
     * Get the hasExifData value.
     *
     * @return the hasExifData value
     */
    public boolean hasExifData() {
        return this.hasExifData;
    }

    /**
     * Set the hasExifData value.
     *
     * @param hasExifData the hasExifData value to set
     * @return the ImageMetadata object itself.
     */
    public ImageMetadata withHasExifData(boolean hasExifData) {
        this.hasExifData = hasExifData;
        return this;
    }

    /**
     * Get the hasIptcData value.
     *
     * @return the hasIptcData value
     */
    public boolean hasIptcData() {
        return this.hasIptcData;
    }

    /**
     * Set the hasIptcData value.
     *
     * @param hasIptcData the hasIptcData value to set
     * @return the ImageMetadata object itself.
     */
    public ImageMetadata withHasIptcData(boolean hasIptcData) {
        this.hasIptcData = hasIptcData;
        return this;
    }

    /**
     * Get the hasAdobeResourceData value.
     *
     * @return the hasAdobeResourceData value
     */
    public boolean hasAdobeResourceData() {
        return this.hasAdobeResourceData;
    }

    /**
     * Set the hasAdobeResourceData value.
     *
     * @param hasAdobeResourceData the hasAdobeResourceData value to set
     * @return the ImageMetadata object itself.
     */
    public ImageMetadata withHasAdobeResourceData(boolean hasAdobeResourceData) {
        this.hasAdobeResourceData = hasAdobeResourceData;
        return this;
    }

    /**
     * Get the hasXmpData value.
     *
     * @return the hasXmpData value
     */
    public boolean hasXmpData() {
        return this.hasXmpData;
    }

    /**
     * Set the hasXmpData value.
     *
     * @param hasXmpData the hasXmpData value to set
     * @return the ImageMetadata object itself.
     */
    public ImageMetadata withHasXmpData(boolean hasXmpData) {
        this.hasXmpData = hasXmpData;
        return this;
    }

    /**
     * Get the uncompressedSizeInBytes value.
     *
     * @return the uncompressedSizeInBytes value
     */
    public long uncompressedSizeInBytes() {
        return this.uncompressedSizeInBytes;
    }

    /**
     * Set the uncompressedSizeInBytes value.
     *
     * @param uncompressedSizeInBytes the uncompressedSizeInBytes value to set
     * @return the ImageMetadata object itself.
     */
    public ImageMetadata withUncompressedSizeInBytes(long uncompressedSizeInBytes) {
        this.uncompressedSizeInBytes = uncompressedSizeInBytes;
        return this;
    }

}
