/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package foobar.models;

import java.util.Map;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The RelationType model.
 */
public class RelationType {
    /**
     * The id property.
     */
    @JsonProperty(value = "id")
    private String id;

    /**
     * The names property.
     */
    @JsonProperty(value = "names")
    private Map<String, String> names;

    /**
     * Possible values include: 'Content', 'ListItem', 'User', 'Custom'.
     */
    @JsonProperty(value = "targetContext", required = true)
    private String targetContext;

    /**
     * The schemaId property.
     */
    @JsonProperty(value = "schemaId")
    private String schemaId;

    /**
     * The filter property.
     */
    @JsonProperty(value = "filter")
    private FilterBase filter;

    /**
     * Get the id value.
     *
     * @return the id value
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id value.
     *
     * @param id the id value to set
     * @return the RelationType object itself.
     */
    public RelationType withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the names value.
     *
     * @return the names value
     */
    public Map<String, String> names() {
        return this.names;
    }

    /**
     * Set the names value.
     *
     * @param names the names value to set
     * @return the RelationType object itself.
     */
    public RelationType withNames(Map<String, String> names) {
        this.names = names;
        return this;
    }

    /**
     * Get the targetContext value.
     *
     * @return the targetContext value
     */
    public String targetContext() {
        return this.targetContext;
    }

    /**
     * Set the targetContext value.
     *
     * @param targetContext the targetContext value to set
     * @return the RelationType object itself.
     */
    public RelationType withTargetContext(String targetContext) {
        this.targetContext = targetContext;
        return this;
    }

    /**
     * Get the schemaId value.
     *
     * @return the schemaId value
     */
    public String schemaId() {
        return this.schemaId;
    }

    /**
     * Set the schemaId value.
     *
     * @param schemaId the schemaId value to set
     * @return the RelationType object itself.
     */
    public RelationType withSchemaId(String schemaId) {
        this.schemaId = schemaId;
        return this;
    }

    /**
     * Get the filter value.
     *
     * @return the filter value
     */
    public FilterBase filter() {
        return this.filter;
    }

    /**
     * Set the filter value.
     *
     * @param filter the filter value to set
     * @return the RelationType object itself.
     */
    public RelationType withFilter(FilterBase filter) {
        this.filter = filter;
        return this;
    }

}
