/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package picturepark.models;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The ContentAggregationRequest model.
 */
public class ContentAggregationRequest {
    /**
     * Limits the search by using a query string filter. The Lucene query
     * string syntax is supported. Defaults to *.
     */
    @JsonProperty(value = "searchString")
    private String searchString;

    /**
     * Allow the backend to modify the search string if it generates a non
     * valid query.
     */
    @JsonProperty(value = "allowSearchStringRewrite", required = true)
    private boolean allowSearchStringRewrite;

    /**
     * An optional search filter. Limits the content document result set.
     */
    @JsonProperty(value = "filter")
    private FilterBase filter;

    /**
     * Special filters used to filter down on a specific aggregated value.
     */
    @JsonProperty(value = "aggregationFilters")
    private List<AggregationFilter> aggregationFilters;

    /**
     * Defines the aggregation resultset.
     */
    @JsonProperty(value = "aggregators")
    private List<AggregatorBase> aggregators;

    /**
     * Limits the simple search fields to the fields available in the specified
     * channel.
     */
    @JsonProperty(value = "channelId")
    private String channelId;

    /**
     * Defines the return language of translation values. Defaults to
     * x-default.
     */
    @JsonProperty(value = "displayLanguage")
    private String displayLanguage;

    /**
     * Only searches the specified language values. Defaults to all metadata
     * languages in configured within the customer's language configuration.
     */
    @JsonProperty(value = "searchLanguages")
    private List<String> searchLanguages;

    /**
     * The collection id.
     */
    @JsonProperty(value = "collectionId")
    private String collectionId;

    /**
     * Limits the content document result set to that life cycle state.
     * Defaults to ActiveOnly. Possible values include: 'ActiveOnly', 'All',
     * 'InactiveOnly'.
     */
    @JsonProperty(value = "lifeCycleFilter", required = true)
    private String lifeCycleFilter;

    /**
     * Type of search to be performed: against metadata, extracted fulltext
     * from documents or both. Default to Metadata. Possible values include:
     * 'Metadata', 'FullText', 'MetadataAndFullText'.
     */
    @JsonProperty(value = "searchType", required = true)
    private String searchType;

    /**
     * Get the searchString value.
     *
     * @return the searchString value
     */
    public String searchString() {
        return this.searchString;
    }

    /**
     * Set the searchString value.
     *
     * @param searchString the searchString value to set
     * @return the ContentAggregationRequest object itself.
     */
    public ContentAggregationRequest withSearchString(String searchString) {
        this.searchString = searchString;
        return this;
    }

    /**
     * Get the allowSearchStringRewrite value.
     *
     * @return the allowSearchStringRewrite value
     */
    public boolean allowSearchStringRewrite() {
        return this.allowSearchStringRewrite;
    }

    /**
     * Set the allowSearchStringRewrite value.
     *
     * @param allowSearchStringRewrite the allowSearchStringRewrite value to set
     * @return the ContentAggregationRequest object itself.
     */
    public ContentAggregationRequest withAllowSearchStringRewrite(boolean allowSearchStringRewrite) {
        this.allowSearchStringRewrite = allowSearchStringRewrite;
        return this;
    }

    /**
     * Get the filter value.
     *
     * @return the filter value
     */
    public FilterBase filter() {
        return this.filter;
    }

    /**
     * Set the filter value.
     *
     * @param filter the filter value to set
     * @return the ContentAggregationRequest object itself.
     */
    public ContentAggregationRequest withFilter(FilterBase filter) {
        this.filter = filter;
        return this;
    }

    /**
     * Get the aggregationFilters value.
     *
     * @return the aggregationFilters value
     */
    public List<AggregationFilter> aggregationFilters() {
        return this.aggregationFilters;
    }

    /**
     * Set the aggregationFilters value.
     *
     * @param aggregationFilters the aggregationFilters value to set
     * @return the ContentAggregationRequest object itself.
     */
    public ContentAggregationRequest withAggregationFilters(List<AggregationFilter> aggregationFilters) {
        this.aggregationFilters = aggregationFilters;
        return this;
    }

    /**
     * Get the aggregators value.
     *
     * @return the aggregators value
     */
    public List<AggregatorBase> aggregators() {
        return this.aggregators;
    }

    /**
     * Set the aggregators value.
     *
     * @param aggregators the aggregators value to set
     * @return the ContentAggregationRequest object itself.
     */
    public ContentAggregationRequest withAggregators(List<AggregatorBase> aggregators) {
        this.aggregators = aggregators;
        return this;
    }

    /**
     * Get the channelId value.
     *
     * @return the channelId value
     */
    public String channelId() {
        return this.channelId;
    }

    /**
     * Set the channelId value.
     *
     * @param channelId the channelId value to set
     * @return the ContentAggregationRequest object itself.
     */
    public ContentAggregationRequest withChannelId(String channelId) {
        this.channelId = channelId;
        return this;
    }

    /**
     * Get the displayLanguage value.
     *
     * @return the displayLanguage value
     */
    public String displayLanguage() {
        return this.displayLanguage;
    }

    /**
     * Set the displayLanguage value.
     *
     * @param displayLanguage the displayLanguage value to set
     * @return the ContentAggregationRequest object itself.
     */
    public ContentAggregationRequest withDisplayLanguage(String displayLanguage) {
        this.displayLanguage = displayLanguage;
        return this;
    }

    /**
     * Get the searchLanguages value.
     *
     * @return the searchLanguages value
     */
    public List<String> searchLanguages() {
        return this.searchLanguages;
    }

    /**
     * Set the searchLanguages value.
     *
     * @param searchLanguages the searchLanguages value to set
     * @return the ContentAggregationRequest object itself.
     */
    public ContentAggregationRequest withSearchLanguages(List<String> searchLanguages) {
        this.searchLanguages = searchLanguages;
        return this;
    }

    /**
     * Get the collectionId value.
     *
     * @return the collectionId value
     */
    public String collectionId() {
        return this.collectionId;
    }

    /**
     * Set the collectionId value.
     *
     * @param collectionId the collectionId value to set
     * @return the ContentAggregationRequest object itself.
     */
    public ContentAggregationRequest withCollectionId(String collectionId) {
        this.collectionId = collectionId;
        return this;
    }

    /**
     * Get the lifeCycleFilter value.
     *
     * @return the lifeCycleFilter value
     */
    public String lifeCycleFilter() {
        return this.lifeCycleFilter;
    }

    /**
     * Set the lifeCycleFilter value.
     *
     * @param lifeCycleFilter the lifeCycleFilter value to set
     * @return the ContentAggregationRequest object itself.
     */
    public ContentAggregationRequest withLifeCycleFilter(String lifeCycleFilter) {
        this.lifeCycleFilter = lifeCycleFilter;
        return this;
    }

    /**
     * Get the searchType value.
     *
     * @return the searchType value
     */
    public String searchType() {
        return this.searchType;
    }

    /**
     * Set the searchType value.
     *
     * @param searchType the searchType value to set
     * @return the ContentAggregationRequest object itself.
     */
    public ContentAggregationRequest withSearchType(String searchType) {
        this.searchType = searchType;
        return this;
    }

}
