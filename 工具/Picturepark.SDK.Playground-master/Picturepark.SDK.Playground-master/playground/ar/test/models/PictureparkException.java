/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package picturepark.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonSubTypes;

/**
 * The PictureparkException model.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "kind")
@JsonTypeName("PictureparkException")
@JsonSubTypes({
    @JsonSubTypes.Type(name = "PictureparkBusinessException", value = PictureparkBusinessException.class),
    @JsonSubTypes.Type(name = "CustomerHostNotFoundException", value = CustomerHostNotFoundException.class),
    @JsonSubTypes.Type(name = "CustomerNotFoundException", value = CustomerNotFoundException.class),
    @JsonSubTypes.Type(name = "InvalidCustomerException", value = InvalidCustomerException.class),
    @JsonSubTypes.Type(name = "InvalidUserOrPasswordException", value = InvalidUserOrPasswordException.class),
    @JsonSubTypes.Type(name = "MessagePerformerTaskCanceledException", value = MessagePerformerTaskCanceledException.class),
    @JsonSubTypes.Type(name = "ServiceProviderCreateException", value = ServiceProviderCreateException.class),
    @JsonSubTypes.Type(name = "ServiceProviderDeleteException", value = ServiceProviderDeleteException.class),
    @JsonSubTypes.Type(name = "ServiceProviderNotFoundException", value = ServiceProviderNotFoundException.class)
})
public class PictureparkException extends Exception {
    /**
     * Possible values include: 'Critical', 'Error', 'Warning', 'Information',
     * 'Verbose'.
     */
    @JsonProperty(value = "traceLevel", required = true)
    private String traceLevel;

    /**
     * The traceId property.
     */
    @JsonProperty(value = "traceId")
    private String traceId;

    /**
     * The traceJobId property.
     */
    @JsonProperty(value = "traceJobId")
    private String traceJobId;

    /**
     * The httpStatusCode property.
     */
    @JsonProperty(value = "httpStatusCode", required = true)
    private int httpStatusCode;

    /**
     * Get the traceLevel value.
     *
     * @return the traceLevel value
     */
    public String traceLevel() {
        return this.traceLevel;
    }

    /**
     * Set the traceLevel value.
     *
     * @param traceLevel the traceLevel value to set
     * @return the PictureparkException object itself.
     */
    public PictureparkException withTraceLevel(String traceLevel) {
        this.traceLevel = traceLevel;
        return this;
    }

    /**
     * Get the traceId value.
     *
     * @return the traceId value
     */
    public String traceId() {
        return this.traceId;
    }

    /**
     * Set the traceId value.
     *
     * @param traceId the traceId value to set
     * @return the PictureparkException object itself.
     */
    public PictureparkException withTraceId(String traceId) {
        this.traceId = traceId;
        return this;
    }

    /**
     * Get the traceJobId value.
     *
     * @return the traceJobId value
     */
    public String traceJobId() {
        return this.traceJobId;
    }

    /**
     * Set the traceJobId value.
     *
     * @param traceJobId the traceJobId value to set
     * @return the PictureparkException object itself.
     */
    public PictureparkException withTraceJobId(String traceJobId) {
        this.traceJobId = traceJobId;
        return this;
    }

    /**
     * Get the httpStatusCode value.
     *
     * @return the httpStatusCode value
     */
    public int httpStatusCode() {
        return this.httpStatusCode;
    }

    /**
     * Set the httpStatusCode value.
     *
     * @param httpStatusCode the httpStatusCode value to set
     * @return the PictureparkException object itself.
     */
    public PictureparkException withHttpStatusCode(int httpStatusCode) {
        this.httpStatusCode = httpStatusCode;
        return this;
    }

}
