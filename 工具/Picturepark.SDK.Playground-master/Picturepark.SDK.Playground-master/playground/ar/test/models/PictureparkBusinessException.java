/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package picturepark.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonSubTypes;

/**
 * The PictureparkBusinessException model.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "kind")
@JsonTypeName("PictureparkBusinessException")
@JsonSubTypes({
    @JsonSubTypes.Type(name = "PictureparkApplicationException", value = PictureparkApplicationException.class),
    @JsonSubTypes.Type(name = "PictureparkArgumentNullException", value = PictureparkArgumentNullException.class),
    @JsonSubTypes.Type(name = "ContentNotFoundException", value = ContentNotFoundException.class),
    @JsonSubTypes.Type(name = "BusinessProcessDefinitionCreateException", value = BusinessProcessDefinitionCreateException.class),
    @JsonSubTypes.Type(name = "BusinessProcessDefinitionNotFoundException", value = BusinessProcessDefinitionNotFoundException.class),
    @JsonSubTypes.Type(name = "BusinessProcessNotFoundException", value = BusinessProcessNotFoundException.class),
    @JsonSubTypes.Type(name = "DocumentNotFoundException", value = DocumentNotFoundException.class),
    @JsonSubTypes.Type(name = "DocumentVersionNotFoundException", value = DocumentVersionNotFoundException.class),
    @JsonSubTypes.Type(name = "DriveRequestException", value = DriveRequestException.class),
    @JsonSubTypes.Type(name = "DuplicateRightException", value = DuplicateRightException.class),
    @JsonSubTypes.Type(name = "DuplicateDocumentException", value = DuplicateDocumentException.class),
    @JsonSubTypes.Type(name = "DuplicateAggregatorException", value = DuplicateAggregatorException.class),
    @JsonSubTypes.Type(name = "FailedToLockException", value = FailedToLockException.class),
    @JsonSubTypes.Type(name = "IndexException", value = IndexException.class),
    @JsonSubTypes.Type(name = "InvalidArgumentException", value = InvalidArgumentException.class),
    @JsonSubTypes.Type(name = "PictureparkInvalidMetadataException", value = PictureparkInvalidMetadataException.class),
    @JsonSubTypes.Type(name = "InvalidStateException", value = InvalidStateException.class),
    @JsonSubTypes.Type(name = "PictureparkMappingException", value = PictureparkMappingException.class),
    @JsonSubTypes.Type(name = "NotFoundException", value = NotFoundException.class),
    @JsonSubTypes.Type(name = "ObjectStoreException", value = ObjectStoreException.class),
    @JsonSubTypes.Type(name = "ObjectStoreResponseException", value = ObjectStoreResponseException.class),
    @JsonSubTypes.Type(name = "PictureparkOperationCanceledException", value = PictureparkOperationCanceledException.class),
    @JsonSubTypes.Type(name = "OperationTimeoutException", value = OperationTimeoutException.class),
    @JsonSubTypes.Type(name = "OutputNotFoundException", value = OutputNotFoundException.class),
    @JsonSubTypes.Type(name = "PermissionException", value = PermissionException.class),
    @JsonSubTypes.Type(name = "QueryException", value = QueryException.class),
    @JsonSubTypes.Type(name = "RenderingException", value = RenderingException.class),
    @JsonSubTypes.Type(name = "RenderingJobItemNotSetException", value = RenderingJobItemNotSetException.class),
    @JsonSubTypes.Type(name = "TokenValidationException", value = TokenValidationException.class),
    @JsonSubTypes.Type(name = "UnknownException", value = UnknownException.class),
    @JsonSubTypes.Type(name = "UserNotFoundException", value = UserNotFoundException.class),
    @JsonSubTypes.Type(name = "UserPermanentlyRemovedException", value = UserPermanentlyRemovedException.class),
    @JsonSubTypes.Type(name = "UserRoleAssignedException", value = UserRoleAssignedException.class),
    @JsonSubTypes.Type(name = "UserRolesRightsAssignedException", value = UserRolesRightsAssignedException.class)
})
public class PictureparkBusinessException extends PictureparkException {
    /**
     * The customerId property.
     */
    @JsonProperty(value = "customerId")
    private String customerId;

    /**
     * The customerAlias property.
     */
    @JsonProperty(value = "customerAlias")
    private String customerAlias;

    /**
     * The userId property.
     */
    @JsonProperty(value = "userId")
    private String userId;

    /**
     * Get the customerId value.
     *
     * @return the customerId value
     */
    public String customerId() {
        return this.customerId;
    }

    /**
     * Set the customerId value.
     *
     * @param customerId the customerId value to set
     * @return the PictureparkBusinessException object itself.
     */
    public PictureparkBusinessException withCustomerId(String customerId) {
        this.customerId = customerId;
        return this;
    }

    /**
     * Get the customerAlias value.
     *
     * @return the customerAlias value
     */
    public String customerAlias() {
        return this.customerAlias;
    }

    /**
     * Set the customerAlias value.
     *
     * @param customerAlias the customerAlias value to set
     * @return the PictureparkBusinessException object itself.
     */
    public PictureparkBusinessException withCustomerAlias(String customerAlias) {
        this.customerAlias = customerAlias;
        return this;
    }

    /**
     * Get the userId value.
     *
     * @return the userId value
     */
    public String userId() {
        return this.userId;
    }

    /**
     * Set the userId value.
     *
     * @param userId the userId value to set
     * @return the PictureparkBusinessException object itself.
     */
    public PictureparkBusinessException withUserId(String userId) {
        this.userId = userId;
        return this;
    }

}
