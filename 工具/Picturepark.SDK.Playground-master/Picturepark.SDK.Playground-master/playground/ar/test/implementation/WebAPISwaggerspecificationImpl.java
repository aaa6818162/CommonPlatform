/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package picturepark.implementation;

import picturepark.WebAPISwaggerspecification;
import picturepark.Contents;
import picturepark.BusinessProcess;
import picturepark.DocumentHistorys;
import picturepark.JsonSchemas;
import picturepark.ListItems;
import picturepark.LiveStreams;
import picturepark.Schemas;
import picturepark.Permissions;
import picturepark.PublicAccess;
import picturepark.Shares;
import picturepark.Transfers;
import picturepark.Users;
import picturepark.Outputs;
import picturepark.Profiles;
import com.microsoft.rest.ServiceClient;
import com.microsoft.rest.RestClient;
import okhttp3.OkHttpClient;
import retrofit2.Retrofit;

/**
 * Initializes a new instance of the WebAPISwaggerspecification class.
 */
public class WebAPISwaggerspecificationImpl extends ServiceClient implements WebAPISwaggerspecification {

    /**
     * The Contents object to access its operations.
     */
    private Contents contents;

    /**
     * Gets the Contents object to access its operations.
     * @return the Contents object.
     */
    public Contents contents() {
        return this.contents;
    }

    /**
     * The BusinessProcess object to access its operations.
     */
    private BusinessProcess businessProcess;

    /**
     * Gets the BusinessProcess object to access its operations.
     * @return the BusinessProcess object.
     */
    public BusinessProcess businessProcess() {
        return this.businessProcess;
    }

    /**
     * The DocumentHistorys object to access its operations.
     */
    private DocumentHistorys documentHistorys;

    /**
     * Gets the DocumentHistorys object to access its operations.
     * @return the DocumentHistorys object.
     */
    public DocumentHistorys documentHistorys() {
        return this.documentHistorys;
    }

    /**
     * The JsonSchemas object to access its operations.
     */
    private JsonSchemas jsonSchemas;

    /**
     * Gets the JsonSchemas object to access its operations.
     * @return the JsonSchemas object.
     */
    public JsonSchemas jsonSchemas() {
        return this.jsonSchemas;
    }

    /**
     * The ListItems object to access its operations.
     */
    private ListItems listItems;

    /**
     * Gets the ListItems object to access its operations.
     * @return the ListItems object.
     */
    public ListItems listItems() {
        return this.listItems;
    }

    /**
     * The LiveStreams object to access its operations.
     */
    private LiveStreams liveStreams;

    /**
     * Gets the LiveStreams object to access its operations.
     * @return the LiveStreams object.
     */
    public LiveStreams liveStreams() {
        return this.liveStreams;
    }

    /**
     * The Schemas object to access its operations.
     */
    private Schemas schemas;

    /**
     * Gets the Schemas object to access its operations.
     * @return the Schemas object.
     */
    public Schemas schemas() {
        return this.schemas;
    }

    /**
     * The Permissions object to access its operations.
     */
    private Permissions permissions;

    /**
     * Gets the Permissions object to access its operations.
     * @return the Permissions object.
     */
    public Permissions permissions() {
        return this.permissions;
    }

    /**
     * The PublicAccess object to access its operations.
     */
    private PublicAccess publicAccess;

    /**
     * Gets the PublicAccess object to access its operations.
     * @return the PublicAccess object.
     */
    public PublicAccess publicAccess() {
        return this.publicAccess;
    }

    /**
     * The Shares object to access its operations.
     */
    private Shares shares;

    /**
     * Gets the Shares object to access its operations.
     * @return the Shares object.
     */
    public Shares shares() {
        return this.shares;
    }

    /**
     * The Transfers object to access its operations.
     */
    private Transfers transfers;

    /**
     * Gets the Transfers object to access its operations.
     * @return the Transfers object.
     */
    public Transfers transfers() {
        return this.transfers;
    }

    /**
     * The Users object to access its operations.
     */
    private Users users;

    /**
     * Gets the Users object to access its operations.
     * @return the Users object.
     */
    public Users users() {
        return this.users;
    }

    /**
     * The Outputs object to access its operations.
     */
    private Outputs outputs;

    /**
     * Gets the Outputs object to access its operations.
     * @return the Outputs object.
     */
    public Outputs outputs() {
        return this.outputs;
    }

    /**
     * The Profiles object to access its operations.
     */
    private Profiles profiles;

    /**
     * Gets the Profiles object to access its operations.
     * @return the Profiles object.
     */
    public Profiles profiles() {
        return this.profiles;
    }

    /**
     * Initializes an instance of WebAPISwaggerspecification client.
     */
    public WebAPISwaggerspecificationImpl() {
        this("http://localhost");
    }

    /**
     * Initializes an instance of WebAPISwaggerspecification client.
     *
     * @param baseUrl the base URL of the host
     */
    public WebAPISwaggerspecificationImpl(String baseUrl) {
        super(baseUrl);
        initialize();
    }

    /**
     * Initializes an instance of WebAPISwaggerspecification client.
     *
     * @param clientBuilder the builder for building an OkHttp client, bundled with user configurations
     * @param restBuilder the builder for building an Retrofit client, bundled with user configurations
     */
    public WebAPISwaggerspecificationImpl(OkHttpClient.Builder clientBuilder, Retrofit.Builder restBuilder) {
        this("http://localhost", clientBuilder, restBuilder);
        initialize();
    }

    /**
     * Initializes an instance of WebAPISwaggerspecification client.
     *
     * @param baseUrl the base URL of the host
     * @param clientBuilder the builder for building an OkHttp client, bundled with user configurations
     * @param restBuilder the builder for building an Retrofit client, bundled with user configurations
     */
    public WebAPISwaggerspecificationImpl(String baseUrl, OkHttpClient.Builder clientBuilder, Retrofit.Builder restBuilder) {
        super(baseUrl, clientBuilder, restBuilder);
        initialize();
    }

    /**
     * Initializes an instance of WebAPISwaggerspecification client.
     *
     * @param restClient the REST client containing pre-configured settings
     */
    public WebAPISwaggerspecificationImpl(RestClient restClient) {
        super(restClient);
        initialize();
    }

    private void initialize() {
        this.contents = new ContentsImpl(retrofit(), this);
        this.businessProcess = new BusinessProcessImpl(retrofit(), this);
        this.documentHistorys = new DocumentHistorysImpl(retrofit(), this);
        this.jsonSchemas = new JsonSchemasImpl(retrofit(), this);
        this.listItems = new ListItemsImpl(retrofit(), this);
        this.liveStreams = new LiveStreamsImpl(retrofit(), this);
        this.schemas = new SchemasImpl(retrofit(), this);
        this.permissions = new PermissionsImpl(retrofit(), this);
        this.publicAccess = new PublicAccessImpl(retrofit(), this);
        this.shares = new SharesImpl(retrofit(), this);
        this.transfers = new TransfersImpl(retrofit(), this);
        this.users = new UsersImpl(retrofit(), this);
        this.outputs = new OutputsImpl(retrofit(), this);
        this.profiles = new ProfilesImpl(retrofit(), this);
    }
}
