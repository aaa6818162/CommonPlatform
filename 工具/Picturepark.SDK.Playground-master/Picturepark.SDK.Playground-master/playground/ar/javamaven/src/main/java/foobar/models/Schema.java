/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package foobar.models;

import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The Schema model.
 */
public class Schema {
    /**
     * The schema id.
     */
    @JsonProperty(value = "id")
    private String id;

    /**
     * The parent schema id.
     */
    @JsonProperty(value = "parentSchemaId")
    private String parentSchemaId;

    /**
     * Types control schema usage.
     */
    @JsonProperty(value = "types")
    private List<String> types;

    /**
     * The names property.
     */
    @JsonProperty(value = "names")
    private Map<String, String> names;

    /**
     * The descriptions property.
     */
    @JsonProperty(value = "descriptions")
    private Map<String, String> descriptions;

    /**
     * An optional id list of schemas with type layer.
     */
    @JsonProperty(value = "layerSchemaIds")
    private List<String> layerSchemaIds;

    /**
     * The count of all fields.
     */
    @JsonProperty(value = "fieldCount", required = true)
    private int fieldCount;

    /**
     * The count of all schema descendants with a immediate inheritance.
     */
    @JsonProperty(value = "childCount", required = true)
    private int childCount;

    /**
     * The descendancy depth of the schema.
     */
    @JsonProperty(value = "level", required = true)
    private int level;

    /**
     * Is true when schema is system provided.
     */
    @JsonProperty(value = "system", required = true)
    private boolean system;

    /**
     * Get the id value.
     *
     * @return the id value
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id value.
     *
     * @param id the id value to set
     * @return the Schema object itself.
     */
    public Schema withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the parentSchemaId value.
     *
     * @return the parentSchemaId value
     */
    public String parentSchemaId() {
        return this.parentSchemaId;
    }

    /**
     * Set the parentSchemaId value.
     *
     * @param parentSchemaId the parentSchemaId value to set
     * @return the Schema object itself.
     */
    public Schema withParentSchemaId(String parentSchemaId) {
        this.parentSchemaId = parentSchemaId;
        return this;
    }

    /**
     * Get the types value.
     *
     * @return the types value
     */
    public List<String> types() {
        return this.types;
    }

    /**
     * Set the types value.
     *
     * @param types the types value to set
     * @return the Schema object itself.
     */
    public Schema withTypes(List<String> types) {
        this.types = types;
        return this;
    }

    /**
     * Get the names value.
     *
     * @return the names value
     */
    public Map<String, String> names() {
        return this.names;
    }

    /**
     * Set the names value.
     *
     * @param names the names value to set
     * @return the Schema object itself.
     */
    public Schema withNames(Map<String, String> names) {
        this.names = names;
        return this;
    }

    /**
     * Get the descriptions value.
     *
     * @return the descriptions value
     */
    public Map<String, String> descriptions() {
        return this.descriptions;
    }

    /**
     * Set the descriptions value.
     *
     * @param descriptions the descriptions value to set
     * @return the Schema object itself.
     */
    public Schema withDescriptions(Map<String, String> descriptions) {
        this.descriptions = descriptions;
        return this;
    }

    /**
     * Get the layerSchemaIds value.
     *
     * @return the layerSchemaIds value
     */
    public List<String> layerSchemaIds() {
        return this.layerSchemaIds;
    }

    /**
     * Set the layerSchemaIds value.
     *
     * @param layerSchemaIds the layerSchemaIds value to set
     * @return the Schema object itself.
     */
    public Schema withLayerSchemaIds(List<String> layerSchemaIds) {
        this.layerSchemaIds = layerSchemaIds;
        return this;
    }

    /**
     * Get the fieldCount value.
     *
     * @return the fieldCount value
     */
    public int fieldCount() {
        return this.fieldCount;
    }

    /**
     * Set the fieldCount value.
     *
     * @param fieldCount the fieldCount value to set
     * @return the Schema object itself.
     */
    public Schema withFieldCount(int fieldCount) {
        this.fieldCount = fieldCount;
        return this;
    }

    /**
     * Get the childCount value.
     *
     * @return the childCount value
     */
    public int childCount() {
        return this.childCount;
    }

    /**
     * Set the childCount value.
     *
     * @param childCount the childCount value to set
     * @return the Schema object itself.
     */
    public Schema withChildCount(int childCount) {
        this.childCount = childCount;
        return this;
    }

    /**
     * Get the level value.
     *
     * @return the level value
     */
    public int level() {
        return this.level;
    }

    /**
     * Set the level value.
     *
     * @param level the level value to set
     * @return the Schema object itself.
     */
    public Schema withLevel(int level) {
        this.level = level;
        return this;
    }

    /**
     * Get the system value.
     *
     * @return the system value
     */
    public boolean system() {
        return this.system;
    }

    /**
     * Set the system value.
     *
     * @param system the system value to set
     * @return the Schema object itself.
     */
    public Schema withSystem(boolean system) {
        this.system = system;
        return this;
    }

}
