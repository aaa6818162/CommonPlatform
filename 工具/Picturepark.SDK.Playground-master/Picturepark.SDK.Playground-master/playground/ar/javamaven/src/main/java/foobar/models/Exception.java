/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package foobar.models;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The Exception model.
 */
public class Exception {
    /**
     * The message property.
     */
    @JsonProperty(value = "message")
    private String message;

    /**
     * The innerException property.
     */
    @JsonProperty(value = "innerException")
    private Exception innerException;

    /**
     * The stackTrace property.
     */
    @JsonProperty(value = "stackTrace")
    private String stackTrace;

    /**
     * The source property.
     */
    @JsonProperty(value = "source")
    private String source;

    /**
     * Get the message value.
     *
     * @return the message value
     */
    public String message() {
        return this.message;
    }

    /**
     * Set the message value.
     *
     * @param message the message value to set
     * @return the Exception object itself.
     */
    public Exception withMessage(String message) {
        this.message = message;
        return this;
    }

    /**
     * Get the innerException value.
     *
     * @return the innerException value
     */
    public Exception innerException() {
        return this.innerException;
    }

    /**
     * Set the innerException value.
     *
     * @param innerException the innerException value to set
     * @return the Exception object itself.
     */
    public Exception withInnerException(Exception innerException) {
        this.innerException = innerException;
        return this;
    }

    /**
     * Get the stackTrace value.
     *
     * @return the stackTrace value
     */
    public String stackTrace() {
        return this.stackTrace;
    }

    /**
     * Set the stackTrace value.
     *
     * @param stackTrace the stackTrace value to set
     * @return the Exception object itself.
     */
    public Exception withStackTrace(String stackTrace) {
        this.stackTrace = stackTrace;
        return this;
    }

    /**
     * Get the source value.
     *
     * @return the source value
     */
    public String source() {
        return this.source;
    }

    /**
     * Set the source value.
     *
     * @param source the source value to set
     * @return the Exception object itself.
     */
    public Exception withSource(String source) {
        this.source = source;
        return this;
    }

}
