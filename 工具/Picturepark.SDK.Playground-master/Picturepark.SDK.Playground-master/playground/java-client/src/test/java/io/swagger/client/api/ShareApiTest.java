/*
 * Web API Swagger specification
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.BaseResultOfShareBase;
import io.swagger.client.model.ContentNotFoundException;
import io.swagger.client.model.CreateShareResult;
import io.swagger.client.model.ObjectAggregationResult;
import io.swagger.client.model.PictureparkException;
import io.swagger.client.model.ShareAggregationRequest;
import io.swagger.client.model.ShareBaseCreateRequest;
import io.swagger.client.model.ShareBaseDetail;
import io.swagger.client.model.ShareBaseUpdateRequest;
import io.swagger.client.model.ShareSearchRequest;
import io.swagger.client.model.ShareSearchResult;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ShareApi
 */
@Ignore
public class ShareApiTest {

    private final ShareApi api = new ShareApi();

    
    /**
     * Aggregate
     *
     * Aggregates own shares
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void shareAggregateTest() throws ApiException {
        ShareAggregationRequest request = null;
        ObjectAggregationResult response = api.shareAggregate(request);

        // TODO: test validations
    }
    
    /**
     * Create single
     *
     * Create a new share (basic or embed).
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void shareCreateTest() throws ApiException {
        ShareBaseCreateRequest request = null;
        CreateShareResult response = api.shareCreate(request);

        // TODO: test validations
    }
    
    /**
     * Get single
     *
     * Get share by id (basic or embed)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void shareGetTest() throws ApiException {
        String id = null;
        ShareBaseDetail response = api.shareGet(id);

        // TODO: test validations
    }
    
    /**
     * Search
     *
     * Search own shares
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void shareSearchTest() throws ApiException {
        ShareSearchRequest request = null;
        ShareSearchResult response = api.shareSearch(request);

        // TODO: test validations
    }
    
    /**
     * Update single
     *
     * The update of share is executed asynchronous. However, for the specified timeout completion of the update process is awaited. If the update process is not completed by reaching the specified timeout, the update process continues, but null is returned.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void shareUpdateTest() throws ApiException {
        String id = null;
        ShareBaseUpdateRequest updateRequest = null;
        Boolean resolve = null;
        Integer timeout = null;
        BaseResultOfShareBase response = api.shareUpdate(id, updateRequest, resolve, timeout);

        // TODO: test validations
    }
    
}
