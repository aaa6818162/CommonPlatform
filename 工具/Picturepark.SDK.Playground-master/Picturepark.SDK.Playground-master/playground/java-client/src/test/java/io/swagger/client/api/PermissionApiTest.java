/*
 * Web API Swagger specification
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.ContentPermissionSetDetail;
import io.swagger.client.model.PermissionSetSearchRequest;
import io.swagger.client.model.PermissionSetSearchResult;
import io.swagger.client.model.PictureparkException;
import io.swagger.client.model.SchemaPermissionSetDetail;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PermissionApi
 */
@Ignore
public class PermissionApiTest {

    private final PermissionApi api = new PermissionApi();

    
    /**
     * Get Content Permission Single
     *
     * Gets the content permission set detail information by the content permission set id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void permissionGetContentPermissionsTest() throws ApiException {
        String permissionSetId = null;
        ContentPermissionSetDetail response = api.permissionGetContentPermissions(permissionSetId);

        // TODO: test validations
    }
    
    /**
     * Get Schema Permission Single
     *
     * Gets the schema permission set detail information by the schema permission set id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void permissionGetSchemaPermissionsTest() throws ApiException {
        String permissionSetId = null;
        SchemaPermissionSetDetail response = api.permissionGetSchemaPermissions(permissionSetId);

        // TODO: test validations
    }
    
    /**
     * Get UserRight validation result
     *
     * Validates if the User has a given UserRight
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void permissionGetUserPermissionsTest() throws ApiException {
        String permission = null;
        Boolean response = api.permissionGetUserPermissions(permission);

        // TODO: test validations
    }
    
    /**
     * Search Content Permissions
     *
     * Searches content permission sets as specified in the search request.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void permissionSearchContentPermissionsTest() throws ApiException {
        PermissionSetSearchRequest request = null;
        PermissionSetSearchResult response = api.permissionSearchContentPermissions(request);

        // TODO: test validations
    }
    
    /**
     * Search Schema Permissions
     *
     * Searches schema permission sets as specified in the search request.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void permissionSearchSchemaPermissionsTest() throws ApiException {
        PermissionSetSearchRequest request = null;
        PermissionSetSearchResult response = api.permissionSearchSchemaPermissions(request);

        // TODO: test validations
    }
    
}
