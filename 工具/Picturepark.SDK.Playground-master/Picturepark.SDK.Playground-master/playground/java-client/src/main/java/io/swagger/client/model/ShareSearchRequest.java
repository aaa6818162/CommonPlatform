/*
 * Web API Swagger specification
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.SortInfo;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ShareSearchRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-10-04T14:36:42.044Z")
public class ShareSearchRequest {
  @SerializedName("searchString")
  private String searchString = null;

  @SerializedName("allowSearchStringRewrite")
  private Boolean allowSearchStringRewrite = null;

  @SerializedName("sort")
  private List<SortInfo> sort = null;

  @SerializedName("start")
  private Integer start = null;

  @SerializedName("limit")
  private Integer limit = null;

  public ShareSearchRequest searchString(String searchString) {
    this.searchString = searchString;
    return this;
  }

   /**
   * Limits the search by using a query string filter. The Lucene query string syntax is supported. Defaults to empty.
   * @return searchString
  **/
  @ApiModelProperty(value = "Limits the search by using a query string filter. The Lucene query string syntax is supported. Defaults to empty.")
  public String getSearchString() {
    return searchString;
  }

  public void setSearchString(String searchString) {
    this.searchString = searchString;
  }

  public ShareSearchRequest allowSearchStringRewrite(Boolean allowSearchStringRewrite) {
    this.allowSearchStringRewrite = allowSearchStringRewrite;
    return this;
  }

   /**
   * Allow the backend to modify the search string if it generates a non valid query
   * @return allowSearchStringRewrite
  **/
  @ApiModelProperty(required = true, value = "Allow the backend to modify the search string if it generates a non valid query")
  public Boolean getAllowSearchStringRewrite() {
    return allowSearchStringRewrite;
  }

  public void setAllowSearchStringRewrite(Boolean allowSearchStringRewrite) {
    this.allowSearchStringRewrite = allowSearchStringRewrite;
  }

  public ShareSearchRequest sort(List<SortInfo> sort) {
    this.sort = sort;
    return this;
  }

  public ShareSearchRequest addSortItem(SortInfo sortItem) {
    if (this.sort == null) {
      this.sort = new ArrayList<SortInfo>();
    }
    this.sort.add(sortItem);
    return this;
  }

   /**
   * Sorts the search results. Sorting on a not indexed field will throw an exception.
   * @return sort
  **/
  @ApiModelProperty(value = "Sorts the search results. Sorting on a not indexed field will throw an exception.")
  public List<SortInfo> getSort() {
    return sort;
  }

  public void setSort(List<SortInfo> sort) {
    this.sort = sort;
  }

  public ShareSearchRequest start(Integer start) {
    this.start = start;
    return this;
  }

   /**
   * Defines the offset from the first result you want to fetch. Defaults to 0.
   * @return start
  **/
  @ApiModelProperty(required = true, value = "Defines the offset from the first result you want to fetch. Defaults to 0.")
  public Integer getStart() {
    return start;
  }

  public void setStart(Integer start) {
    this.start = start;
  }

  public ShareSearchRequest limit(Integer limit) {
    this.limit = limit;
    return this;
  }

   /**
   * Limits the document count of the result set. Defaults to 30.
   * @return limit
  **/
  @ApiModelProperty(required = true, value = "Limits the document count of the result set. Defaults to 30.")
  public Integer getLimit() {
    return limit;
  }

  public void setLimit(Integer limit) {
    this.limit = limit;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShareSearchRequest shareSearchRequest = (ShareSearchRequest) o;
    return Objects.equals(this.searchString, shareSearchRequest.searchString) &&
        Objects.equals(this.allowSearchStringRewrite, shareSearchRequest.allowSearchStringRewrite) &&
        Objects.equals(this.sort, shareSearchRequest.sort) &&
        Objects.equals(this.start, shareSearchRequest.start) &&
        Objects.equals(this.limit, shareSearchRequest.limit);
  }

  @Override
  public int hashCode() {
    return Objects.hash(searchString, allowSearchStringRewrite, sort, start, limit);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShareSearchRequest {\n");
    
    sb.append("    searchString: ").append(toIndentedString(searchString)).append("\n");
    sb.append("    allowSearchStringRewrite: ").append(toIndentedString(allowSearchStringRewrite)).append("\n");
    sb.append("    sort: ").append(toIndentedString(sort)).append("\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

