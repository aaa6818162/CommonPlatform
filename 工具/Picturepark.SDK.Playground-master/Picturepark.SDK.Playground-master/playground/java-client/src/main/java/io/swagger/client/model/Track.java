/*
 * Web API Swagger specification
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Marker;
import io.swagger.client.model.MarkerType;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Track
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-10-04T14:36:42.044Z")
public class Track {
  @SerializedName("frameRate")
  private String frameRate = null;

  @SerializedName("markers")
  private List<Marker> markers = null;

  @SerializedName("trackName")
  private String trackName = null;

  @SerializedName("trackType")
  private MarkerType trackType = null;

  public Track frameRate(String frameRate) {
    this.frameRate = frameRate;
    return this;
  }

   /**
   * Get frameRate
   * @return frameRate
  **/
  @ApiModelProperty(value = "")
  public String getFrameRate() {
    return frameRate;
  }

  public void setFrameRate(String frameRate) {
    this.frameRate = frameRate;
  }

  public Track markers(List<Marker> markers) {
    this.markers = markers;
    return this;
  }

  public Track addMarkersItem(Marker markersItem) {
    if (this.markers == null) {
      this.markers = new ArrayList<Marker>();
    }
    this.markers.add(markersItem);
    return this;
  }

   /**
   * Get markers
   * @return markers
  **/
  @ApiModelProperty(value = "")
  public List<Marker> getMarkers() {
    return markers;
  }

  public void setMarkers(List<Marker> markers) {
    this.markers = markers;
  }

  public Track trackName(String trackName) {
    this.trackName = trackName;
    return this;
  }

   /**
   * Get trackName
   * @return trackName
  **/
  @ApiModelProperty(value = "")
  public String getTrackName() {
    return trackName;
  }

  public void setTrackName(String trackName) {
    this.trackName = trackName;
  }

  public Track trackType(MarkerType trackType) {
    this.trackType = trackType;
    return this;
  }

   /**
   * Get trackType
   * @return trackType
  **/
  @ApiModelProperty(value = "")
  public MarkerType getTrackType() {
    return trackType;
  }

  public void setTrackType(MarkerType trackType) {
    this.trackType = trackType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Track track = (Track) o;
    return Objects.equals(this.frameRate, track.frameRate) &&
        Objects.equals(this.markers, track.markers) &&
        Objects.equals(this.trackName, track.trackName) &&
        Objects.equals(this.trackType, track.trackType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(frameRate, markers, trackName, trackType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Track {\n");
    
    sb.append("    frameRate: ").append(toIndentedString(frameRate)).append("\n");
    sb.append("    markers: ").append(toIndentedString(markers)).append("\n");
    sb.append("    trackName: ").append(toIndentedString(trackName)).append("\n");
    sb.append("    trackType: ").append(toIndentedString(trackType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

