/*
 * Web API Swagger specification
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.AggregatorBase;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * The AggregatorBase is the base class for all aggregators.
 */
@ApiModel(description = "The AggregatorBase is the base class for all aggregators.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-10-04T14:36:42.044Z")

public class AggregatorBase {
  @SerializedName("name")
  private String name = null;

  @SerializedName("aggregators")
  private List<AggregatorBase> aggregators = null;

  @SerializedName("kind")
  private String kind = null;

  public AggregatorBase name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The slug name of the aggregation. Must be unique per aggregation request.
   * @return name
  **/
  @ApiModelProperty(value = "The slug name of the aggregation. Must be unique per aggregation request.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public AggregatorBase aggregators(List<AggregatorBase> aggregators) {
    this.aggregators = aggregators;
    return this;
  }

  public AggregatorBase addAggregatorsItem(AggregatorBase aggregatorsItem) {
    if (this.aggregators == null) {
      this.aggregators = new ArrayList<AggregatorBase>();
    }
    this.aggregators.add(aggregatorsItem);
    return this;
  }

   /**
   * An optional aggregator list for nested aggregations.
   * @return aggregators
  **/
  @ApiModelProperty(value = "An optional aggregator list for nested aggregations.")
  public List<AggregatorBase> getAggregators() {
    return aggregators;
  }

  public void setAggregators(List<AggregatorBase> aggregators) {
    this.aggregators = aggregators;
  }

  public AggregatorBase kind(String kind) {
    this.kind = kind;
    return this;
  }

   /**
   * Get kind
   * @return kind
  **/
  @ApiModelProperty(required = true, value = "")
  public String getKind() {
    return kind;
  }

  public void setKind(String kind) {
    this.kind = kind;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AggregatorBase aggregatorBase = (AggregatorBase) o;
    return Objects.equals(this.name, aggregatorBase.name) &&
        Objects.equals(this.aggregators, aggregatorBase.aggregators) &&
        Objects.equals(this.kind, aggregatorBase.kind);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, aggregators, kind);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AggregatorBase {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    aggregators: ").append(toIndentedString(aggregators)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

