/*
 * Web API Swagger specification
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.AggregationFilter;
import io.swagger.client.model.AggregatorBase;
import io.swagger.client.model.SortInfo;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ShareAggregationRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-10-04T14:36:42.044Z")
public class ShareAggregationRequest {
  @SerializedName("searchString")
  private String searchString = null;

  @SerializedName("allowSearchStringRewrite")
  private Boolean allowSearchStringRewrite = null;

  @SerializedName("sort")
  private List<SortInfo> sort = null;

  @SerializedName("aggregationFilters")
  private List<AggregationFilter> aggregationFilters = null;

  @SerializedName("aggregators")
  private List<AggregatorBase> aggregators = null;

  @SerializedName("displayLanguage")
  private String displayLanguage = null;

  public ShareAggregationRequest searchString(String searchString) {
    this.searchString = searchString;
    return this;
  }

   /**
   * Get searchString
   * @return searchString
  **/
  @ApiModelProperty(value = "")
  public String getSearchString() {
    return searchString;
  }

  public void setSearchString(String searchString) {
    this.searchString = searchString;
  }

  public ShareAggregationRequest allowSearchStringRewrite(Boolean allowSearchStringRewrite) {
    this.allowSearchStringRewrite = allowSearchStringRewrite;
    return this;
  }

   /**
   * Allow the backend to modify the search string if it generates a non valid query
   * @return allowSearchStringRewrite
  **/
  @ApiModelProperty(required = true, value = "Allow the backend to modify the search string if it generates a non valid query")
  public Boolean getAllowSearchStringRewrite() {
    return allowSearchStringRewrite;
  }

  public void setAllowSearchStringRewrite(Boolean allowSearchStringRewrite) {
    this.allowSearchStringRewrite = allowSearchStringRewrite;
  }

  public ShareAggregationRequest sort(List<SortInfo> sort) {
    this.sort = sort;
    return this;
  }

  public ShareAggregationRequest addSortItem(SortInfo sortItem) {
    if (this.sort == null) {
      this.sort = new ArrayList<SortInfo>();
    }
    this.sort.add(sortItem);
    return this;
  }

   /**
   * Get sort
   * @return sort
  **/
  @ApiModelProperty(value = "")
  public List<SortInfo> getSort() {
    return sort;
  }

  public void setSort(List<SortInfo> sort) {
    this.sort = sort;
  }

  public ShareAggregationRequest aggregationFilters(List<AggregationFilter> aggregationFilters) {
    this.aggregationFilters = aggregationFilters;
    return this;
  }

  public ShareAggregationRequest addAggregationFiltersItem(AggregationFilter aggregationFiltersItem) {
    if (this.aggregationFilters == null) {
      this.aggregationFilters = new ArrayList<AggregationFilter>();
    }
    this.aggregationFilters.add(aggregationFiltersItem);
    return this;
  }

   /**
   * Get aggregationFilters
   * @return aggregationFilters
  **/
  @ApiModelProperty(value = "")
  public List<AggregationFilter> getAggregationFilters() {
    return aggregationFilters;
  }

  public void setAggregationFilters(List<AggregationFilter> aggregationFilters) {
    this.aggregationFilters = aggregationFilters;
  }

  public ShareAggregationRequest aggregators(List<AggregatorBase> aggregators) {
    this.aggregators = aggregators;
    return this;
  }

  public ShareAggregationRequest addAggregatorsItem(AggregatorBase aggregatorsItem) {
    if (this.aggregators == null) {
      this.aggregators = new ArrayList<AggregatorBase>();
    }
    this.aggregators.add(aggregatorsItem);
    return this;
  }

   /**
   * Get aggregators
   * @return aggregators
  **/
  @ApiModelProperty(value = "")
  public List<AggregatorBase> getAggregators() {
    return aggregators;
  }

  public void setAggregators(List<AggregatorBase> aggregators) {
    this.aggregators = aggregators;
  }

  public ShareAggregationRequest displayLanguage(String displayLanguage) {
    this.displayLanguage = displayLanguage;
    return this;
  }

   /**
   * Get displayLanguage
   * @return displayLanguage
  **/
  @ApiModelProperty(value = "")
  public String getDisplayLanguage() {
    return displayLanguage;
  }

  public void setDisplayLanguage(String displayLanguage) {
    this.displayLanguage = displayLanguage;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShareAggregationRequest shareAggregationRequest = (ShareAggregationRequest) o;
    return Objects.equals(this.searchString, shareAggregationRequest.searchString) &&
        Objects.equals(this.allowSearchStringRewrite, shareAggregationRequest.allowSearchStringRewrite) &&
        Objects.equals(this.sort, shareAggregationRequest.sort) &&
        Objects.equals(this.aggregationFilters, shareAggregationRequest.aggregationFilters) &&
        Objects.equals(this.aggregators, shareAggregationRequest.aggregators) &&
        Objects.equals(this.displayLanguage, shareAggregationRequest.displayLanguage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(searchString, allowSearchStringRewrite, sort, aggregationFilters, aggregators, displayLanguage);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShareAggregationRequest {\n");
    
    sb.append("    searchString: ").append(toIndentedString(searchString)).append("\n");
    sb.append("    allowSearchStringRewrite: ").append(toIndentedString(allowSearchStringRewrite)).append("\n");
    sb.append("    sort: ").append(toIndentedString(sort)).append("\n");
    sb.append("    aggregationFilters: ").append(toIndentedString(aggregationFilters)).append("\n");
    sb.append("    aggregators: ").append(toIndentedString(aggregators)).append("\n");
    sb.append("    displayLanguage: ").append(toIndentedString(displayLanguage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

