/*
 * Web API Swagger specification
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.TransferDriveFile;
import io.swagger.client.model.TransferType;
import io.swagger.client.model.TransferUploadFile;
import io.swagger.client.model.TransferWebLink;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CreateTransferRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-10-04T14:36:42.044Z")
public class CreateTransferRequest {
  @SerializedName("name")
  private String name = null;

  @SerializedName("transferType")
  private TransferType transferType = null;

  @SerializedName("files")
  private List<TransferUploadFile> files = null;

  @SerializedName("driveFiles")
  private List<TransferDriveFile> driveFiles = null;

  @SerializedName("webLinks")
  private List<TransferWebLink> webLinks = null;

  @SerializedName("collectionName")
  private String collectionName = null;

  @SerializedName("createCollection")
  private Boolean createCollection = null;

  public CreateTransferRequest name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CreateTransferRequest transferType(TransferType transferType) {
    this.transferType = transferType;
    return this;
  }

   /**
   * Get transferType
   * @return transferType
  **/
  @ApiModelProperty(required = true, value = "")
  public TransferType getTransferType() {
    return transferType;
  }

  public void setTransferType(TransferType transferType) {
    this.transferType = transferType;
  }

  public CreateTransferRequest files(List<TransferUploadFile> files) {
    this.files = files;
    return this;
  }

  public CreateTransferRequest addFilesItem(TransferUploadFile filesItem) {
    if (this.files == null) {
      this.files = new ArrayList<TransferUploadFile>();
    }
    this.files.add(filesItem);
    return this;
  }

   /**
   * Get files
   * @return files
  **/
  @ApiModelProperty(value = "")
  public List<TransferUploadFile> getFiles() {
    return files;
  }

  public void setFiles(List<TransferUploadFile> files) {
    this.files = files;
  }

  public CreateTransferRequest driveFiles(List<TransferDriveFile> driveFiles) {
    this.driveFiles = driveFiles;
    return this;
  }

  public CreateTransferRequest addDriveFilesItem(TransferDriveFile driveFilesItem) {
    if (this.driveFiles == null) {
      this.driveFiles = new ArrayList<TransferDriveFile>();
    }
    this.driveFiles.add(driveFilesItem);
    return this;
  }

   /**
   * Get driveFiles
   * @return driveFiles
  **/
  @ApiModelProperty(value = "")
  public List<TransferDriveFile> getDriveFiles() {
    return driveFiles;
  }

  public void setDriveFiles(List<TransferDriveFile> driveFiles) {
    this.driveFiles = driveFiles;
  }

  public CreateTransferRequest webLinks(List<TransferWebLink> webLinks) {
    this.webLinks = webLinks;
    return this;
  }

  public CreateTransferRequest addWebLinksItem(TransferWebLink webLinksItem) {
    if (this.webLinks == null) {
      this.webLinks = new ArrayList<TransferWebLink>();
    }
    this.webLinks.add(webLinksItem);
    return this;
  }

   /**
   * Get webLinks
   * @return webLinks
  **/
  @ApiModelProperty(value = "")
  public List<TransferWebLink> getWebLinks() {
    return webLinks;
  }

  public void setWebLinks(List<TransferWebLink> webLinks) {
    this.webLinks = webLinks;
  }

  public CreateTransferRequest collectionName(String collectionName) {
    this.collectionName = collectionName;
    return this;
  }

   /**
   * Get collectionName
   * @return collectionName
  **/
  @ApiModelProperty(value = "")
  public String getCollectionName() {
    return collectionName;
  }

  public void setCollectionName(String collectionName) {
    this.collectionName = collectionName;
  }

  public CreateTransferRequest createCollection(Boolean createCollection) {
    this.createCollection = createCollection;
    return this;
  }

   /**
   * Get createCollection
   * @return createCollection
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean getCreateCollection() {
    return createCollection;
  }

  public void setCreateCollection(Boolean createCollection) {
    this.createCollection = createCollection;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateTransferRequest createTransferRequest = (CreateTransferRequest) o;
    return Objects.equals(this.name, createTransferRequest.name) &&
        Objects.equals(this.transferType, createTransferRequest.transferType) &&
        Objects.equals(this.files, createTransferRequest.files) &&
        Objects.equals(this.driveFiles, createTransferRequest.driveFiles) &&
        Objects.equals(this.webLinks, createTransferRequest.webLinks) &&
        Objects.equals(this.collectionName, createTransferRequest.collectionName) &&
        Objects.equals(this.createCollection, createTransferRequest.createCollection);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, transferType, files, driveFiles, webLinks, collectionName, createCollection);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateTransferRequest {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    transferType: ").append(toIndentedString(transferType)).append("\n");
    sb.append("    files: ").append(toIndentedString(files)).append("\n");
    sb.append("    driveFiles: ").append(toIndentedString(driveFiles)).append("\n");
    sb.append("    webLinks: ").append(toIndentedString(webLinks)).append("\n");
    sb.append("    collectionName: ").append(toIndentedString(collectionName)).append("\n");
    sb.append("    createCollection: ").append(toIndentedString(createCollection)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

