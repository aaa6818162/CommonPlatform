/*
 * Web API Swagger specification
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.PermissionUserRoleRightsOfMetadataRight;
import io.swagger.client.model.PermissionUserRoleRightsOfPermissionSetRight;
import io.swagger.client.model.TranslatedStringDictionary;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * PermissionSetDetailOfMetadataRight
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-10-04T14:36:42.044Z")
public class PermissionSetDetailOfMetadataRight {
  @SerializedName("id")
  private String id = null;

  @SerializedName("names")
  private TranslatedStringDictionary names = null;

  @SerializedName("trashed")
  private Boolean trashed = null;

  @SerializedName("userRolesRights")
  private List<PermissionUserRoleRightsOfMetadataRight> userRolesRights = null;

  @SerializedName("userRolesPermissionSetRights")
  private List<PermissionUserRoleRightsOfPermissionSetRight> userRolesPermissionSetRights = null;

  @SerializedName("exclusive")
  private Boolean exclusive = null;

  public PermissionSetDetailOfMetadataRight id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public PermissionSetDetailOfMetadataRight names(TranslatedStringDictionary names) {
    this.names = names;
    return this;
  }

   /**
   * Get names
   * @return names
  **/
  @ApiModelProperty(value = "")
  public TranslatedStringDictionary getNames() {
    return names;
  }

  public void setNames(TranslatedStringDictionary names) {
    this.names = names;
  }

  public PermissionSetDetailOfMetadataRight trashed(Boolean trashed) {
    this.trashed = trashed;
    return this;
  }

   /**
   * Get trashed
   * @return trashed
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean getTrashed() {
    return trashed;
  }

  public void setTrashed(Boolean trashed) {
    this.trashed = trashed;
  }

  public PermissionSetDetailOfMetadataRight userRolesRights(List<PermissionUserRoleRightsOfMetadataRight> userRolesRights) {
    this.userRolesRights = userRolesRights;
    return this;
  }

  public PermissionSetDetailOfMetadataRight addUserRolesRightsItem(PermissionUserRoleRightsOfMetadataRight userRolesRightsItem) {
    if (this.userRolesRights == null) {
      this.userRolesRights = new ArrayList<PermissionUserRoleRightsOfMetadataRight>();
    }
    this.userRolesRights.add(userRolesRightsItem);
    return this;
  }

   /**
   * Get userRolesRights
   * @return userRolesRights
  **/
  @ApiModelProperty(value = "")
  public List<PermissionUserRoleRightsOfMetadataRight> getUserRolesRights() {
    return userRolesRights;
  }

  public void setUserRolesRights(List<PermissionUserRoleRightsOfMetadataRight> userRolesRights) {
    this.userRolesRights = userRolesRights;
  }

  public PermissionSetDetailOfMetadataRight userRolesPermissionSetRights(List<PermissionUserRoleRightsOfPermissionSetRight> userRolesPermissionSetRights) {
    this.userRolesPermissionSetRights = userRolesPermissionSetRights;
    return this;
  }

  public PermissionSetDetailOfMetadataRight addUserRolesPermissionSetRightsItem(PermissionUserRoleRightsOfPermissionSetRight userRolesPermissionSetRightsItem) {
    if (this.userRolesPermissionSetRights == null) {
      this.userRolesPermissionSetRights = new ArrayList<PermissionUserRoleRightsOfPermissionSetRight>();
    }
    this.userRolesPermissionSetRights.add(userRolesPermissionSetRightsItem);
    return this;
  }

   /**
   * Get userRolesPermissionSetRights
   * @return userRolesPermissionSetRights
  **/
  @ApiModelProperty(value = "")
  public List<PermissionUserRoleRightsOfPermissionSetRight> getUserRolesPermissionSetRights() {
    return userRolesPermissionSetRights;
  }

  public void setUserRolesPermissionSetRights(List<PermissionUserRoleRightsOfPermissionSetRight> userRolesPermissionSetRights) {
    this.userRolesPermissionSetRights = userRolesPermissionSetRights;
  }

  public PermissionSetDetailOfMetadataRight exclusive(Boolean exclusive) {
    this.exclusive = exclusive;
    return this;
  }

   /**
   * Get exclusive
   * @return exclusive
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean getExclusive() {
    return exclusive;
  }

  public void setExclusive(Boolean exclusive) {
    this.exclusive = exclusive;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PermissionSetDetailOfMetadataRight permissionSetDetailOfMetadataRight = (PermissionSetDetailOfMetadataRight) o;
    return Objects.equals(this.id, permissionSetDetailOfMetadataRight.id) &&
        Objects.equals(this.names, permissionSetDetailOfMetadataRight.names) &&
        Objects.equals(this.trashed, permissionSetDetailOfMetadataRight.trashed) &&
        Objects.equals(this.userRolesRights, permissionSetDetailOfMetadataRight.userRolesRights) &&
        Objects.equals(this.userRolesPermissionSetRights, permissionSetDetailOfMetadataRight.userRolesPermissionSetRights) &&
        Objects.equals(this.exclusive, permissionSetDetailOfMetadataRight.exclusive);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, names, trashed, userRolesRights, userRolesPermissionSetRights, exclusive);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PermissionSetDetailOfMetadataRight {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    names: ").append(toIndentedString(names)).append("\n");
    sb.append("    trashed: ").append(toIndentedString(trashed)).append("\n");
    sb.append("    userRolesRights: ").append(toIndentedString(userRolesRights)).append("\n");
    sb.append("    userRolesPermissionSetRights: ").append(toIndentedString(userRolesPermissionSetRights)).append("\n");
    sb.append("    exclusive: ").append(toIndentedString(exclusive)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

