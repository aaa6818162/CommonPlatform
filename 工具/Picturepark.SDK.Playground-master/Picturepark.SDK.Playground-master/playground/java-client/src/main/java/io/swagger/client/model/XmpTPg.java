/*
 * Web API Swagger specification
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Dimension;
import io.swagger.client.model.Font;
import io.swagger.client.model.XmpG;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * XmpTPg
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-10-04T14:36:42.044Z")
public class XmpTPg {
  @SerializedName("colorants")
  private List<XmpG> colorants = null;

  @SerializedName("fonts")
  private List<Font> fonts = null;

  @SerializedName("maxPageSize")
  private Dimension maxPageSize = null;

  @SerializedName("nPages")
  private Integer nPages = null;

  @SerializedName("plateNames")
  private List<String> plateNames = null;

  public XmpTPg colorants(List<XmpG> colorants) {
    this.colorants = colorants;
    return this;
  }

  public XmpTPg addColorantsItem(XmpG colorantsItem) {
    if (this.colorants == null) {
      this.colorants = new ArrayList<XmpG>();
    }
    this.colorants.add(colorantsItem);
    return this;
  }

   /**
   * Get colorants
   * @return colorants
  **/
  @ApiModelProperty(value = "")
  public List<XmpG> getColorants() {
    return colorants;
  }

  public void setColorants(List<XmpG> colorants) {
    this.colorants = colorants;
  }

  public XmpTPg fonts(List<Font> fonts) {
    this.fonts = fonts;
    return this;
  }

  public XmpTPg addFontsItem(Font fontsItem) {
    if (this.fonts == null) {
      this.fonts = new ArrayList<Font>();
    }
    this.fonts.add(fontsItem);
    return this;
  }

   /**
   * Get fonts
   * @return fonts
  **/
  @ApiModelProperty(value = "")
  public List<Font> getFonts() {
    return fonts;
  }

  public void setFonts(List<Font> fonts) {
    this.fonts = fonts;
  }

  public XmpTPg maxPageSize(Dimension maxPageSize) {
    this.maxPageSize = maxPageSize;
    return this;
  }

   /**
   * Get maxPageSize
   * @return maxPageSize
  **/
  @ApiModelProperty(value = "")
  public Dimension getMaxPageSize() {
    return maxPageSize;
  }

  public void setMaxPageSize(Dimension maxPageSize) {
    this.maxPageSize = maxPageSize;
  }

  public XmpTPg nPages(Integer nPages) {
    this.nPages = nPages;
    return this;
  }

   /**
   * Get nPages
   * @return nPages
  **/
  @ApiModelProperty(value = "")
  public Integer getNPages() {
    return nPages;
  }

  public void setNPages(Integer nPages) {
    this.nPages = nPages;
  }

  public XmpTPg plateNames(List<String> plateNames) {
    this.plateNames = plateNames;
    return this;
  }

  public XmpTPg addPlateNamesItem(String plateNamesItem) {
    if (this.plateNames == null) {
      this.plateNames = new ArrayList<String>();
    }
    this.plateNames.add(plateNamesItem);
    return this;
  }

   /**
   * Get plateNames
   * @return plateNames
  **/
  @ApiModelProperty(value = "")
  public List<String> getPlateNames() {
    return plateNames;
  }

  public void setPlateNames(List<String> plateNames) {
    this.plateNames = plateNames;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    XmpTPg xmpTPg = (XmpTPg) o;
    return Objects.equals(this.colorants, xmpTPg.colorants) &&
        Objects.equals(this.fonts, xmpTPg.fonts) &&
        Objects.equals(this.maxPageSize, xmpTPg.maxPageSize) &&
        Objects.equals(this.nPages, xmpTPg.nPages) &&
        Objects.equals(this.plateNames, xmpTPg.plateNames);
  }

  @Override
  public int hashCode() {
    return Objects.hash(colorants, fonts, maxPageSize, nPages, plateNames);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class XmpTPg {\n");
    
    sb.append("    colorants: ").append(toIndentedString(colorants)).append("\n");
    sb.append("    fonts: ").append(toIndentedString(fonts)).append("\n");
    sb.append("    maxPageSize: ").append(toIndentedString(maxPageSize)).append("\n");
    sb.append("    nPages: ").append(toIndentedString(nPages)).append("\n");
    sb.append("    plateNames: ").append(toIndentedString(plateNames)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

