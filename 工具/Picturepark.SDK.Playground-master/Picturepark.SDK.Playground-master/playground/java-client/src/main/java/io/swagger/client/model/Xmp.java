/*
 * Web API Swagger specification
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Rating;
import io.swagger.client.model.XmpGImg;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.joda.time.DateTime;

/**
 * Xmp
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-10-04T14:36:42.044Z")
public class Xmp {
  @SerializedName("baseURL")
  private String baseURL = null;

  @SerializedName("createDate")
  private DateTime createDate = null;

  @SerializedName("creatorTool")
  private String creatorTool = null;

  @SerializedName("identifier")
  private List<String> identifier = null;

  @SerializedName("label")
  private String label = null;

  @SerializedName("metadataDate")
  private DateTime metadataDate = null;

  @SerializedName("modifyDate")
  private DateTime modifyDate = null;

  @SerializedName("nickname")
  private String nickname = null;

  @SerializedName("rating")
  private Rating rating = null;

  @SerializedName("thumbnails")
  private List<XmpGImg> thumbnails = null;

  @SerializedName("pageInfo")
  private List<XmpGImg> pageInfo = null;

  public Xmp baseURL(String baseURL) {
    this.baseURL = baseURL;
    return this;
  }

   /**
   * Get baseURL
   * @return baseURL
  **/
  @ApiModelProperty(value = "")
  public String getBaseURL() {
    return baseURL;
  }

  public void setBaseURL(String baseURL) {
    this.baseURL = baseURL;
  }

  public Xmp createDate(DateTime createDate) {
    this.createDate = createDate;
    return this;
  }

   /**
   * Get createDate
   * @return createDate
  **/
  @ApiModelProperty(value = "")
  public DateTime getCreateDate() {
    return createDate;
  }

  public void setCreateDate(DateTime createDate) {
    this.createDate = createDate;
  }

  public Xmp creatorTool(String creatorTool) {
    this.creatorTool = creatorTool;
    return this;
  }

   /**
   * Get creatorTool
   * @return creatorTool
  **/
  @ApiModelProperty(value = "")
  public String getCreatorTool() {
    return creatorTool;
  }

  public void setCreatorTool(String creatorTool) {
    this.creatorTool = creatorTool;
  }

  public Xmp identifier(List<String> identifier) {
    this.identifier = identifier;
    return this;
  }

  public Xmp addIdentifierItem(String identifierItem) {
    if (this.identifier == null) {
      this.identifier = new ArrayList<String>();
    }
    this.identifier.add(identifierItem);
    return this;
  }

   /**
   * Get identifier
   * @return identifier
  **/
  @ApiModelProperty(value = "")
  public List<String> getIdentifier() {
    return identifier;
  }

  public void setIdentifier(List<String> identifier) {
    this.identifier = identifier;
  }

  public Xmp label(String label) {
    this.label = label;
    return this;
  }

   /**
   * Get label
   * @return label
  **/
  @ApiModelProperty(value = "")
  public String getLabel() {
    return label;
  }

  public void setLabel(String label) {
    this.label = label;
  }

  public Xmp metadataDate(DateTime metadataDate) {
    this.metadataDate = metadataDate;
    return this;
  }

   /**
   * Get metadataDate
   * @return metadataDate
  **/
  @ApiModelProperty(value = "")
  public DateTime getMetadataDate() {
    return metadataDate;
  }

  public void setMetadataDate(DateTime metadataDate) {
    this.metadataDate = metadataDate;
  }

  public Xmp modifyDate(DateTime modifyDate) {
    this.modifyDate = modifyDate;
    return this;
  }

   /**
   * Get modifyDate
   * @return modifyDate
  **/
  @ApiModelProperty(value = "")
  public DateTime getModifyDate() {
    return modifyDate;
  }

  public void setModifyDate(DateTime modifyDate) {
    this.modifyDate = modifyDate;
  }

  public Xmp nickname(String nickname) {
    this.nickname = nickname;
    return this;
  }

   /**
   * Get nickname
   * @return nickname
  **/
  @ApiModelProperty(value = "")
  public String getNickname() {
    return nickname;
  }

  public void setNickname(String nickname) {
    this.nickname = nickname;
  }

  public Xmp rating(Rating rating) {
    this.rating = rating;
    return this;
  }

   /**
   * Get rating
   * @return rating
  **/
  @ApiModelProperty(value = "")
  public Rating getRating() {
    return rating;
  }

  public void setRating(Rating rating) {
    this.rating = rating;
  }

  public Xmp thumbnails(List<XmpGImg> thumbnails) {
    this.thumbnails = thumbnails;
    return this;
  }

  public Xmp addThumbnailsItem(XmpGImg thumbnailsItem) {
    if (this.thumbnails == null) {
      this.thumbnails = new ArrayList<XmpGImg>();
    }
    this.thumbnails.add(thumbnailsItem);
    return this;
  }

   /**
   * Get thumbnails
   * @return thumbnails
  **/
  @ApiModelProperty(value = "")
  public List<XmpGImg> getThumbnails() {
    return thumbnails;
  }

  public void setThumbnails(List<XmpGImg> thumbnails) {
    this.thumbnails = thumbnails;
  }

  public Xmp pageInfo(List<XmpGImg> pageInfo) {
    this.pageInfo = pageInfo;
    return this;
  }

  public Xmp addPageInfoItem(XmpGImg pageInfoItem) {
    if (this.pageInfo == null) {
      this.pageInfo = new ArrayList<XmpGImg>();
    }
    this.pageInfo.add(pageInfoItem);
    return this;
  }

   /**
   * Get pageInfo
   * @return pageInfo
  **/
  @ApiModelProperty(value = "")
  public List<XmpGImg> getPageInfo() {
    return pageInfo;
  }

  public void setPageInfo(List<XmpGImg> pageInfo) {
    this.pageInfo = pageInfo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Xmp xmp = (Xmp) o;
    return Objects.equals(this.baseURL, xmp.baseURL) &&
        Objects.equals(this.createDate, xmp.createDate) &&
        Objects.equals(this.creatorTool, xmp.creatorTool) &&
        Objects.equals(this.identifier, xmp.identifier) &&
        Objects.equals(this.label, xmp.label) &&
        Objects.equals(this.metadataDate, xmp.metadataDate) &&
        Objects.equals(this.modifyDate, xmp.modifyDate) &&
        Objects.equals(this.nickname, xmp.nickname) &&
        Objects.equals(this.rating, xmp.rating) &&
        Objects.equals(this.thumbnails, xmp.thumbnails) &&
        Objects.equals(this.pageInfo, xmp.pageInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(baseURL, createDate, creatorTool, identifier, label, metadataDate, modifyDate, nickname, rating, thumbnails, pageInfo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Xmp {\n");
    
    sb.append("    baseURL: ").append(toIndentedString(baseURL)).append("\n");
    sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
    sb.append("    creatorTool: ").append(toIndentedString(creatorTool)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    metadataDate: ").append(toIndentedString(metadataDate)).append("\n");
    sb.append("    modifyDate: ").append(toIndentedString(modifyDate)).append("\n");
    sb.append("    nickname: ").append(toIndentedString(nickname)).append("\n");
    sb.append("    rating: ").append(toIndentedString(rating)).append("\n");
    sb.append("    thumbnails: ").append(toIndentedString(thumbnails)).append("\n");
    sb.append("    pageInfo: ").append(toIndentedString(pageInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

