/*
 * Web API Swagger specification
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.ArtworkOrObjectInfo;
import io.swagger.client.model.LocationInfo;
import io.swagger.client.model.RegistryEntryInfo;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.joda.time.DateTime;

/**
 * IptcExt
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-10-04T14:36:42.044Z")
public class IptcExt {
  @SerializedName("additionalModelInformation")
  private String additionalModelInformation = null;

  @SerializedName("artworkOrObject")
  private List<ArtworkOrObjectInfo> artworkOrObject = null;

  @SerializedName("organisationInImageCode")
  private List<String> organisationInImageCode = null;

  @SerializedName("controlledVocabularyTerm")
  private List<String> controlledVocabularyTerm = null;

  @SerializedName("locationShown")
  private List<LocationInfo> locationShown = null;

  @SerializedName("modelAge")
  private List<Integer> modelAge = null;

  @SerializedName("organisationInImageName")
  private List<String> organisationInImageName = null;

  @SerializedName("personInImage")
  private List<String> personInImage = null;

  @SerializedName("digitalImageGUID")
  private String digitalImageGUID = null;

  @SerializedName("digitalSourceType")
  private String digitalSourceType = null;

  @SerializedName("event")
  private Map<String, String> event = null;

  @SerializedName("imageRegistryEntry")
  private List<RegistryEntryInfo> imageRegistryEntry = null;

  @SerializedName("metadataLastEdited")
  private DateTime metadataLastEdited = null;

  @SerializedName("locationCreated")
  private List<LocationInfo> locationCreated = null;

  @SerializedName("maxAvailHeight")
  private Integer maxAvailHeight = null;

  @SerializedName("maxAvailWidth")
  private Integer maxAvailWidth = null;

  public IptcExt additionalModelInformation(String additionalModelInformation) {
    this.additionalModelInformation = additionalModelInformation;
    return this;
  }

   /**
   * Get additionalModelInformation
   * @return additionalModelInformation
  **/
  @ApiModelProperty(value = "")
  public String getAdditionalModelInformation() {
    return additionalModelInformation;
  }

  public void setAdditionalModelInformation(String additionalModelInformation) {
    this.additionalModelInformation = additionalModelInformation;
  }

  public IptcExt artworkOrObject(List<ArtworkOrObjectInfo> artworkOrObject) {
    this.artworkOrObject = artworkOrObject;
    return this;
  }

  public IptcExt addArtworkOrObjectItem(ArtworkOrObjectInfo artworkOrObjectItem) {
    if (this.artworkOrObject == null) {
      this.artworkOrObject = new ArrayList<ArtworkOrObjectInfo>();
    }
    this.artworkOrObject.add(artworkOrObjectItem);
    return this;
  }

   /**
   * Get artworkOrObject
   * @return artworkOrObject
  **/
  @ApiModelProperty(value = "")
  public List<ArtworkOrObjectInfo> getArtworkOrObject() {
    return artworkOrObject;
  }

  public void setArtworkOrObject(List<ArtworkOrObjectInfo> artworkOrObject) {
    this.artworkOrObject = artworkOrObject;
  }

  public IptcExt organisationInImageCode(List<String> organisationInImageCode) {
    this.organisationInImageCode = organisationInImageCode;
    return this;
  }

  public IptcExt addOrganisationInImageCodeItem(String organisationInImageCodeItem) {
    if (this.organisationInImageCode == null) {
      this.organisationInImageCode = new ArrayList<String>();
    }
    this.organisationInImageCode.add(organisationInImageCodeItem);
    return this;
  }

   /**
   * Get organisationInImageCode
   * @return organisationInImageCode
  **/
  @ApiModelProperty(value = "")
  public List<String> getOrganisationInImageCode() {
    return organisationInImageCode;
  }

  public void setOrganisationInImageCode(List<String> organisationInImageCode) {
    this.organisationInImageCode = organisationInImageCode;
  }

  public IptcExt controlledVocabularyTerm(List<String> controlledVocabularyTerm) {
    this.controlledVocabularyTerm = controlledVocabularyTerm;
    return this;
  }

  public IptcExt addControlledVocabularyTermItem(String controlledVocabularyTermItem) {
    if (this.controlledVocabularyTerm == null) {
      this.controlledVocabularyTerm = new ArrayList<String>();
    }
    this.controlledVocabularyTerm.add(controlledVocabularyTermItem);
    return this;
  }

   /**
   * Get controlledVocabularyTerm
   * @return controlledVocabularyTerm
  **/
  @ApiModelProperty(value = "")
  public List<String> getControlledVocabularyTerm() {
    return controlledVocabularyTerm;
  }

  public void setControlledVocabularyTerm(List<String> controlledVocabularyTerm) {
    this.controlledVocabularyTerm = controlledVocabularyTerm;
  }

  public IptcExt locationShown(List<LocationInfo> locationShown) {
    this.locationShown = locationShown;
    return this;
  }

  public IptcExt addLocationShownItem(LocationInfo locationShownItem) {
    if (this.locationShown == null) {
      this.locationShown = new ArrayList<LocationInfo>();
    }
    this.locationShown.add(locationShownItem);
    return this;
  }

   /**
   * Get locationShown
   * @return locationShown
  **/
  @ApiModelProperty(value = "")
  public List<LocationInfo> getLocationShown() {
    return locationShown;
  }

  public void setLocationShown(List<LocationInfo> locationShown) {
    this.locationShown = locationShown;
  }

  public IptcExt modelAge(List<Integer> modelAge) {
    this.modelAge = modelAge;
    return this;
  }

  public IptcExt addModelAgeItem(Integer modelAgeItem) {
    if (this.modelAge == null) {
      this.modelAge = new ArrayList<Integer>();
    }
    this.modelAge.add(modelAgeItem);
    return this;
  }

   /**
   * Get modelAge
   * @return modelAge
  **/
  @ApiModelProperty(value = "")
  public List<Integer> getModelAge() {
    return modelAge;
  }

  public void setModelAge(List<Integer> modelAge) {
    this.modelAge = modelAge;
  }

  public IptcExt organisationInImageName(List<String> organisationInImageName) {
    this.organisationInImageName = organisationInImageName;
    return this;
  }

  public IptcExt addOrganisationInImageNameItem(String organisationInImageNameItem) {
    if (this.organisationInImageName == null) {
      this.organisationInImageName = new ArrayList<String>();
    }
    this.organisationInImageName.add(organisationInImageNameItem);
    return this;
  }

   /**
   * Get organisationInImageName
   * @return organisationInImageName
  **/
  @ApiModelProperty(value = "")
  public List<String> getOrganisationInImageName() {
    return organisationInImageName;
  }

  public void setOrganisationInImageName(List<String> organisationInImageName) {
    this.organisationInImageName = organisationInImageName;
  }

  public IptcExt personInImage(List<String> personInImage) {
    this.personInImage = personInImage;
    return this;
  }

  public IptcExt addPersonInImageItem(String personInImageItem) {
    if (this.personInImage == null) {
      this.personInImage = new ArrayList<String>();
    }
    this.personInImage.add(personInImageItem);
    return this;
  }

   /**
   * Get personInImage
   * @return personInImage
  **/
  @ApiModelProperty(value = "")
  public List<String> getPersonInImage() {
    return personInImage;
  }

  public void setPersonInImage(List<String> personInImage) {
    this.personInImage = personInImage;
  }

  public IptcExt digitalImageGUID(String digitalImageGUID) {
    this.digitalImageGUID = digitalImageGUID;
    return this;
  }

   /**
   * Get digitalImageGUID
   * @return digitalImageGUID
  **/
  @ApiModelProperty(value = "")
  public String getDigitalImageGUID() {
    return digitalImageGUID;
  }

  public void setDigitalImageGUID(String digitalImageGUID) {
    this.digitalImageGUID = digitalImageGUID;
  }

  public IptcExt digitalSourceType(String digitalSourceType) {
    this.digitalSourceType = digitalSourceType;
    return this;
  }

   /**
   * Get digitalSourceType
   * @return digitalSourceType
  **/
  @ApiModelProperty(value = "")
  public String getDigitalSourceType() {
    return digitalSourceType;
  }

  public void setDigitalSourceType(String digitalSourceType) {
    this.digitalSourceType = digitalSourceType;
  }

  public IptcExt event(Map<String, String> event) {
    this.event = event;
    return this;
  }

  public IptcExt putEventItem(String key, String eventItem) {
    if (this.event == null) {
      this.event = new HashMap<String, String>();
    }
    this.event.put(key, eventItem);
    return this;
  }

   /**
   * Get event
   * @return event
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getEvent() {
    return event;
  }

  public void setEvent(Map<String, String> event) {
    this.event = event;
  }

  public IptcExt imageRegistryEntry(List<RegistryEntryInfo> imageRegistryEntry) {
    this.imageRegistryEntry = imageRegistryEntry;
    return this;
  }

  public IptcExt addImageRegistryEntryItem(RegistryEntryInfo imageRegistryEntryItem) {
    if (this.imageRegistryEntry == null) {
      this.imageRegistryEntry = new ArrayList<RegistryEntryInfo>();
    }
    this.imageRegistryEntry.add(imageRegistryEntryItem);
    return this;
  }

   /**
   * Get imageRegistryEntry
   * @return imageRegistryEntry
  **/
  @ApiModelProperty(value = "")
  public List<RegistryEntryInfo> getImageRegistryEntry() {
    return imageRegistryEntry;
  }

  public void setImageRegistryEntry(List<RegistryEntryInfo> imageRegistryEntry) {
    this.imageRegistryEntry = imageRegistryEntry;
  }

  public IptcExt metadataLastEdited(DateTime metadataLastEdited) {
    this.metadataLastEdited = metadataLastEdited;
    return this;
  }

   /**
   * Get metadataLastEdited
   * @return metadataLastEdited
  **/
  @ApiModelProperty(value = "")
  public DateTime getMetadataLastEdited() {
    return metadataLastEdited;
  }

  public void setMetadataLastEdited(DateTime metadataLastEdited) {
    this.metadataLastEdited = metadataLastEdited;
  }

  public IptcExt locationCreated(List<LocationInfo> locationCreated) {
    this.locationCreated = locationCreated;
    return this;
  }

  public IptcExt addLocationCreatedItem(LocationInfo locationCreatedItem) {
    if (this.locationCreated == null) {
      this.locationCreated = new ArrayList<LocationInfo>();
    }
    this.locationCreated.add(locationCreatedItem);
    return this;
  }

   /**
   * Get locationCreated
   * @return locationCreated
  **/
  @ApiModelProperty(value = "")
  public List<LocationInfo> getLocationCreated() {
    return locationCreated;
  }

  public void setLocationCreated(List<LocationInfo> locationCreated) {
    this.locationCreated = locationCreated;
  }

  public IptcExt maxAvailHeight(Integer maxAvailHeight) {
    this.maxAvailHeight = maxAvailHeight;
    return this;
  }

   /**
   * Get maxAvailHeight
   * @return maxAvailHeight
  **/
  @ApiModelProperty(value = "")
  public Integer getMaxAvailHeight() {
    return maxAvailHeight;
  }

  public void setMaxAvailHeight(Integer maxAvailHeight) {
    this.maxAvailHeight = maxAvailHeight;
  }

  public IptcExt maxAvailWidth(Integer maxAvailWidth) {
    this.maxAvailWidth = maxAvailWidth;
    return this;
  }

   /**
   * Get maxAvailWidth
   * @return maxAvailWidth
  **/
  @ApiModelProperty(value = "")
  public Integer getMaxAvailWidth() {
    return maxAvailWidth;
  }

  public void setMaxAvailWidth(Integer maxAvailWidth) {
    this.maxAvailWidth = maxAvailWidth;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IptcExt iptcExt = (IptcExt) o;
    return Objects.equals(this.additionalModelInformation, iptcExt.additionalModelInformation) &&
        Objects.equals(this.artworkOrObject, iptcExt.artworkOrObject) &&
        Objects.equals(this.organisationInImageCode, iptcExt.organisationInImageCode) &&
        Objects.equals(this.controlledVocabularyTerm, iptcExt.controlledVocabularyTerm) &&
        Objects.equals(this.locationShown, iptcExt.locationShown) &&
        Objects.equals(this.modelAge, iptcExt.modelAge) &&
        Objects.equals(this.organisationInImageName, iptcExt.organisationInImageName) &&
        Objects.equals(this.personInImage, iptcExt.personInImage) &&
        Objects.equals(this.digitalImageGUID, iptcExt.digitalImageGUID) &&
        Objects.equals(this.digitalSourceType, iptcExt.digitalSourceType) &&
        Objects.equals(this.event, iptcExt.event) &&
        Objects.equals(this.imageRegistryEntry, iptcExt.imageRegistryEntry) &&
        Objects.equals(this.metadataLastEdited, iptcExt.metadataLastEdited) &&
        Objects.equals(this.locationCreated, iptcExt.locationCreated) &&
        Objects.equals(this.maxAvailHeight, iptcExt.maxAvailHeight) &&
        Objects.equals(this.maxAvailWidth, iptcExt.maxAvailWidth);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalModelInformation, artworkOrObject, organisationInImageCode, controlledVocabularyTerm, locationShown, modelAge, organisationInImageName, personInImage, digitalImageGUID, digitalSourceType, event, imageRegistryEntry, metadataLastEdited, locationCreated, maxAvailHeight, maxAvailWidth);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IptcExt {\n");
    
    sb.append("    additionalModelInformation: ").append(toIndentedString(additionalModelInformation)).append("\n");
    sb.append("    artworkOrObject: ").append(toIndentedString(artworkOrObject)).append("\n");
    sb.append("    organisationInImageCode: ").append(toIndentedString(organisationInImageCode)).append("\n");
    sb.append("    controlledVocabularyTerm: ").append(toIndentedString(controlledVocabularyTerm)).append("\n");
    sb.append("    locationShown: ").append(toIndentedString(locationShown)).append("\n");
    sb.append("    modelAge: ").append(toIndentedString(modelAge)).append("\n");
    sb.append("    organisationInImageName: ").append(toIndentedString(organisationInImageName)).append("\n");
    sb.append("    personInImage: ").append(toIndentedString(personInImage)).append("\n");
    sb.append("    digitalImageGUID: ").append(toIndentedString(digitalImageGUID)).append("\n");
    sb.append("    digitalSourceType: ").append(toIndentedString(digitalSourceType)).append("\n");
    sb.append("    event: ").append(toIndentedString(event)).append("\n");
    sb.append("    imageRegistryEntry: ").append(toIndentedString(imageRegistryEntry)).append("\n");
    sb.append("    metadataLastEdited: ").append(toIndentedString(metadataLastEdited)).append("\n");
    sb.append("    locationCreated: ").append(toIndentedString(locationCreated)).append("\n");
    sb.append("    maxAvailHeight: ").append(toIndentedString(maxAvailHeight)).append("\n");
    sb.append("    maxAvailWidth: ").append(toIndentedString(maxAvailWidth)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

