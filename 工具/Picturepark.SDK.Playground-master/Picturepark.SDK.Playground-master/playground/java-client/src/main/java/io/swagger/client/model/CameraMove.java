/*
 * Web API Swagger specification
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Corresponds to xmpDM.CameraMoveChoice
 */
@JsonAdapter(CameraMove.Adapter.class)
public enum CameraMove {
  
  AERIAL("MOVE_AERIAL"),
  
  BOOM_UP("MOVE_BOOM_UP"),
  
  BOOM_DOWN("MOVE_BOOM_DOWN"),
  
  CRANE_UP("MOVE_CRANE_UP"),
  
  CRANE_DOWN("MOVE_CRANE_DOWN"),
  
  DOLLY_IN("MOVE_DOLLY_IN"),
  
  DOLLY_OUT("MOVE_DOLLY_OUT"),
  
  PAN_LEFT("MOVE_PAN_LEFT"),
  
  PAN_RIGHT("MOVE_PAN_RIGHT"),
  
  PEDESTAL_UP("MOVE_PEDESTAL_UP"),
  
  PEDESTAL_DOWN("MOVE_PEDESTAL_DOWN"),
  
  TILT_UP("MOVE_TILT_UP"),
  
  TILT_DOWN("MOVE_TILT_DOWN"),
  
  TRACKING("MOVE_TRACKING"),
  
  TRUCK_LEFT("MOVE_TRUCK_LEFT"),
  
  TRUCK_RIGHT("MOVE_TRUCK_RIGHT"),
  
  ZOOM_IN("MOVE_ZOOM_IN"),
  
  ZOOM_OUT("MOVE_ZOOM_OUT");

  private String value;

  CameraMove(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static CameraMove fromValue(String text) {
    for (CameraMove b : CameraMove.values()) {
      if (String.valueOf(b.value).equals(text)) {
        return b;
      }
    }
    return null;
  }

  public static class Adapter extends TypeAdapter<CameraMove> {
    @Override
    public void write(final JsonWriter jsonWriter, final CameraMove enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public CameraMove read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return CameraMove.fromValue(String.valueOf(value));
    }
  }
}

