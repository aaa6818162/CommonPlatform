/*
 * Web API Swagger specification
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.MarkerType;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Marker
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-10-04T14:36:42.044Z")
public class Marker {
  @SerializedName("comment")
  private String comment = null;

  @SerializedName("cuePointParams")
  private Map<String, String> cuePointParams = null;

  @SerializedName("cuePointType")
  private String cuePointType = null;

  @SerializedName("duration")
  private String duration = null;

  @SerializedName("location")
  private String location = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("probability")
  private BigDecimal probability = null;

  @SerializedName("speaker")
  private String speaker = null;

  @SerializedName("startTime")
  private String startTime = null;

  @SerializedName("target")
  private String target = null;

  @SerializedName("type")
  private MarkerType type = null;

  public Marker comment(String comment) {
    this.comment = comment;
    return this;
  }

   /**
   * Get comment
   * @return comment
  **/
  @ApiModelProperty(value = "")
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }

  public Marker cuePointParams(Map<String, String> cuePointParams) {
    this.cuePointParams = cuePointParams;
    return this;
  }

  public Marker putCuePointParamsItem(String key, String cuePointParamsItem) {
    if (this.cuePointParams == null) {
      this.cuePointParams = new HashMap<String, String>();
    }
    this.cuePointParams.put(key, cuePointParamsItem);
    return this;
  }

   /**
   * Get cuePointParams
   * @return cuePointParams
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getCuePointParams() {
    return cuePointParams;
  }

  public void setCuePointParams(Map<String, String> cuePointParams) {
    this.cuePointParams = cuePointParams;
  }

  public Marker cuePointType(String cuePointType) {
    this.cuePointType = cuePointType;
    return this;
  }

   /**
   * Get cuePointType
   * @return cuePointType
  **/
  @ApiModelProperty(value = "")
  public String getCuePointType() {
    return cuePointType;
  }

  public void setCuePointType(String cuePointType) {
    this.cuePointType = cuePointType;
  }

  public Marker duration(String duration) {
    this.duration = duration;
    return this;
  }

   /**
   * Get duration
   * @return duration
  **/
  @ApiModelProperty(value = "")
  public String getDuration() {
    return duration;
  }

  public void setDuration(String duration) {
    this.duration = duration;
  }

  public Marker location(String location) {
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @ApiModelProperty(value = "")
  public String getLocation() {
    return location;
  }

  public void setLocation(String location) {
    this.location = location;
  }

  public Marker name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Marker probability(BigDecimal probability) {
    this.probability = probability;
    return this;
  }

   /**
   * Get probability
   * @return probability
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getProbability() {
    return probability;
  }

  public void setProbability(BigDecimal probability) {
    this.probability = probability;
  }

  public Marker speaker(String speaker) {
    this.speaker = speaker;
    return this;
  }

   /**
   * Get speaker
   * @return speaker
  **/
  @ApiModelProperty(value = "")
  public String getSpeaker() {
    return speaker;
  }

  public void setSpeaker(String speaker) {
    this.speaker = speaker;
  }

  public Marker startTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * Get startTime
   * @return startTime
  **/
  @ApiModelProperty(value = "")
  public String getStartTime() {
    return startTime;
  }

  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }

  public Marker target(String target) {
    this.target = target;
    return this;
  }

   /**
   * Get target
   * @return target
  **/
  @ApiModelProperty(value = "")
  public String getTarget() {
    return target;
  }

  public void setTarget(String target) {
    this.target = target;
  }

  public Marker type(MarkerType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public MarkerType getType() {
    return type;
  }

  public void setType(MarkerType type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Marker marker = (Marker) o;
    return Objects.equals(this.comment, marker.comment) &&
        Objects.equals(this.cuePointParams, marker.cuePointParams) &&
        Objects.equals(this.cuePointType, marker.cuePointType) &&
        Objects.equals(this.duration, marker.duration) &&
        Objects.equals(this.location, marker.location) &&
        Objects.equals(this.name, marker.name) &&
        Objects.equals(this.probability, marker.probability) &&
        Objects.equals(this.speaker, marker.speaker) &&
        Objects.equals(this.startTime, marker.startTime) &&
        Objects.equals(this.target, marker.target) &&
        Objects.equals(this.type, marker.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(comment, cuePointParams, cuePointType, duration, location, name, probability, speaker, startTime, target, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Marker {\n");
    
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    cuePointParams: ").append(toIndentedString(cuePointParams)).append("\n");
    sb.append("    cuePointType: ").append(toIndentedString(cuePointType)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    probability: ").append(toIndentedString(probability)).append("\n");
    sb.append("    speaker: ").append(toIndentedString(speaker)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    target: ").append(toIndentedString(target)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

