/*
 * Web API Swagger specification
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.AudioChannelType;
import io.swagger.client.model.AudioMusicalKey;
import io.swagger.client.model.AudioMusicalScaleType;
import io.swagger.client.model.AudioSampleType;
import io.swagger.client.model.AudioStretchMode;
import io.swagger.client.model.BeatSpliceStretch;
import io.swagger.client.model.CameraAngle;
import io.swagger.client.model.CameraMove;
import io.swagger.client.model.Dimension;
import io.swagger.client.model.Marker;
import io.swagger.client.model.Media;
import io.swagger.client.model.ProjectLink;
import io.swagger.client.model.ResampleStretch;
import io.swagger.client.model.ShotSize;
import io.swagger.client.model.Time;
import io.swagger.client.model.TimeCode;
import io.swagger.client.model.TimeScaleStretch;
import io.swagger.client.model.TimeSignature;
import io.swagger.client.model.Track;
import io.swagger.client.model.VideoAlphaMode;
import io.swagger.client.model.VideoColorSpace;
import io.swagger.client.model.VideoFieldOrder;
import io.swagger.client.model.VideoFrameRate;
import io.swagger.client.model.VideoPixelDepth;
import io.swagger.client.model.VideoPullDown;
import io.swagger.client.model.XmpG;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.joda.time.DateTime;

/**
 * XmpDM
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-10-04T14:36:42.044Z")
public class XmpDM {
  @SerializedName("absPeakAudioFilePath")
  private String absPeakAudioFilePath = null;

  @SerializedName("artist")
  private String artist = null;

  @SerializedName("album")
  private String album = null;

  @SerializedName("altTapeName")
  private String altTapeName = null;

  @SerializedName("altTimecode")
  private TimeCode altTimecode = null;

  @SerializedName("audioChannelType")
  private AudioChannelType audioChannelType = null;

  @SerializedName("audioCompressor")
  private String audioCompressor = null;

  @SerializedName("audioSampleRate")
  private Integer audioSampleRate = null;

  @SerializedName("audioSampleType")
  private AudioSampleType audioSampleType = null;

  @SerializedName("beatSpliceParams")
  private BeatSpliceStretch beatSpliceParams = null;

  @SerializedName("cameraAngle")
  private CameraAngle cameraAngle = null;

  @SerializedName("cameraLabel")
  private String cameraLabel = null;

  @SerializedName("cameraModel")
  private String cameraModel = null;

  @SerializedName("cameraMove")
  private CameraMove cameraMove = null;

  @SerializedName("client")
  private String client = null;

  @SerializedName("comment")
  private String comment = null;

  @SerializedName("composer")
  private String composer = null;

  @SerializedName("contributedMedia")
  private List<Media> contributedMedia = null;

  @SerializedName("director")
  private String director = null;

  @SerializedName("directorPhotography")
  private String directorPhotography = null;

  @SerializedName("duration")
  private Time duration = null;

  @SerializedName("engineer")
  private String engineer = null;

  @SerializedName("fileDataRate")
  private String fileDataRate = null;

  @SerializedName("genre")
  private String genre = null;

  @SerializedName("good")
  private Boolean good = null;

  @SerializedName("instrument")
  private String instrument = null;

  @SerializedName("introTime")
  private Time introTime = null;

  @SerializedName("key")
  private AudioMusicalKey key = null;

  @SerializedName("logComment")
  private String logComment = null;

  @SerializedName("loop")
  private Boolean loop = null;

  @SerializedName("numberOfBeats")
  private BigDecimal numberOfBeats = null;

  @SerializedName("markers")
  private List<Marker> markers = null;

  @SerializedName("outCue")
  private Time outCue = null;

  @SerializedName("projectName")
  private String projectName = null;

  @SerializedName("projectRef")
  private ProjectLink projectRef = null;

  @SerializedName("pullDown")
  private VideoPullDown pullDown = null;

  @SerializedName("relativePeakAudioFilePath")
  private String relativePeakAudioFilePath = null;

  @SerializedName("relativeTimestamp")
  private Time relativeTimestamp = null;

  @SerializedName("releaseDate")
  private DateTime releaseDate = null;

  @SerializedName("resampleParams")
  private ResampleStretch resampleParams = null;

  @SerializedName("scaleType")
  private AudioMusicalScaleType scaleType = null;

  @SerializedName("scene")
  private String scene = null;

  @SerializedName("shotDate")
  private DateTime shotDate = null;

  @SerializedName("shotDay")
  private String shotDay = null;

  @SerializedName("shotLocation")
  private String shotLocation = null;

  @SerializedName("shotName")
  private String shotName = null;

  @SerializedName("shotNumber")
  private String shotNumber = null;

  @SerializedName("shotSize")
  private ShotSize shotSize = null;

  @SerializedName("speakerPlacement")
  private String speakerPlacement = null;

  @SerializedName("startTimecode")
  private TimeCode startTimecode = null;

  @SerializedName("stretchMode")
  private AudioStretchMode stretchMode = null;

  @SerializedName("takeNumber")
  private Integer takeNumber = null;

  @SerializedName("tapeName")
  private String tapeName = null;

  @SerializedName("tempo")
  private BigDecimal tempo = null;

  @SerializedName("timeScaleParams")
  private TimeScaleStretch timeScaleParams = null;

  @SerializedName("timeSignature")
  private TimeSignature timeSignature = null;

  @SerializedName("trackNumber")
  private Integer trackNumber = null;

  @SerializedName("tracks")
  private List<Track> tracks = null;

  @SerializedName("videoAlphaMode")
  private VideoAlphaMode videoAlphaMode = null;

  @SerializedName("videoAlphaPremultipleColor")
  private XmpG videoAlphaPremultipleColor = null;

  @SerializedName("videoAlphaUnityIsTransparent")
  private Boolean videoAlphaUnityIsTransparent = null;

  @SerializedName("videoColorSpace")
  private VideoColorSpace videoColorSpace = null;

  @SerializedName("videoCompressor")
  private String videoCompressor = null;

  @SerializedName("videoFieldOrder")
  private VideoFieldOrder videoFieldOrder = null;

  @SerializedName("videoFrameRate")
  private VideoFrameRate videoFrameRate = null;

  @SerializedName("videoFrameSize")
  private Dimension videoFrameSize = null;

  @SerializedName("videoPixelDepth")
  private VideoPixelDepth videoPixelDepth = null;

  @SerializedName("videoPixelAspectRatio")
  private String videoPixelAspectRatio = null;

  public XmpDM absPeakAudioFilePath(String absPeakAudioFilePath) {
    this.absPeakAudioFilePath = absPeakAudioFilePath;
    return this;
  }

   /**
   * Get absPeakAudioFilePath
   * @return absPeakAudioFilePath
  **/
  @ApiModelProperty(value = "")
  public String getAbsPeakAudioFilePath() {
    return absPeakAudioFilePath;
  }

  public void setAbsPeakAudioFilePath(String absPeakAudioFilePath) {
    this.absPeakAudioFilePath = absPeakAudioFilePath;
  }

  public XmpDM artist(String artist) {
    this.artist = artist;
    return this;
  }

   /**
   * Get artist
   * @return artist
  **/
  @ApiModelProperty(value = "")
  public String getArtist() {
    return artist;
  }

  public void setArtist(String artist) {
    this.artist = artist;
  }

  public XmpDM album(String album) {
    this.album = album;
    return this;
  }

   /**
   * Get album
   * @return album
  **/
  @ApiModelProperty(value = "")
  public String getAlbum() {
    return album;
  }

  public void setAlbum(String album) {
    this.album = album;
  }

  public XmpDM altTapeName(String altTapeName) {
    this.altTapeName = altTapeName;
    return this;
  }

   /**
   * Get altTapeName
   * @return altTapeName
  **/
  @ApiModelProperty(value = "")
  public String getAltTapeName() {
    return altTapeName;
  }

  public void setAltTapeName(String altTapeName) {
    this.altTapeName = altTapeName;
  }

  public XmpDM altTimecode(TimeCode altTimecode) {
    this.altTimecode = altTimecode;
    return this;
  }

   /**
   * Get altTimecode
   * @return altTimecode
  **/
  @ApiModelProperty(value = "")
  public TimeCode getAltTimecode() {
    return altTimecode;
  }

  public void setAltTimecode(TimeCode altTimecode) {
    this.altTimecode = altTimecode;
  }

  public XmpDM audioChannelType(AudioChannelType audioChannelType) {
    this.audioChannelType = audioChannelType;
    return this;
  }

   /**
   * Get audioChannelType
   * @return audioChannelType
  **/
  @ApiModelProperty(value = "")
  public AudioChannelType getAudioChannelType() {
    return audioChannelType;
  }

  public void setAudioChannelType(AudioChannelType audioChannelType) {
    this.audioChannelType = audioChannelType;
  }

  public XmpDM audioCompressor(String audioCompressor) {
    this.audioCompressor = audioCompressor;
    return this;
  }

   /**
   * Get audioCompressor
   * @return audioCompressor
  **/
  @ApiModelProperty(value = "")
  public String getAudioCompressor() {
    return audioCompressor;
  }

  public void setAudioCompressor(String audioCompressor) {
    this.audioCompressor = audioCompressor;
  }

  public XmpDM audioSampleRate(Integer audioSampleRate) {
    this.audioSampleRate = audioSampleRate;
    return this;
  }

   /**
   * Get audioSampleRate
   * @return audioSampleRate
  **/
  @ApiModelProperty(value = "")
  public Integer getAudioSampleRate() {
    return audioSampleRate;
  }

  public void setAudioSampleRate(Integer audioSampleRate) {
    this.audioSampleRate = audioSampleRate;
  }

  public XmpDM audioSampleType(AudioSampleType audioSampleType) {
    this.audioSampleType = audioSampleType;
    return this;
  }

   /**
   * Get audioSampleType
   * @return audioSampleType
  **/
  @ApiModelProperty(value = "")
  public AudioSampleType getAudioSampleType() {
    return audioSampleType;
  }

  public void setAudioSampleType(AudioSampleType audioSampleType) {
    this.audioSampleType = audioSampleType;
  }

  public XmpDM beatSpliceParams(BeatSpliceStretch beatSpliceParams) {
    this.beatSpliceParams = beatSpliceParams;
    return this;
  }

   /**
   * Get beatSpliceParams
   * @return beatSpliceParams
  **/
  @ApiModelProperty(value = "")
  public BeatSpliceStretch getBeatSpliceParams() {
    return beatSpliceParams;
  }

  public void setBeatSpliceParams(BeatSpliceStretch beatSpliceParams) {
    this.beatSpliceParams = beatSpliceParams;
  }

  public XmpDM cameraAngle(CameraAngle cameraAngle) {
    this.cameraAngle = cameraAngle;
    return this;
  }

   /**
   * Get cameraAngle
   * @return cameraAngle
  **/
  @ApiModelProperty(value = "")
  public CameraAngle getCameraAngle() {
    return cameraAngle;
  }

  public void setCameraAngle(CameraAngle cameraAngle) {
    this.cameraAngle = cameraAngle;
  }

  public XmpDM cameraLabel(String cameraLabel) {
    this.cameraLabel = cameraLabel;
    return this;
  }

   /**
   * Get cameraLabel
   * @return cameraLabel
  **/
  @ApiModelProperty(value = "")
  public String getCameraLabel() {
    return cameraLabel;
  }

  public void setCameraLabel(String cameraLabel) {
    this.cameraLabel = cameraLabel;
  }

  public XmpDM cameraModel(String cameraModel) {
    this.cameraModel = cameraModel;
    return this;
  }

   /**
   * Get cameraModel
   * @return cameraModel
  **/
  @ApiModelProperty(value = "")
  public String getCameraModel() {
    return cameraModel;
  }

  public void setCameraModel(String cameraModel) {
    this.cameraModel = cameraModel;
  }

  public XmpDM cameraMove(CameraMove cameraMove) {
    this.cameraMove = cameraMove;
    return this;
  }

   /**
   * Get cameraMove
   * @return cameraMove
  **/
  @ApiModelProperty(value = "")
  public CameraMove getCameraMove() {
    return cameraMove;
  }

  public void setCameraMove(CameraMove cameraMove) {
    this.cameraMove = cameraMove;
  }

  public XmpDM client(String client) {
    this.client = client;
    return this;
  }

   /**
   * Get client
   * @return client
  **/
  @ApiModelProperty(value = "")
  public String getClient() {
    return client;
  }

  public void setClient(String client) {
    this.client = client;
  }

  public XmpDM comment(String comment) {
    this.comment = comment;
    return this;
  }

   /**
   * Get comment
   * @return comment
  **/
  @ApiModelProperty(value = "")
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }

  public XmpDM composer(String composer) {
    this.composer = composer;
    return this;
  }

   /**
   * Get composer
   * @return composer
  **/
  @ApiModelProperty(value = "")
  public String getComposer() {
    return composer;
  }

  public void setComposer(String composer) {
    this.composer = composer;
  }

  public XmpDM contributedMedia(List<Media> contributedMedia) {
    this.contributedMedia = contributedMedia;
    return this;
  }

  public XmpDM addContributedMediaItem(Media contributedMediaItem) {
    if (this.contributedMedia == null) {
      this.contributedMedia = new ArrayList<Media>();
    }
    this.contributedMedia.add(contributedMediaItem);
    return this;
  }

   /**
   * Get contributedMedia
   * @return contributedMedia
  **/
  @ApiModelProperty(value = "")
  public List<Media> getContributedMedia() {
    return contributedMedia;
  }

  public void setContributedMedia(List<Media> contributedMedia) {
    this.contributedMedia = contributedMedia;
  }

  public XmpDM director(String director) {
    this.director = director;
    return this;
  }

   /**
   * Get director
   * @return director
  **/
  @ApiModelProperty(value = "")
  public String getDirector() {
    return director;
  }

  public void setDirector(String director) {
    this.director = director;
  }

  public XmpDM directorPhotography(String directorPhotography) {
    this.directorPhotography = directorPhotography;
    return this;
  }

   /**
   * Get directorPhotography
   * @return directorPhotography
  **/
  @ApiModelProperty(value = "")
  public String getDirectorPhotography() {
    return directorPhotography;
  }

  public void setDirectorPhotography(String directorPhotography) {
    this.directorPhotography = directorPhotography;
  }

  public XmpDM duration(Time duration) {
    this.duration = duration;
    return this;
  }

   /**
   * Get duration
   * @return duration
  **/
  @ApiModelProperty(value = "")
  public Time getDuration() {
    return duration;
  }

  public void setDuration(Time duration) {
    this.duration = duration;
  }

  public XmpDM engineer(String engineer) {
    this.engineer = engineer;
    return this;
  }

   /**
   * Get engineer
   * @return engineer
  **/
  @ApiModelProperty(value = "")
  public String getEngineer() {
    return engineer;
  }

  public void setEngineer(String engineer) {
    this.engineer = engineer;
  }

  public XmpDM fileDataRate(String fileDataRate) {
    this.fileDataRate = fileDataRate;
    return this;
  }

   /**
   * Get fileDataRate
   * @return fileDataRate
  **/
  @ApiModelProperty(value = "")
  public String getFileDataRate() {
    return fileDataRate;
  }

  public void setFileDataRate(String fileDataRate) {
    this.fileDataRate = fileDataRate;
  }

  public XmpDM genre(String genre) {
    this.genre = genre;
    return this;
  }

   /**
   * Get genre
   * @return genre
  **/
  @ApiModelProperty(value = "")
  public String getGenre() {
    return genre;
  }

  public void setGenre(String genre) {
    this.genre = genre;
  }

  public XmpDM good(Boolean good) {
    this.good = good;
    return this;
  }

   /**
   * Get good
   * @return good
  **/
  @ApiModelProperty(value = "")
  public Boolean getGood() {
    return good;
  }

  public void setGood(Boolean good) {
    this.good = good;
  }

  public XmpDM instrument(String instrument) {
    this.instrument = instrument;
    return this;
  }

   /**
   * Get instrument
   * @return instrument
  **/
  @ApiModelProperty(value = "")
  public String getInstrument() {
    return instrument;
  }

  public void setInstrument(String instrument) {
    this.instrument = instrument;
  }

  public XmpDM introTime(Time introTime) {
    this.introTime = introTime;
    return this;
  }

   /**
   * Get introTime
   * @return introTime
  **/
  @ApiModelProperty(value = "")
  public Time getIntroTime() {
    return introTime;
  }

  public void setIntroTime(Time introTime) {
    this.introTime = introTime;
  }

  public XmpDM key(AudioMusicalKey key) {
    this.key = key;
    return this;
  }

   /**
   * Get key
   * @return key
  **/
  @ApiModelProperty(value = "")
  public AudioMusicalKey getKey() {
    return key;
  }

  public void setKey(AudioMusicalKey key) {
    this.key = key;
  }

  public XmpDM logComment(String logComment) {
    this.logComment = logComment;
    return this;
  }

   /**
   * Get logComment
   * @return logComment
  **/
  @ApiModelProperty(value = "")
  public String getLogComment() {
    return logComment;
  }

  public void setLogComment(String logComment) {
    this.logComment = logComment;
  }

  public XmpDM loop(Boolean loop) {
    this.loop = loop;
    return this;
  }

   /**
   * Get loop
   * @return loop
  **/
  @ApiModelProperty(value = "")
  public Boolean getLoop() {
    return loop;
  }

  public void setLoop(Boolean loop) {
    this.loop = loop;
  }

  public XmpDM numberOfBeats(BigDecimal numberOfBeats) {
    this.numberOfBeats = numberOfBeats;
    return this;
  }

   /**
   * Get numberOfBeats
   * @return numberOfBeats
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getNumberOfBeats() {
    return numberOfBeats;
  }

  public void setNumberOfBeats(BigDecimal numberOfBeats) {
    this.numberOfBeats = numberOfBeats;
  }

  public XmpDM markers(List<Marker> markers) {
    this.markers = markers;
    return this;
  }

  public XmpDM addMarkersItem(Marker markersItem) {
    if (this.markers == null) {
      this.markers = new ArrayList<Marker>();
    }
    this.markers.add(markersItem);
    return this;
  }

   /**
   * Get markers
   * @return markers
  **/
  @ApiModelProperty(value = "")
  public List<Marker> getMarkers() {
    return markers;
  }

  public void setMarkers(List<Marker> markers) {
    this.markers = markers;
  }

  public XmpDM outCue(Time outCue) {
    this.outCue = outCue;
    return this;
  }

   /**
   * Get outCue
   * @return outCue
  **/
  @ApiModelProperty(value = "")
  public Time getOutCue() {
    return outCue;
  }

  public void setOutCue(Time outCue) {
    this.outCue = outCue;
  }

  public XmpDM projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @ApiModelProperty(value = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public XmpDM projectRef(ProjectLink projectRef) {
    this.projectRef = projectRef;
    return this;
  }

   /**
   * Get projectRef
   * @return projectRef
  **/
  @ApiModelProperty(value = "")
  public ProjectLink getProjectRef() {
    return projectRef;
  }

  public void setProjectRef(ProjectLink projectRef) {
    this.projectRef = projectRef;
  }

  public XmpDM pullDown(VideoPullDown pullDown) {
    this.pullDown = pullDown;
    return this;
  }

   /**
   * Get pullDown
   * @return pullDown
  **/
  @ApiModelProperty(value = "")
  public VideoPullDown getPullDown() {
    return pullDown;
  }

  public void setPullDown(VideoPullDown pullDown) {
    this.pullDown = pullDown;
  }

  public XmpDM relativePeakAudioFilePath(String relativePeakAudioFilePath) {
    this.relativePeakAudioFilePath = relativePeakAudioFilePath;
    return this;
  }

   /**
   * Get relativePeakAudioFilePath
   * @return relativePeakAudioFilePath
  **/
  @ApiModelProperty(value = "")
  public String getRelativePeakAudioFilePath() {
    return relativePeakAudioFilePath;
  }

  public void setRelativePeakAudioFilePath(String relativePeakAudioFilePath) {
    this.relativePeakAudioFilePath = relativePeakAudioFilePath;
  }

  public XmpDM relativeTimestamp(Time relativeTimestamp) {
    this.relativeTimestamp = relativeTimestamp;
    return this;
  }

   /**
   * Get relativeTimestamp
   * @return relativeTimestamp
  **/
  @ApiModelProperty(value = "")
  public Time getRelativeTimestamp() {
    return relativeTimestamp;
  }

  public void setRelativeTimestamp(Time relativeTimestamp) {
    this.relativeTimestamp = relativeTimestamp;
  }

  public XmpDM releaseDate(DateTime releaseDate) {
    this.releaseDate = releaseDate;
    return this;
  }

   /**
   * Get releaseDate
   * @return releaseDate
  **/
  @ApiModelProperty(value = "")
  public DateTime getReleaseDate() {
    return releaseDate;
  }

  public void setReleaseDate(DateTime releaseDate) {
    this.releaseDate = releaseDate;
  }

  public XmpDM resampleParams(ResampleStretch resampleParams) {
    this.resampleParams = resampleParams;
    return this;
  }

   /**
   * Get resampleParams
   * @return resampleParams
  **/
  @ApiModelProperty(value = "")
  public ResampleStretch getResampleParams() {
    return resampleParams;
  }

  public void setResampleParams(ResampleStretch resampleParams) {
    this.resampleParams = resampleParams;
  }

  public XmpDM scaleType(AudioMusicalScaleType scaleType) {
    this.scaleType = scaleType;
    return this;
  }

   /**
   * Get scaleType
   * @return scaleType
  **/
  @ApiModelProperty(value = "")
  public AudioMusicalScaleType getScaleType() {
    return scaleType;
  }

  public void setScaleType(AudioMusicalScaleType scaleType) {
    this.scaleType = scaleType;
  }

  public XmpDM scene(String scene) {
    this.scene = scene;
    return this;
  }

   /**
   * Get scene
   * @return scene
  **/
  @ApiModelProperty(value = "")
  public String getScene() {
    return scene;
  }

  public void setScene(String scene) {
    this.scene = scene;
  }

  public XmpDM shotDate(DateTime shotDate) {
    this.shotDate = shotDate;
    return this;
  }

   /**
   * Get shotDate
   * @return shotDate
  **/
  @ApiModelProperty(value = "")
  public DateTime getShotDate() {
    return shotDate;
  }

  public void setShotDate(DateTime shotDate) {
    this.shotDate = shotDate;
  }

  public XmpDM shotDay(String shotDay) {
    this.shotDay = shotDay;
    return this;
  }

   /**
   * Get shotDay
   * @return shotDay
  **/
  @ApiModelProperty(value = "")
  public String getShotDay() {
    return shotDay;
  }

  public void setShotDay(String shotDay) {
    this.shotDay = shotDay;
  }

  public XmpDM shotLocation(String shotLocation) {
    this.shotLocation = shotLocation;
    return this;
  }

   /**
   * Get shotLocation
   * @return shotLocation
  **/
  @ApiModelProperty(value = "")
  public String getShotLocation() {
    return shotLocation;
  }

  public void setShotLocation(String shotLocation) {
    this.shotLocation = shotLocation;
  }

  public XmpDM shotName(String shotName) {
    this.shotName = shotName;
    return this;
  }

   /**
   * Get shotName
   * @return shotName
  **/
  @ApiModelProperty(value = "")
  public String getShotName() {
    return shotName;
  }

  public void setShotName(String shotName) {
    this.shotName = shotName;
  }

  public XmpDM shotNumber(String shotNumber) {
    this.shotNumber = shotNumber;
    return this;
  }

   /**
   * Get shotNumber
   * @return shotNumber
  **/
  @ApiModelProperty(value = "")
  public String getShotNumber() {
    return shotNumber;
  }

  public void setShotNumber(String shotNumber) {
    this.shotNumber = shotNumber;
  }

  public XmpDM shotSize(ShotSize shotSize) {
    this.shotSize = shotSize;
    return this;
  }

   /**
   * Get shotSize
   * @return shotSize
  **/
  @ApiModelProperty(value = "")
  public ShotSize getShotSize() {
    return shotSize;
  }

  public void setShotSize(ShotSize shotSize) {
    this.shotSize = shotSize;
  }

  public XmpDM speakerPlacement(String speakerPlacement) {
    this.speakerPlacement = speakerPlacement;
    return this;
  }

   /**
   * Get speakerPlacement
   * @return speakerPlacement
  **/
  @ApiModelProperty(value = "")
  public String getSpeakerPlacement() {
    return speakerPlacement;
  }

  public void setSpeakerPlacement(String speakerPlacement) {
    this.speakerPlacement = speakerPlacement;
  }

  public XmpDM startTimecode(TimeCode startTimecode) {
    this.startTimecode = startTimecode;
    return this;
  }

   /**
   * Get startTimecode
   * @return startTimecode
  **/
  @ApiModelProperty(value = "")
  public TimeCode getStartTimecode() {
    return startTimecode;
  }

  public void setStartTimecode(TimeCode startTimecode) {
    this.startTimecode = startTimecode;
  }

  public XmpDM stretchMode(AudioStretchMode stretchMode) {
    this.stretchMode = stretchMode;
    return this;
  }

   /**
   * Get stretchMode
   * @return stretchMode
  **/
  @ApiModelProperty(value = "")
  public AudioStretchMode getStretchMode() {
    return stretchMode;
  }

  public void setStretchMode(AudioStretchMode stretchMode) {
    this.stretchMode = stretchMode;
  }

  public XmpDM takeNumber(Integer takeNumber) {
    this.takeNumber = takeNumber;
    return this;
  }

   /**
   * Get takeNumber
   * @return takeNumber
  **/
  @ApiModelProperty(value = "")
  public Integer getTakeNumber() {
    return takeNumber;
  }

  public void setTakeNumber(Integer takeNumber) {
    this.takeNumber = takeNumber;
  }

  public XmpDM tapeName(String tapeName) {
    this.tapeName = tapeName;
    return this;
  }

   /**
   * Get tapeName
   * @return tapeName
  **/
  @ApiModelProperty(value = "")
  public String getTapeName() {
    return tapeName;
  }

  public void setTapeName(String tapeName) {
    this.tapeName = tapeName;
  }

  public XmpDM tempo(BigDecimal tempo) {
    this.tempo = tempo;
    return this;
  }

   /**
   * Get tempo
   * @return tempo
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getTempo() {
    return tempo;
  }

  public void setTempo(BigDecimal tempo) {
    this.tempo = tempo;
  }

  public XmpDM timeScaleParams(TimeScaleStretch timeScaleParams) {
    this.timeScaleParams = timeScaleParams;
    return this;
  }

   /**
   * Get timeScaleParams
   * @return timeScaleParams
  **/
  @ApiModelProperty(value = "")
  public TimeScaleStretch getTimeScaleParams() {
    return timeScaleParams;
  }

  public void setTimeScaleParams(TimeScaleStretch timeScaleParams) {
    this.timeScaleParams = timeScaleParams;
  }

  public XmpDM timeSignature(TimeSignature timeSignature) {
    this.timeSignature = timeSignature;
    return this;
  }

   /**
   * Get timeSignature
   * @return timeSignature
  **/
  @ApiModelProperty(value = "")
  public TimeSignature getTimeSignature() {
    return timeSignature;
  }

  public void setTimeSignature(TimeSignature timeSignature) {
    this.timeSignature = timeSignature;
  }

  public XmpDM trackNumber(Integer trackNumber) {
    this.trackNumber = trackNumber;
    return this;
  }

   /**
   * Get trackNumber
   * @return trackNumber
  **/
  @ApiModelProperty(value = "")
  public Integer getTrackNumber() {
    return trackNumber;
  }

  public void setTrackNumber(Integer trackNumber) {
    this.trackNumber = trackNumber;
  }

  public XmpDM tracks(List<Track> tracks) {
    this.tracks = tracks;
    return this;
  }

  public XmpDM addTracksItem(Track tracksItem) {
    if (this.tracks == null) {
      this.tracks = new ArrayList<Track>();
    }
    this.tracks.add(tracksItem);
    return this;
  }

   /**
   * Get tracks
   * @return tracks
  **/
  @ApiModelProperty(value = "")
  public List<Track> getTracks() {
    return tracks;
  }

  public void setTracks(List<Track> tracks) {
    this.tracks = tracks;
  }

  public XmpDM videoAlphaMode(VideoAlphaMode videoAlphaMode) {
    this.videoAlphaMode = videoAlphaMode;
    return this;
  }

   /**
   * Get videoAlphaMode
   * @return videoAlphaMode
  **/
  @ApiModelProperty(value = "")
  public VideoAlphaMode getVideoAlphaMode() {
    return videoAlphaMode;
  }

  public void setVideoAlphaMode(VideoAlphaMode videoAlphaMode) {
    this.videoAlphaMode = videoAlphaMode;
  }

  public XmpDM videoAlphaPremultipleColor(XmpG videoAlphaPremultipleColor) {
    this.videoAlphaPremultipleColor = videoAlphaPremultipleColor;
    return this;
  }

   /**
   * Get videoAlphaPremultipleColor
   * @return videoAlphaPremultipleColor
  **/
  @ApiModelProperty(value = "")
  public XmpG getVideoAlphaPremultipleColor() {
    return videoAlphaPremultipleColor;
  }

  public void setVideoAlphaPremultipleColor(XmpG videoAlphaPremultipleColor) {
    this.videoAlphaPremultipleColor = videoAlphaPremultipleColor;
  }

  public XmpDM videoAlphaUnityIsTransparent(Boolean videoAlphaUnityIsTransparent) {
    this.videoAlphaUnityIsTransparent = videoAlphaUnityIsTransparent;
    return this;
  }

   /**
   * Get videoAlphaUnityIsTransparent
   * @return videoAlphaUnityIsTransparent
  **/
  @ApiModelProperty(value = "")
  public Boolean getVideoAlphaUnityIsTransparent() {
    return videoAlphaUnityIsTransparent;
  }

  public void setVideoAlphaUnityIsTransparent(Boolean videoAlphaUnityIsTransparent) {
    this.videoAlphaUnityIsTransparent = videoAlphaUnityIsTransparent;
  }

  public XmpDM videoColorSpace(VideoColorSpace videoColorSpace) {
    this.videoColorSpace = videoColorSpace;
    return this;
  }

   /**
   * Get videoColorSpace
   * @return videoColorSpace
  **/
  @ApiModelProperty(value = "")
  public VideoColorSpace getVideoColorSpace() {
    return videoColorSpace;
  }

  public void setVideoColorSpace(VideoColorSpace videoColorSpace) {
    this.videoColorSpace = videoColorSpace;
  }

  public XmpDM videoCompressor(String videoCompressor) {
    this.videoCompressor = videoCompressor;
    return this;
  }

   /**
   * Get videoCompressor
   * @return videoCompressor
  **/
  @ApiModelProperty(value = "")
  public String getVideoCompressor() {
    return videoCompressor;
  }

  public void setVideoCompressor(String videoCompressor) {
    this.videoCompressor = videoCompressor;
  }

  public XmpDM videoFieldOrder(VideoFieldOrder videoFieldOrder) {
    this.videoFieldOrder = videoFieldOrder;
    return this;
  }

   /**
   * Get videoFieldOrder
   * @return videoFieldOrder
  **/
  @ApiModelProperty(value = "")
  public VideoFieldOrder getVideoFieldOrder() {
    return videoFieldOrder;
  }

  public void setVideoFieldOrder(VideoFieldOrder videoFieldOrder) {
    this.videoFieldOrder = videoFieldOrder;
  }

  public XmpDM videoFrameRate(VideoFrameRate videoFrameRate) {
    this.videoFrameRate = videoFrameRate;
    return this;
  }

   /**
   * Get videoFrameRate
   * @return videoFrameRate
  **/
  @ApiModelProperty(value = "")
  public VideoFrameRate getVideoFrameRate() {
    return videoFrameRate;
  }

  public void setVideoFrameRate(VideoFrameRate videoFrameRate) {
    this.videoFrameRate = videoFrameRate;
  }

  public XmpDM videoFrameSize(Dimension videoFrameSize) {
    this.videoFrameSize = videoFrameSize;
    return this;
  }

   /**
   * Get videoFrameSize
   * @return videoFrameSize
  **/
  @ApiModelProperty(value = "")
  public Dimension getVideoFrameSize() {
    return videoFrameSize;
  }

  public void setVideoFrameSize(Dimension videoFrameSize) {
    this.videoFrameSize = videoFrameSize;
  }

  public XmpDM videoPixelDepth(VideoPixelDepth videoPixelDepth) {
    this.videoPixelDepth = videoPixelDepth;
    return this;
  }

   /**
   * Get videoPixelDepth
   * @return videoPixelDepth
  **/
  @ApiModelProperty(value = "")
  public VideoPixelDepth getVideoPixelDepth() {
    return videoPixelDepth;
  }

  public void setVideoPixelDepth(VideoPixelDepth videoPixelDepth) {
    this.videoPixelDepth = videoPixelDepth;
  }

  public XmpDM videoPixelAspectRatio(String videoPixelAspectRatio) {
    this.videoPixelAspectRatio = videoPixelAspectRatio;
    return this;
  }

   /**
   * Get videoPixelAspectRatio
   * @return videoPixelAspectRatio
  **/
  @ApiModelProperty(value = "")
  public String getVideoPixelAspectRatio() {
    return videoPixelAspectRatio;
  }

  public void setVideoPixelAspectRatio(String videoPixelAspectRatio) {
    this.videoPixelAspectRatio = videoPixelAspectRatio;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    XmpDM xmpDM = (XmpDM) o;
    return Objects.equals(this.absPeakAudioFilePath, xmpDM.absPeakAudioFilePath) &&
        Objects.equals(this.artist, xmpDM.artist) &&
        Objects.equals(this.album, xmpDM.album) &&
        Objects.equals(this.altTapeName, xmpDM.altTapeName) &&
        Objects.equals(this.altTimecode, xmpDM.altTimecode) &&
        Objects.equals(this.audioChannelType, xmpDM.audioChannelType) &&
        Objects.equals(this.audioCompressor, xmpDM.audioCompressor) &&
        Objects.equals(this.audioSampleRate, xmpDM.audioSampleRate) &&
        Objects.equals(this.audioSampleType, xmpDM.audioSampleType) &&
        Objects.equals(this.beatSpliceParams, xmpDM.beatSpliceParams) &&
        Objects.equals(this.cameraAngle, xmpDM.cameraAngle) &&
        Objects.equals(this.cameraLabel, xmpDM.cameraLabel) &&
        Objects.equals(this.cameraModel, xmpDM.cameraModel) &&
        Objects.equals(this.cameraMove, xmpDM.cameraMove) &&
        Objects.equals(this.client, xmpDM.client) &&
        Objects.equals(this.comment, xmpDM.comment) &&
        Objects.equals(this.composer, xmpDM.composer) &&
        Objects.equals(this.contributedMedia, xmpDM.contributedMedia) &&
        Objects.equals(this.director, xmpDM.director) &&
        Objects.equals(this.directorPhotography, xmpDM.directorPhotography) &&
        Objects.equals(this.duration, xmpDM.duration) &&
        Objects.equals(this.engineer, xmpDM.engineer) &&
        Objects.equals(this.fileDataRate, xmpDM.fileDataRate) &&
        Objects.equals(this.genre, xmpDM.genre) &&
        Objects.equals(this.good, xmpDM.good) &&
        Objects.equals(this.instrument, xmpDM.instrument) &&
        Objects.equals(this.introTime, xmpDM.introTime) &&
        Objects.equals(this.key, xmpDM.key) &&
        Objects.equals(this.logComment, xmpDM.logComment) &&
        Objects.equals(this.loop, xmpDM.loop) &&
        Objects.equals(this.numberOfBeats, xmpDM.numberOfBeats) &&
        Objects.equals(this.markers, xmpDM.markers) &&
        Objects.equals(this.outCue, xmpDM.outCue) &&
        Objects.equals(this.projectName, xmpDM.projectName) &&
        Objects.equals(this.projectRef, xmpDM.projectRef) &&
        Objects.equals(this.pullDown, xmpDM.pullDown) &&
        Objects.equals(this.relativePeakAudioFilePath, xmpDM.relativePeakAudioFilePath) &&
        Objects.equals(this.relativeTimestamp, xmpDM.relativeTimestamp) &&
        Objects.equals(this.releaseDate, xmpDM.releaseDate) &&
        Objects.equals(this.resampleParams, xmpDM.resampleParams) &&
        Objects.equals(this.scaleType, xmpDM.scaleType) &&
        Objects.equals(this.scene, xmpDM.scene) &&
        Objects.equals(this.shotDate, xmpDM.shotDate) &&
        Objects.equals(this.shotDay, xmpDM.shotDay) &&
        Objects.equals(this.shotLocation, xmpDM.shotLocation) &&
        Objects.equals(this.shotName, xmpDM.shotName) &&
        Objects.equals(this.shotNumber, xmpDM.shotNumber) &&
        Objects.equals(this.shotSize, xmpDM.shotSize) &&
        Objects.equals(this.speakerPlacement, xmpDM.speakerPlacement) &&
        Objects.equals(this.startTimecode, xmpDM.startTimecode) &&
        Objects.equals(this.stretchMode, xmpDM.stretchMode) &&
        Objects.equals(this.takeNumber, xmpDM.takeNumber) &&
        Objects.equals(this.tapeName, xmpDM.tapeName) &&
        Objects.equals(this.tempo, xmpDM.tempo) &&
        Objects.equals(this.timeScaleParams, xmpDM.timeScaleParams) &&
        Objects.equals(this.timeSignature, xmpDM.timeSignature) &&
        Objects.equals(this.trackNumber, xmpDM.trackNumber) &&
        Objects.equals(this.tracks, xmpDM.tracks) &&
        Objects.equals(this.videoAlphaMode, xmpDM.videoAlphaMode) &&
        Objects.equals(this.videoAlphaPremultipleColor, xmpDM.videoAlphaPremultipleColor) &&
        Objects.equals(this.videoAlphaUnityIsTransparent, xmpDM.videoAlphaUnityIsTransparent) &&
        Objects.equals(this.videoColorSpace, xmpDM.videoColorSpace) &&
        Objects.equals(this.videoCompressor, xmpDM.videoCompressor) &&
        Objects.equals(this.videoFieldOrder, xmpDM.videoFieldOrder) &&
        Objects.equals(this.videoFrameRate, xmpDM.videoFrameRate) &&
        Objects.equals(this.videoFrameSize, xmpDM.videoFrameSize) &&
        Objects.equals(this.videoPixelDepth, xmpDM.videoPixelDepth) &&
        Objects.equals(this.videoPixelAspectRatio, xmpDM.videoPixelAspectRatio);
  }

  @Override
  public int hashCode() {
    return Objects.hash(absPeakAudioFilePath, artist, album, altTapeName, altTimecode, audioChannelType, audioCompressor, audioSampleRate, audioSampleType, beatSpliceParams, cameraAngle, cameraLabel, cameraModel, cameraMove, client, comment, composer, contributedMedia, director, directorPhotography, duration, engineer, fileDataRate, genre, good, instrument, introTime, key, logComment, loop, numberOfBeats, markers, outCue, projectName, projectRef, pullDown, relativePeakAudioFilePath, relativeTimestamp, releaseDate, resampleParams, scaleType, scene, shotDate, shotDay, shotLocation, shotName, shotNumber, shotSize, speakerPlacement, startTimecode, stretchMode, takeNumber, tapeName, tempo, timeScaleParams, timeSignature, trackNumber, tracks, videoAlphaMode, videoAlphaPremultipleColor, videoAlphaUnityIsTransparent, videoColorSpace, videoCompressor, videoFieldOrder, videoFrameRate, videoFrameSize, videoPixelDepth, videoPixelAspectRatio);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class XmpDM {\n");
    
    sb.append("    absPeakAudioFilePath: ").append(toIndentedString(absPeakAudioFilePath)).append("\n");
    sb.append("    artist: ").append(toIndentedString(artist)).append("\n");
    sb.append("    album: ").append(toIndentedString(album)).append("\n");
    sb.append("    altTapeName: ").append(toIndentedString(altTapeName)).append("\n");
    sb.append("    altTimecode: ").append(toIndentedString(altTimecode)).append("\n");
    sb.append("    audioChannelType: ").append(toIndentedString(audioChannelType)).append("\n");
    sb.append("    audioCompressor: ").append(toIndentedString(audioCompressor)).append("\n");
    sb.append("    audioSampleRate: ").append(toIndentedString(audioSampleRate)).append("\n");
    sb.append("    audioSampleType: ").append(toIndentedString(audioSampleType)).append("\n");
    sb.append("    beatSpliceParams: ").append(toIndentedString(beatSpliceParams)).append("\n");
    sb.append("    cameraAngle: ").append(toIndentedString(cameraAngle)).append("\n");
    sb.append("    cameraLabel: ").append(toIndentedString(cameraLabel)).append("\n");
    sb.append("    cameraModel: ").append(toIndentedString(cameraModel)).append("\n");
    sb.append("    cameraMove: ").append(toIndentedString(cameraMove)).append("\n");
    sb.append("    client: ").append(toIndentedString(client)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    composer: ").append(toIndentedString(composer)).append("\n");
    sb.append("    contributedMedia: ").append(toIndentedString(contributedMedia)).append("\n");
    sb.append("    director: ").append(toIndentedString(director)).append("\n");
    sb.append("    directorPhotography: ").append(toIndentedString(directorPhotography)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    engineer: ").append(toIndentedString(engineer)).append("\n");
    sb.append("    fileDataRate: ").append(toIndentedString(fileDataRate)).append("\n");
    sb.append("    genre: ").append(toIndentedString(genre)).append("\n");
    sb.append("    good: ").append(toIndentedString(good)).append("\n");
    sb.append("    instrument: ").append(toIndentedString(instrument)).append("\n");
    sb.append("    introTime: ").append(toIndentedString(introTime)).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    logComment: ").append(toIndentedString(logComment)).append("\n");
    sb.append("    loop: ").append(toIndentedString(loop)).append("\n");
    sb.append("    numberOfBeats: ").append(toIndentedString(numberOfBeats)).append("\n");
    sb.append("    markers: ").append(toIndentedString(markers)).append("\n");
    sb.append("    outCue: ").append(toIndentedString(outCue)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    projectRef: ").append(toIndentedString(projectRef)).append("\n");
    sb.append("    pullDown: ").append(toIndentedString(pullDown)).append("\n");
    sb.append("    relativePeakAudioFilePath: ").append(toIndentedString(relativePeakAudioFilePath)).append("\n");
    sb.append("    relativeTimestamp: ").append(toIndentedString(relativeTimestamp)).append("\n");
    sb.append("    releaseDate: ").append(toIndentedString(releaseDate)).append("\n");
    sb.append("    resampleParams: ").append(toIndentedString(resampleParams)).append("\n");
    sb.append("    scaleType: ").append(toIndentedString(scaleType)).append("\n");
    sb.append("    scene: ").append(toIndentedString(scene)).append("\n");
    sb.append("    shotDate: ").append(toIndentedString(shotDate)).append("\n");
    sb.append("    shotDay: ").append(toIndentedString(shotDay)).append("\n");
    sb.append("    shotLocation: ").append(toIndentedString(shotLocation)).append("\n");
    sb.append("    shotName: ").append(toIndentedString(shotName)).append("\n");
    sb.append("    shotNumber: ").append(toIndentedString(shotNumber)).append("\n");
    sb.append("    shotSize: ").append(toIndentedString(shotSize)).append("\n");
    sb.append("    speakerPlacement: ").append(toIndentedString(speakerPlacement)).append("\n");
    sb.append("    startTimecode: ").append(toIndentedString(startTimecode)).append("\n");
    sb.append("    stretchMode: ").append(toIndentedString(stretchMode)).append("\n");
    sb.append("    takeNumber: ").append(toIndentedString(takeNumber)).append("\n");
    sb.append("    tapeName: ").append(toIndentedString(tapeName)).append("\n");
    sb.append("    tempo: ").append(toIndentedString(tempo)).append("\n");
    sb.append("    timeScaleParams: ").append(toIndentedString(timeScaleParams)).append("\n");
    sb.append("    timeSignature: ").append(toIndentedString(timeSignature)).append("\n");
    sb.append("    trackNumber: ").append(toIndentedString(trackNumber)).append("\n");
    sb.append("    tracks: ").append(toIndentedString(tracks)).append("\n");
    sb.append("    videoAlphaMode: ").append(toIndentedString(videoAlphaMode)).append("\n");
    sb.append("    videoAlphaPremultipleColor: ").append(toIndentedString(videoAlphaPremultipleColor)).append("\n");
    sb.append("    videoAlphaUnityIsTransparent: ").append(toIndentedString(videoAlphaUnityIsTransparent)).append("\n");
    sb.append("    videoColorSpace: ").append(toIndentedString(videoColorSpace)).append("\n");
    sb.append("    videoCompressor: ").append(toIndentedString(videoCompressor)).append("\n");
    sb.append("    videoFieldOrder: ").append(toIndentedString(videoFieldOrder)).append("\n");
    sb.append("    videoFrameRate: ").append(toIndentedString(videoFrameRate)).append("\n");
    sb.append("    videoFrameSize: ").append(toIndentedString(videoFrameSize)).append("\n");
    sb.append("    videoPixelDepth: ").append(toIndentedString(videoPixelDepth)).append("\n");
    sb.append("    videoPixelAspectRatio: ").append(toIndentedString(videoPixelAspectRatio)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

