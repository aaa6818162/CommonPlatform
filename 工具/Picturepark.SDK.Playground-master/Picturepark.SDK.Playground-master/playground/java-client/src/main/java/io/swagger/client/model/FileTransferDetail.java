/*
 * Web API Swagger specification
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.DriveMetadata;
import io.swagger.client.model.EntityType;
import io.swagger.client.model.FileMetadata;
import io.swagger.client.model.FileTransferState;
import io.swagger.client.model.OutputItem;
import io.swagger.client.model.StoreAudit;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * FileTransferDetail
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-10-04T14:36:42.044Z")
public class FileTransferDetail {
  @SerializedName("id")
  private String id = null;

  @SerializedName("rev")
  private String rev = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("identifier")
  private String identifier = null;

  @SerializedName("audit")
  private StoreAudit audit = null;

  @SerializedName("transferId")
  private String transferId = null;

  @SerializedName("state")
  private FileTransferState state = null;

  @SerializedName("entityType")
  private EntityType entityType = null;

  @SerializedName("fileMetadata")
  private FileMetadata fileMetadata = null;

  @SerializedName("driveMetadata")
  private DriveMetadata driveMetadata = null;

  @SerializedName("outputItems")
  private List<OutputItem> outputItems = null;

  @SerializedName("contentId")
  private String contentId = null;

  public FileTransferDetail id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public FileTransferDetail rev(String rev) {
    this.rev = rev;
    return this;
  }

   /**
   * Get rev
   * @return rev
  **/
  @ApiModelProperty(value = "")
  public String getRev() {
    return rev;
  }

  public void setRev(String rev) {
    this.rev = rev;
  }

  public FileTransferDetail name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public FileTransferDetail identifier(String identifier) {
    this.identifier = identifier;
    return this;
  }

   /**
   * Get identifier
   * @return identifier
  **/
  @ApiModelProperty(value = "")
  public String getIdentifier() {
    return identifier;
  }

  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }

  public FileTransferDetail audit(StoreAudit audit) {
    this.audit = audit;
    return this;
  }

   /**
   * Get audit
   * @return audit
  **/
  @ApiModelProperty(value = "")
  public StoreAudit getAudit() {
    return audit;
  }

  public void setAudit(StoreAudit audit) {
    this.audit = audit;
  }

  public FileTransferDetail transferId(String transferId) {
    this.transferId = transferId;
    return this;
  }

   /**
   * Get transferId
   * @return transferId
  **/
  @ApiModelProperty(value = "")
  public String getTransferId() {
    return transferId;
  }

  public void setTransferId(String transferId) {
    this.transferId = transferId;
  }

  public FileTransferDetail state(FileTransferState state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @ApiModelProperty(required = true, value = "")
  public FileTransferState getState() {
    return state;
  }

  public void setState(FileTransferState state) {
    this.state = state;
  }

  public FileTransferDetail entityType(EntityType entityType) {
    this.entityType = entityType;
    return this;
  }

   /**
   * Get entityType
   * @return entityType
  **/
  @ApiModelProperty(required = true, value = "")
  public EntityType getEntityType() {
    return entityType;
  }

  public void setEntityType(EntityType entityType) {
    this.entityType = entityType;
  }

  public FileTransferDetail fileMetadata(FileMetadata fileMetadata) {
    this.fileMetadata = fileMetadata;
    return this;
  }

   /**
   * Get fileMetadata
   * @return fileMetadata
  **/
  @ApiModelProperty(value = "")
  public FileMetadata getFileMetadata() {
    return fileMetadata;
  }

  public void setFileMetadata(FileMetadata fileMetadata) {
    this.fileMetadata = fileMetadata;
  }

  public FileTransferDetail driveMetadata(DriveMetadata driveMetadata) {
    this.driveMetadata = driveMetadata;
    return this;
  }

   /**
   * Get driveMetadata
   * @return driveMetadata
  **/
  @ApiModelProperty(value = "")
  public DriveMetadata getDriveMetadata() {
    return driveMetadata;
  }

  public void setDriveMetadata(DriveMetadata driveMetadata) {
    this.driveMetadata = driveMetadata;
  }

  public FileTransferDetail outputItems(List<OutputItem> outputItems) {
    this.outputItems = outputItems;
    return this;
  }

  public FileTransferDetail addOutputItemsItem(OutputItem outputItemsItem) {
    if (this.outputItems == null) {
      this.outputItems = new ArrayList<OutputItem>();
    }
    this.outputItems.add(outputItemsItem);
    return this;
  }

   /**
   * Get outputItems
   * @return outputItems
  **/
  @ApiModelProperty(value = "")
  public List<OutputItem> getOutputItems() {
    return outputItems;
  }

  public void setOutputItems(List<OutputItem> outputItems) {
    this.outputItems = outputItems;
  }

  public FileTransferDetail contentId(String contentId) {
    this.contentId = contentId;
    return this;
  }

   /**
   * Get contentId
   * @return contentId
  **/
  @ApiModelProperty(value = "")
  public String getContentId() {
    return contentId;
  }

  public void setContentId(String contentId) {
    this.contentId = contentId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FileTransferDetail fileTransferDetail = (FileTransferDetail) o;
    return Objects.equals(this.id, fileTransferDetail.id) &&
        Objects.equals(this.rev, fileTransferDetail.rev) &&
        Objects.equals(this.name, fileTransferDetail.name) &&
        Objects.equals(this.identifier, fileTransferDetail.identifier) &&
        Objects.equals(this.audit, fileTransferDetail.audit) &&
        Objects.equals(this.transferId, fileTransferDetail.transferId) &&
        Objects.equals(this.state, fileTransferDetail.state) &&
        Objects.equals(this.entityType, fileTransferDetail.entityType) &&
        Objects.equals(this.fileMetadata, fileTransferDetail.fileMetadata) &&
        Objects.equals(this.driveMetadata, fileTransferDetail.driveMetadata) &&
        Objects.equals(this.outputItems, fileTransferDetail.outputItems) &&
        Objects.equals(this.contentId, fileTransferDetail.contentId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, rev, name, identifier, audit, transferId, state, entityType, fileMetadata, driveMetadata, outputItems, contentId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FileTransferDetail {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    rev: ").append(toIndentedString(rev)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    audit: ").append(toIndentedString(audit)).append("\n");
    sb.append("    transferId: ").append(toIndentedString(transferId)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    entityType: ").append(toIndentedString(entityType)).append("\n");
    sb.append("    fileMetadata: ").append(toIndentedString(fileMetadata)).append("\n");
    sb.append("    driveMetadata: ").append(toIndentedString(driveMetadata)).append("\n");
    sb.append("    outputItems: ").append(toIndentedString(outputItems)).append("\n");
    sb.append("    contentId: ").append(toIndentedString(contentId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

