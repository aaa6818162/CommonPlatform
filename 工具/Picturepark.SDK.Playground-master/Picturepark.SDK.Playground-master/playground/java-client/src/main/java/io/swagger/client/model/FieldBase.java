/*
 * Web API Swagger specification
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.TranslatedStringDictionary;
import java.io.IOException;

/**
 * FieldBase
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-10-04T14:36:42.044Z")

public class FieldBase {
  @SerializedName("id")
  private String id = null;

  @SerializedName("indexId")
  private String indexId = null;

  @SerializedName("fieldNamespace")
  private String fieldNamespace = null;

  @SerializedName("names")
  private TranslatedStringDictionary names = null;

  @SerializedName("descriptions")
  private TranslatedStringDictionary descriptions = null;

  @SerializedName("required")
  private Boolean required = null;

  @SerializedName("fixed")
  private Boolean fixed = null;

  @SerializedName("index")
  private Boolean index = null;

  @SerializedName("simpleSearch")
  private Boolean simpleSearch = null;

  @SerializedName("boost")
  private Double boost = null;

  @SerializedName("kind")
  private String kind = null;

  public FieldBase id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public FieldBase indexId(String indexId) {
    this.indexId = indexId;
    return this;
  }

   /**
   * Get indexId
   * @return indexId
  **/
  @ApiModelProperty(value = "")
  public String getIndexId() {
    return indexId;
  }

  public void setIndexId(String indexId) {
    this.indexId = indexId;
  }

  public FieldBase fieldNamespace(String fieldNamespace) {
    this.fieldNamespace = fieldNamespace;
    return this;
  }

   /**
   * Get fieldNamespace
   * @return fieldNamespace
  **/
  @ApiModelProperty(value = "")
  public String getFieldNamespace() {
    return fieldNamespace;
  }

  public void setFieldNamespace(String fieldNamespace) {
    this.fieldNamespace = fieldNamespace;
  }

  public FieldBase names(TranslatedStringDictionary names) {
    this.names = names;
    return this;
  }

   /**
   * Get names
   * @return names
  **/
  @ApiModelProperty(value = "")
  public TranslatedStringDictionary getNames() {
    return names;
  }

  public void setNames(TranslatedStringDictionary names) {
    this.names = names;
  }

  public FieldBase descriptions(TranslatedStringDictionary descriptions) {
    this.descriptions = descriptions;
    return this;
  }

   /**
   * Get descriptions
   * @return descriptions
  **/
  @ApiModelProperty(value = "")
  public TranslatedStringDictionary getDescriptions() {
    return descriptions;
  }

  public void setDescriptions(TranslatedStringDictionary descriptions) {
    this.descriptions = descriptions;
  }

  public FieldBase required(Boolean required) {
    this.required = required;
    return this;
  }

   /**
   * Get required
   * @return required
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean getRequired() {
    return required;
  }

  public void setRequired(Boolean required) {
    this.required = required;
  }

  public FieldBase fixed(Boolean fixed) {
    this.fixed = fixed;
    return this;
  }

   /**
   * Get fixed
   * @return fixed
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean getFixed() {
    return fixed;
  }

  public void setFixed(Boolean fixed) {
    this.fixed = fixed;
  }

  public FieldBase index(Boolean index) {
    this.index = index;
    return this;
  }

   /**
   * Get index
   * @return index
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean getIndex() {
    return index;
  }

  public void setIndex(Boolean index) {
    this.index = index;
  }

  public FieldBase simpleSearch(Boolean simpleSearch) {
    this.simpleSearch = simpleSearch;
    return this;
  }

   /**
   * Get simpleSearch
   * @return simpleSearch
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean getSimpleSearch() {
    return simpleSearch;
  }

  public void setSimpleSearch(Boolean simpleSearch) {
    this.simpleSearch = simpleSearch;
  }

  public FieldBase boost(Double boost) {
    this.boost = boost;
    return this;
  }

   /**
   * Get boost
   * @return boost
  **/
  @ApiModelProperty(required = true, value = "")
  public Double getBoost() {
    return boost;
  }

  public void setBoost(Double boost) {
    this.boost = boost;
  }

  public FieldBase kind(String kind) {
    this.kind = kind;
    return this;
  }

   /**
   * Get kind
   * @return kind
  **/
  @ApiModelProperty(required = true, value = "")
  public String getKind() {
    return kind;
  }

  public void setKind(String kind) {
    this.kind = kind;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FieldBase fieldBase = (FieldBase) o;
    return Objects.equals(this.id, fieldBase.id) &&
        Objects.equals(this.indexId, fieldBase.indexId) &&
        Objects.equals(this.fieldNamespace, fieldBase.fieldNamespace) &&
        Objects.equals(this.names, fieldBase.names) &&
        Objects.equals(this.descriptions, fieldBase.descriptions) &&
        Objects.equals(this.required, fieldBase.required) &&
        Objects.equals(this.fixed, fieldBase.fixed) &&
        Objects.equals(this.index, fieldBase.index) &&
        Objects.equals(this.simpleSearch, fieldBase.simpleSearch) &&
        Objects.equals(this.boost, fieldBase.boost) &&
        Objects.equals(this.kind, fieldBase.kind);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, indexId, fieldNamespace, names, descriptions, required, fixed, index, simpleSearch, boost, kind);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FieldBase {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    indexId: ").append(toIndentedString(indexId)).append("\n");
    sb.append("    fieldNamespace: ").append(toIndentedString(fieldNamespace)).append("\n");
    sb.append("    names: ").append(toIndentedString(names)).append("\n");
    sb.append("    descriptions: ").append(toIndentedString(descriptions)).append("\n");
    sb.append("    required: ").append(toIndentedString(required)).append("\n");
    sb.append("    fixed: ").append(toIndentedString(fixed)).append("\n");
    sb.append("    index: ").append(toIndentedString(index)).append("\n");
    sb.append("    simpleSearch: ").append(toIndentedString(simpleSearch)).append("\n");
    sb.append("    boost: ").append(toIndentedString(boost)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

