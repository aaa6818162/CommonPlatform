/*
 * Web API Swagger specification
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.FlashMode;
import io.swagger.client.model.FlashReturn;
import java.io.IOException;

/**
 * Flash
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-10-04T14:36:42.044Z")
public class Flash {
  @SerializedName("fired")
  private Boolean fired = null;

  @SerializedName("return")
  private FlashReturn _return = null;

  @SerializedName("mode")
  private FlashMode mode = null;

  @SerializedName("function")
  private Boolean function = null;

  @SerializedName("redEyeMode")
  private Boolean redEyeMode = null;

  public Flash fired(Boolean fired) {
    this.fired = fired;
    return this;
  }

   /**
   * Get fired
   * @return fired
  **/
  @ApiModelProperty(value = "")
  public Boolean getFired() {
    return fired;
  }

  public void setFired(Boolean fired) {
    this.fired = fired;
  }

  public Flash _return(FlashReturn _return) {
    this._return = _return;
    return this;
  }

   /**
   * Get _return
   * @return _return
  **/
  @ApiModelProperty(value = "")
  public FlashReturn getReturn() {
    return _return;
  }

  public void setReturn(FlashReturn _return) {
    this._return = _return;
  }

  public Flash mode(FlashMode mode) {
    this.mode = mode;
    return this;
  }

   /**
   * Get mode
   * @return mode
  **/
  @ApiModelProperty(value = "")
  public FlashMode getMode() {
    return mode;
  }

  public void setMode(FlashMode mode) {
    this.mode = mode;
  }

  public Flash function(Boolean function) {
    this.function = function;
    return this;
  }

   /**
   * Get function
   * @return function
  **/
  @ApiModelProperty(value = "")
  public Boolean getFunction() {
    return function;
  }

  public void setFunction(Boolean function) {
    this.function = function;
  }

  public Flash redEyeMode(Boolean redEyeMode) {
    this.redEyeMode = redEyeMode;
    return this;
  }

   /**
   * Get redEyeMode
   * @return redEyeMode
  **/
  @ApiModelProperty(value = "")
  public Boolean getRedEyeMode() {
    return redEyeMode;
  }

  public void setRedEyeMode(Boolean redEyeMode) {
    this.redEyeMode = redEyeMode;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Flash flash = (Flash) o;
    return Objects.equals(this.fired, flash.fired) &&
        Objects.equals(this._return, flash._return) &&
        Objects.equals(this.mode, flash.mode) &&
        Objects.equals(this.function, flash.function) &&
        Objects.equals(this.redEyeMode, flash.redEyeMode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fired, _return, mode, function, redEyeMode);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Flash {\n");
    
    sb.append("    fired: ").append(toIndentedString(fired)).append("\n");
    sb.append("    _return: ").append(toIndentedString(_return)).append("\n");
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("    function: ").append(toIndentedString(function)).append("\n");
    sb.append("    redEyeMode: ").append(toIndentedString(redEyeMode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

