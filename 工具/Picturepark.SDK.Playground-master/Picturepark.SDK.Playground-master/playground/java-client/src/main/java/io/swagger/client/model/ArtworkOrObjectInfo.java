/*
 * Web API Swagger specification
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.joda.time.DateTime;

/**
 * ArtworkOrObjectInfo
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-10-04T14:36:42.044Z")
public class ArtworkOrObjectInfo {
  @SerializedName("copyrightNotice")
  private String copyrightNotice = null;

  @SerializedName("creator")
  private List<String> creator = null;

  @SerializedName("dateCreated")
  private DateTime dateCreated = null;

  @SerializedName("source")
  private String source = null;

  @SerializedName("sourceInventoryNumber")
  private String sourceInventoryNumber = null;

  @SerializedName("title")
  private Map<String, String> title = null;

  public ArtworkOrObjectInfo copyrightNotice(String copyrightNotice) {
    this.copyrightNotice = copyrightNotice;
    return this;
  }

   /**
   * Get copyrightNotice
   * @return copyrightNotice
  **/
  @ApiModelProperty(value = "")
  public String getCopyrightNotice() {
    return copyrightNotice;
  }

  public void setCopyrightNotice(String copyrightNotice) {
    this.copyrightNotice = copyrightNotice;
  }

  public ArtworkOrObjectInfo creator(List<String> creator) {
    this.creator = creator;
    return this;
  }

  public ArtworkOrObjectInfo addCreatorItem(String creatorItem) {
    if (this.creator == null) {
      this.creator = new ArrayList<String>();
    }
    this.creator.add(creatorItem);
    return this;
  }

   /**
   * Get creator
   * @return creator
  **/
  @ApiModelProperty(value = "")
  public List<String> getCreator() {
    return creator;
  }

  public void setCreator(List<String> creator) {
    this.creator = creator;
  }

  public ArtworkOrObjectInfo dateCreated(DateTime dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

   /**
   * Get dateCreated
   * @return dateCreated
  **/
  @ApiModelProperty(value = "")
  public DateTime getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(DateTime dateCreated) {
    this.dateCreated = dateCreated;
  }

  public ArtworkOrObjectInfo source(String source) {
    this.source = source;
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @ApiModelProperty(value = "")
  public String getSource() {
    return source;
  }

  public void setSource(String source) {
    this.source = source;
  }

  public ArtworkOrObjectInfo sourceInventoryNumber(String sourceInventoryNumber) {
    this.sourceInventoryNumber = sourceInventoryNumber;
    return this;
  }

   /**
   * Get sourceInventoryNumber
   * @return sourceInventoryNumber
  **/
  @ApiModelProperty(value = "")
  public String getSourceInventoryNumber() {
    return sourceInventoryNumber;
  }

  public void setSourceInventoryNumber(String sourceInventoryNumber) {
    this.sourceInventoryNumber = sourceInventoryNumber;
  }

  public ArtworkOrObjectInfo title(Map<String, String> title) {
    this.title = title;
    return this;
  }

  public ArtworkOrObjectInfo putTitleItem(String key, String titleItem) {
    if (this.title == null) {
      this.title = new HashMap<String, String>();
    }
    this.title.put(key, titleItem);
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getTitle() {
    return title;
  }

  public void setTitle(Map<String, String> title) {
    this.title = title;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ArtworkOrObjectInfo artworkOrObjectInfo = (ArtworkOrObjectInfo) o;
    return Objects.equals(this.copyrightNotice, artworkOrObjectInfo.copyrightNotice) &&
        Objects.equals(this.creator, artworkOrObjectInfo.creator) &&
        Objects.equals(this.dateCreated, artworkOrObjectInfo.dateCreated) &&
        Objects.equals(this.source, artworkOrObjectInfo.source) &&
        Objects.equals(this.sourceInventoryNumber, artworkOrObjectInfo.sourceInventoryNumber) &&
        Objects.equals(this.title, artworkOrObjectInfo.title);
  }

  @Override
  public int hashCode() {
    return Objects.hash(copyrightNotice, creator, dateCreated, source, sourceInventoryNumber, title);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ArtworkOrObjectInfo {\n");
    
    sb.append("    copyrightNotice: ").append(toIndentedString(copyrightNotice)).append("\n");
    sb.append("    creator: ").append(toIndentedString(creator)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    sourceInventoryNumber: ").append(toIndentedString(sourceInventoryNumber)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

