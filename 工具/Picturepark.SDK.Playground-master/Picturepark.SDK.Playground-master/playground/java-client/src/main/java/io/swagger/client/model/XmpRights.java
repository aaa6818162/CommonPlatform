/*
 * Web API Swagger specification
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * XmpRights
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-10-04T14:36:42.044Z")
public class XmpRights {
  @SerializedName("certificate")
  private String certificate = null;

  @SerializedName("marked")
  private Boolean marked = null;

  @SerializedName("owner")
  private List<String> owner = null;

  @SerializedName("usageTerms")
  private Map<String, String> usageTerms = null;

  @SerializedName("webStatement")
  private String webStatement = null;

  public XmpRights certificate(String certificate) {
    this.certificate = certificate;
    return this;
  }

   /**
   * Get certificate
   * @return certificate
  **/
  @ApiModelProperty(value = "")
  public String getCertificate() {
    return certificate;
  }

  public void setCertificate(String certificate) {
    this.certificate = certificate;
  }

  public XmpRights marked(Boolean marked) {
    this.marked = marked;
    return this;
  }

   /**
   * Get marked
   * @return marked
  **/
  @ApiModelProperty(value = "")
  public Boolean getMarked() {
    return marked;
  }

  public void setMarked(Boolean marked) {
    this.marked = marked;
  }

  public XmpRights owner(List<String> owner) {
    this.owner = owner;
    return this;
  }

  public XmpRights addOwnerItem(String ownerItem) {
    if (this.owner == null) {
      this.owner = new ArrayList<String>();
    }
    this.owner.add(ownerItem);
    return this;
  }

   /**
   * Get owner
   * @return owner
  **/
  @ApiModelProperty(value = "")
  public List<String> getOwner() {
    return owner;
  }

  public void setOwner(List<String> owner) {
    this.owner = owner;
  }

  public XmpRights usageTerms(Map<String, String> usageTerms) {
    this.usageTerms = usageTerms;
    return this;
  }

  public XmpRights putUsageTermsItem(String key, String usageTermsItem) {
    if (this.usageTerms == null) {
      this.usageTerms = new HashMap<String, String>();
    }
    this.usageTerms.put(key, usageTermsItem);
    return this;
  }

   /**
   * Get usageTerms
   * @return usageTerms
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getUsageTerms() {
    return usageTerms;
  }

  public void setUsageTerms(Map<String, String> usageTerms) {
    this.usageTerms = usageTerms;
  }

  public XmpRights webStatement(String webStatement) {
    this.webStatement = webStatement;
    return this;
  }

   /**
   * Get webStatement
   * @return webStatement
  **/
  @ApiModelProperty(value = "")
  public String getWebStatement() {
    return webStatement;
  }

  public void setWebStatement(String webStatement) {
    this.webStatement = webStatement;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    XmpRights xmpRights = (XmpRights) o;
    return Objects.equals(this.certificate, xmpRights.certificate) &&
        Objects.equals(this.marked, xmpRights.marked) &&
        Objects.equals(this.owner, xmpRights.owner) &&
        Objects.equals(this.usageTerms, xmpRights.usageTerms) &&
        Objects.equals(this.webStatement, xmpRights.webStatement);
  }

  @Override
  public int hashCode() {
    return Objects.hash(certificate, marked, owner, usageTerms, webStatement);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class XmpRights {\n");
    
    sb.append("    certificate: ").append(toIndentedString(certificate)).append("\n");
    sb.append("    marked: ").append(toIndentedString(marked)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    usageTerms: ").append(toIndentedString(usageTerms)).append("\n");
    sb.append("    webStatement: ").append(toIndentedString(webStatement)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

