/*
 * Web API Swagger specification
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.MaskMarkers;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.joda.time.DateTime;

/**
 * Reference
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-10-04T14:36:42.044Z")
public class Reference {
  @SerializedName("alternatePaths")
  private List<String> alternatePaths = null;

  @SerializedName("documentID")
  private String documentID = null;

  @SerializedName("filePath")
  private String filePath = null;

  @SerializedName("fromPart")
  private String fromPart = null;

  @SerializedName("instanceID")
  private String instanceID = null;

  @SerializedName("lastModifyDate")
  private DateTime lastModifyDate = null;

  @SerializedName("manager")
  private String manager = null;

  @SerializedName("managerVariant")
  private String managerVariant = null;

  @SerializedName("manageTo")
  private String manageTo = null;

  @SerializedName("manageUI")
  private String manageUI = null;

  @SerializedName("maskMarkers")
  private MaskMarkers maskMarkers = null;

  @SerializedName("originalDocumentID")
  private String originalDocumentID = null;

  @SerializedName("partMapping")
  private String partMapping = null;

  @SerializedName("renditionClass")
  private String renditionClass = null;

  @SerializedName("renditionParams")
  private String renditionParams = null;

  @SerializedName("toPart")
  private String toPart = null;

  @SerializedName("versionID")
  private String versionID = null;

  public Reference alternatePaths(List<String> alternatePaths) {
    this.alternatePaths = alternatePaths;
    return this;
  }

  public Reference addAlternatePathsItem(String alternatePathsItem) {
    if (this.alternatePaths == null) {
      this.alternatePaths = new ArrayList<String>();
    }
    this.alternatePaths.add(alternatePathsItem);
    return this;
  }

   /**
   * Get alternatePaths
   * @return alternatePaths
  **/
  @ApiModelProperty(value = "")
  public List<String> getAlternatePaths() {
    return alternatePaths;
  }

  public void setAlternatePaths(List<String> alternatePaths) {
    this.alternatePaths = alternatePaths;
  }

  public Reference documentID(String documentID) {
    this.documentID = documentID;
    return this;
  }

   /**
   * Get documentID
   * @return documentID
  **/
  @ApiModelProperty(value = "")
  public String getDocumentID() {
    return documentID;
  }

  public void setDocumentID(String documentID) {
    this.documentID = documentID;
  }

  public Reference filePath(String filePath) {
    this.filePath = filePath;
    return this;
  }

   /**
   * Get filePath
   * @return filePath
  **/
  @ApiModelProperty(value = "")
  public String getFilePath() {
    return filePath;
  }

  public void setFilePath(String filePath) {
    this.filePath = filePath;
  }

  public Reference fromPart(String fromPart) {
    this.fromPart = fromPart;
    return this;
  }

   /**
   * Get fromPart
   * @return fromPart
  **/
  @ApiModelProperty(value = "")
  public String getFromPart() {
    return fromPart;
  }

  public void setFromPart(String fromPart) {
    this.fromPart = fromPart;
  }

  public Reference instanceID(String instanceID) {
    this.instanceID = instanceID;
    return this;
  }

   /**
   * Get instanceID
   * @return instanceID
  **/
  @ApiModelProperty(value = "")
  public String getInstanceID() {
    return instanceID;
  }

  public void setInstanceID(String instanceID) {
    this.instanceID = instanceID;
  }

  public Reference lastModifyDate(DateTime lastModifyDate) {
    this.lastModifyDate = lastModifyDate;
    return this;
  }

   /**
   * Get lastModifyDate
   * @return lastModifyDate
  **/
  @ApiModelProperty(value = "")
  public DateTime getLastModifyDate() {
    return lastModifyDate;
  }

  public void setLastModifyDate(DateTime lastModifyDate) {
    this.lastModifyDate = lastModifyDate;
  }

  public Reference manager(String manager) {
    this.manager = manager;
    return this;
  }

   /**
   * Get manager
   * @return manager
  **/
  @ApiModelProperty(value = "")
  public String getManager() {
    return manager;
  }

  public void setManager(String manager) {
    this.manager = manager;
  }

  public Reference managerVariant(String managerVariant) {
    this.managerVariant = managerVariant;
    return this;
  }

   /**
   * Get managerVariant
   * @return managerVariant
  **/
  @ApiModelProperty(value = "")
  public String getManagerVariant() {
    return managerVariant;
  }

  public void setManagerVariant(String managerVariant) {
    this.managerVariant = managerVariant;
  }

  public Reference manageTo(String manageTo) {
    this.manageTo = manageTo;
    return this;
  }

   /**
   * Get manageTo
   * @return manageTo
  **/
  @ApiModelProperty(value = "")
  public String getManageTo() {
    return manageTo;
  }

  public void setManageTo(String manageTo) {
    this.manageTo = manageTo;
  }

  public Reference manageUI(String manageUI) {
    this.manageUI = manageUI;
    return this;
  }

   /**
   * Get manageUI
   * @return manageUI
  **/
  @ApiModelProperty(value = "")
  public String getManageUI() {
    return manageUI;
  }

  public void setManageUI(String manageUI) {
    this.manageUI = manageUI;
  }

  public Reference maskMarkers(MaskMarkers maskMarkers) {
    this.maskMarkers = maskMarkers;
    return this;
  }

   /**
   * Get maskMarkers
   * @return maskMarkers
  **/
  @ApiModelProperty(value = "")
  public MaskMarkers getMaskMarkers() {
    return maskMarkers;
  }

  public void setMaskMarkers(MaskMarkers maskMarkers) {
    this.maskMarkers = maskMarkers;
  }

  public Reference originalDocumentID(String originalDocumentID) {
    this.originalDocumentID = originalDocumentID;
    return this;
  }

   /**
   * Get originalDocumentID
   * @return originalDocumentID
  **/
  @ApiModelProperty(value = "")
  public String getOriginalDocumentID() {
    return originalDocumentID;
  }

  public void setOriginalDocumentID(String originalDocumentID) {
    this.originalDocumentID = originalDocumentID;
  }

  public Reference partMapping(String partMapping) {
    this.partMapping = partMapping;
    return this;
  }

   /**
   * Get partMapping
   * @return partMapping
  **/
  @ApiModelProperty(value = "")
  public String getPartMapping() {
    return partMapping;
  }

  public void setPartMapping(String partMapping) {
    this.partMapping = partMapping;
  }

  public Reference renditionClass(String renditionClass) {
    this.renditionClass = renditionClass;
    return this;
  }

   /**
   * Get renditionClass
   * @return renditionClass
  **/
  @ApiModelProperty(value = "")
  public String getRenditionClass() {
    return renditionClass;
  }

  public void setRenditionClass(String renditionClass) {
    this.renditionClass = renditionClass;
  }

  public Reference renditionParams(String renditionParams) {
    this.renditionParams = renditionParams;
    return this;
  }

   /**
   * Get renditionParams
   * @return renditionParams
  **/
  @ApiModelProperty(value = "")
  public String getRenditionParams() {
    return renditionParams;
  }

  public void setRenditionParams(String renditionParams) {
    this.renditionParams = renditionParams;
  }

  public Reference toPart(String toPart) {
    this.toPart = toPart;
    return this;
  }

   /**
   * Get toPart
   * @return toPart
  **/
  @ApiModelProperty(value = "")
  public String getToPart() {
    return toPart;
  }

  public void setToPart(String toPart) {
    this.toPart = toPart;
  }

  public Reference versionID(String versionID) {
    this.versionID = versionID;
    return this;
  }

   /**
   * Get versionID
   * @return versionID
  **/
  @ApiModelProperty(value = "")
  public String getVersionID() {
    return versionID;
  }

  public void setVersionID(String versionID) {
    this.versionID = versionID;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Reference reference = (Reference) o;
    return Objects.equals(this.alternatePaths, reference.alternatePaths) &&
        Objects.equals(this.documentID, reference.documentID) &&
        Objects.equals(this.filePath, reference.filePath) &&
        Objects.equals(this.fromPart, reference.fromPart) &&
        Objects.equals(this.instanceID, reference.instanceID) &&
        Objects.equals(this.lastModifyDate, reference.lastModifyDate) &&
        Objects.equals(this.manager, reference.manager) &&
        Objects.equals(this.managerVariant, reference.managerVariant) &&
        Objects.equals(this.manageTo, reference.manageTo) &&
        Objects.equals(this.manageUI, reference.manageUI) &&
        Objects.equals(this.maskMarkers, reference.maskMarkers) &&
        Objects.equals(this.originalDocumentID, reference.originalDocumentID) &&
        Objects.equals(this.partMapping, reference.partMapping) &&
        Objects.equals(this.renditionClass, reference.renditionClass) &&
        Objects.equals(this.renditionParams, reference.renditionParams) &&
        Objects.equals(this.toPart, reference.toPart) &&
        Objects.equals(this.versionID, reference.versionID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(alternatePaths, documentID, filePath, fromPart, instanceID, lastModifyDate, manager, managerVariant, manageTo, manageUI, maskMarkers, originalDocumentID, partMapping, renditionClass, renditionParams, toPart, versionID);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Reference {\n");
    
    sb.append("    alternatePaths: ").append(toIndentedString(alternatePaths)).append("\n");
    sb.append("    documentID: ").append(toIndentedString(documentID)).append("\n");
    sb.append("    filePath: ").append(toIndentedString(filePath)).append("\n");
    sb.append("    fromPart: ").append(toIndentedString(fromPart)).append("\n");
    sb.append("    instanceID: ").append(toIndentedString(instanceID)).append("\n");
    sb.append("    lastModifyDate: ").append(toIndentedString(lastModifyDate)).append("\n");
    sb.append("    manager: ").append(toIndentedString(manager)).append("\n");
    sb.append("    managerVariant: ").append(toIndentedString(managerVariant)).append("\n");
    sb.append("    manageTo: ").append(toIndentedString(manageTo)).append("\n");
    sb.append("    manageUI: ").append(toIndentedString(manageUI)).append("\n");
    sb.append("    maskMarkers: ").append(toIndentedString(maskMarkers)).append("\n");
    sb.append("    originalDocumentID: ").append(toIndentedString(originalDocumentID)).append("\n");
    sb.append("    partMapping: ").append(toIndentedString(partMapping)).append("\n");
    sb.append("    renditionClass: ").append(toIndentedString(renditionClass)).append("\n");
    sb.append("    renditionParams: ").append(toIndentedString(renditionParams)).append("\n");
    sb.append("    toPart: ").append(toIndentedString(toPart)).append("\n");
    sb.append("    versionID: ").append(toIndentedString(versionID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

