/*
 * Web API Swagger specification
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.AggregationFilter;
import io.swagger.client.model.AggregatorBase;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ListItemAggregationRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-10-04T14:36:42.044Z")
public class ListItemAggregationRequest {
  @SerializedName("searchString")
  private String searchString = null;

  @SerializedName("allowSearchStringRewrite")
  private Boolean allowSearchStringRewrite = null;

  @SerializedName("aggregationFilters")
  private List<AggregationFilter> aggregationFilters = null;

  @SerializedName("aggregators")
  private List<AggregatorBase> aggregators = null;

  @SerializedName("includeAllSchemaChildren")
  private Boolean includeAllSchemaChildren = null;

  @SerializedName("schemaIds")
  private List<String> schemaIds = null;

  @SerializedName("displayLanguage")
  private String displayLanguage = null;

  @SerializedName("searchLanguages")
  private List<String> searchLanguages = null;

  public ListItemAggregationRequest searchString(String searchString) {
    this.searchString = searchString;
    return this;
  }

   /**
   * Limits the search by using a query string filter. The Lucene query string syntax is supported. Defaults to *.
   * @return searchString
  **/
  @ApiModelProperty(value = "Limits the search by using a query string filter. The Lucene query string syntax is supported. Defaults to *.")
  public String getSearchString() {
    return searchString;
  }

  public void setSearchString(String searchString) {
    this.searchString = searchString;
  }

  public ListItemAggregationRequest allowSearchStringRewrite(Boolean allowSearchStringRewrite) {
    this.allowSearchStringRewrite = allowSearchStringRewrite;
    return this;
  }

   /**
   * Allow the backend to modify the search string if it generates a non valid query
   * @return allowSearchStringRewrite
  **/
  @ApiModelProperty(required = true, value = "Allow the backend to modify the search string if it generates a non valid query")
  public Boolean getAllowSearchStringRewrite() {
    return allowSearchStringRewrite;
  }

  public void setAllowSearchStringRewrite(Boolean allowSearchStringRewrite) {
    this.allowSearchStringRewrite = allowSearchStringRewrite;
  }

  public ListItemAggregationRequest aggregationFilters(List<AggregationFilter> aggregationFilters) {
    this.aggregationFilters = aggregationFilters;
    return this;
  }

  public ListItemAggregationRequest addAggregationFiltersItem(AggregationFilter aggregationFiltersItem) {
    if (this.aggregationFilters == null) {
      this.aggregationFilters = new ArrayList<AggregationFilter>();
    }
    this.aggregationFilters.add(aggregationFiltersItem);
    return this;
  }

   /**
   * Special filters used to filter down on a specific aggregated value.
   * @return aggregationFilters
  **/
  @ApiModelProperty(value = "Special filters used to filter down on a specific aggregated value.")
  public List<AggregationFilter> getAggregationFilters() {
    return aggregationFilters;
  }

  public void setAggregationFilters(List<AggregationFilter> aggregationFilters) {
    this.aggregationFilters = aggregationFilters;
  }

  public ListItemAggregationRequest aggregators(List<AggregatorBase> aggregators) {
    this.aggregators = aggregators;
    return this;
  }

  public ListItemAggregationRequest addAggregatorsItem(AggregatorBase aggregatorsItem) {
    if (this.aggregators == null) {
      this.aggregators = new ArrayList<AggregatorBase>();
    }
    this.aggregators.add(aggregatorsItem);
    return this;
  }

   /**
   * Defines the aggregation resultset.
   * @return aggregators
  **/
  @ApiModelProperty(value = "Defines the aggregation resultset.")
  public List<AggregatorBase> getAggregators() {
    return aggregators;
  }

  public void setAggregators(List<AggregatorBase> aggregators) {
    this.aggregators = aggregators;
  }

  public ListItemAggregationRequest includeAllSchemaChildren(Boolean includeAllSchemaChildren) {
    this.includeAllSchemaChildren = includeAllSchemaChildren;
    return this;
  }

   /**
   * Broadens the aggregation and include all schema descendant list items.
   * @return includeAllSchemaChildren
  **/
  @ApiModelProperty(required = true, value = "Broadens the aggregation and include all schema descendant list items.")
  public Boolean getIncludeAllSchemaChildren() {
    return includeAllSchemaChildren;
  }

  public void setIncludeAllSchemaChildren(Boolean includeAllSchemaChildren) {
    this.includeAllSchemaChildren = includeAllSchemaChildren;
  }

  public ListItemAggregationRequest schemaIds(List<String> schemaIds) {
    this.schemaIds = schemaIds;
    return this;
  }

  public ListItemAggregationRequest addSchemaIdsItem(String schemaIdsItem) {
    if (this.schemaIds == null) {
      this.schemaIds = new ArrayList<String>();
    }
    this.schemaIds.add(schemaIdsItem);
    return this;
  }

   /**
   * Limits the aggregation to list items of the provided schemas.
   * @return schemaIds
  **/
  @ApiModelProperty(value = "Limits the aggregation to list items of the provided schemas.")
  public List<String> getSchemaIds() {
    return schemaIds;
  }

  public void setSchemaIds(List<String> schemaIds) {
    this.schemaIds = schemaIds;
  }

  public ListItemAggregationRequest displayLanguage(String displayLanguage) {
    this.displayLanguage = displayLanguage;
    return this;
  }

   /**
   * Defines the return language of translation values. Defaults to x-default.
   * @return displayLanguage
  **/
  @ApiModelProperty(value = "Defines the return language of translation values. Defaults to x-default.")
  public String getDisplayLanguage() {
    return displayLanguage;
  }

  public void setDisplayLanguage(String displayLanguage) {
    this.displayLanguage = displayLanguage;
  }

  public ListItemAggregationRequest searchLanguages(List<String> searchLanguages) {
    this.searchLanguages = searchLanguages;
    return this;
  }

  public ListItemAggregationRequest addSearchLanguagesItem(String searchLanguagesItem) {
    if (this.searchLanguages == null) {
      this.searchLanguages = new ArrayList<String>();
    }
    this.searchLanguages.add(searchLanguagesItem);
    return this;
  }

   /**
   * Only searches the specified language values. Defaults to all metadata languages of the language configuration.
   * @return searchLanguages
  **/
  @ApiModelProperty(value = "Only searches the specified language values. Defaults to all metadata languages of the language configuration.")
  public List<String> getSearchLanguages() {
    return searchLanguages;
  }

  public void setSearchLanguages(List<String> searchLanguages) {
    this.searchLanguages = searchLanguages;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListItemAggregationRequest listItemAggregationRequest = (ListItemAggregationRequest) o;
    return Objects.equals(this.searchString, listItemAggregationRequest.searchString) &&
        Objects.equals(this.allowSearchStringRewrite, listItemAggregationRequest.allowSearchStringRewrite) &&
        Objects.equals(this.aggregationFilters, listItemAggregationRequest.aggregationFilters) &&
        Objects.equals(this.aggregators, listItemAggregationRequest.aggregators) &&
        Objects.equals(this.includeAllSchemaChildren, listItemAggregationRequest.includeAllSchemaChildren) &&
        Objects.equals(this.schemaIds, listItemAggregationRequest.schemaIds) &&
        Objects.equals(this.displayLanguage, listItemAggregationRequest.displayLanguage) &&
        Objects.equals(this.searchLanguages, listItemAggregationRequest.searchLanguages);
  }

  @Override
  public int hashCode() {
    return Objects.hash(searchString, allowSearchStringRewrite, aggregationFilters, aggregators, includeAllSchemaChildren, schemaIds, displayLanguage, searchLanguages);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListItemAggregationRequest {\n");
    
    sb.append("    searchString: ").append(toIndentedString(searchString)).append("\n");
    sb.append("    allowSearchStringRewrite: ").append(toIndentedString(allowSearchStringRewrite)).append("\n");
    sb.append("    aggregationFilters: ").append(toIndentedString(aggregationFilters)).append("\n");
    sb.append("    aggregators: ").append(toIndentedString(aggregators)).append("\n");
    sb.append("    includeAllSchemaChildren: ").append(toIndentedString(includeAllSchemaChildren)).append("\n");
    sb.append("    schemaIds: ").append(toIndentedString(schemaIds)).append("\n");
    sb.append("    displayLanguage: ").append(toIndentedString(displayLanguage)).append("\n");
    sb.append("    searchLanguages: ").append(toIndentedString(searchLanguages)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

