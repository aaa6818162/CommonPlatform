/*
 * Web API Swagger specification
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * AudioStream
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-10-04T14:36:42.044Z")
public class AudioStream {
  @SerializedName("bitRate")
  private String bitRate = null;

  @SerializedName("bitRateMode")
  private String bitRateMode = null;

  @SerializedName("channels")
  private String channels = null;

  @SerializedName("channelPositions")
  private String channelPositions = null;

  @SerializedName("codec")
  private String codec = null;

  @SerializedName("durationInSeconds")
  private Double durationInSeconds = null;

  @SerializedName("format")
  private String format = null;

  @SerializedName("language")
  private String language = null;

  @SerializedName("resolution")
  private Integer resolution = null;

  @SerializedName("samplingRate")
  private Integer samplingRate = null;

  @SerializedName("streamSize")
  private Long streamSize = null;

  public AudioStream bitRate(String bitRate) {
    this.bitRate = bitRate;
    return this;
  }

   /**
   * Get bitRate
   * @return bitRate
  **/
  @ApiModelProperty(value = "")
  public String getBitRate() {
    return bitRate;
  }

  public void setBitRate(String bitRate) {
    this.bitRate = bitRate;
  }

  public AudioStream bitRateMode(String bitRateMode) {
    this.bitRateMode = bitRateMode;
    return this;
  }

   /**
   * Get bitRateMode
   * @return bitRateMode
  **/
  @ApiModelProperty(value = "")
  public String getBitRateMode() {
    return bitRateMode;
  }

  public void setBitRateMode(String bitRateMode) {
    this.bitRateMode = bitRateMode;
  }

  public AudioStream channels(String channels) {
    this.channels = channels;
    return this;
  }

   /**
   * Get channels
   * @return channels
  **/
  @ApiModelProperty(value = "")
  public String getChannels() {
    return channels;
  }

  public void setChannels(String channels) {
    this.channels = channels;
  }

  public AudioStream channelPositions(String channelPositions) {
    this.channelPositions = channelPositions;
    return this;
  }

   /**
   * Get channelPositions
   * @return channelPositions
  **/
  @ApiModelProperty(value = "")
  public String getChannelPositions() {
    return channelPositions;
  }

  public void setChannelPositions(String channelPositions) {
    this.channelPositions = channelPositions;
  }

  public AudioStream codec(String codec) {
    this.codec = codec;
    return this;
  }

   /**
   * Get codec
   * @return codec
  **/
  @ApiModelProperty(value = "")
  public String getCodec() {
    return codec;
  }

  public void setCodec(String codec) {
    this.codec = codec;
  }

  public AudioStream durationInSeconds(Double durationInSeconds) {
    this.durationInSeconds = durationInSeconds;
    return this;
  }

   /**
   * Get durationInSeconds
   * @return durationInSeconds
  **/
  @ApiModelProperty(value = "")
  public Double getDurationInSeconds() {
    return durationInSeconds;
  }

  public void setDurationInSeconds(Double durationInSeconds) {
    this.durationInSeconds = durationInSeconds;
  }

  public AudioStream format(String format) {
    this.format = format;
    return this;
  }

   /**
   * Get format
   * @return format
  **/
  @ApiModelProperty(value = "")
  public String getFormat() {
    return format;
  }

  public void setFormat(String format) {
    this.format = format;
  }

  public AudioStream language(String language) {
    this.language = language;
    return this;
  }

   /**
   * Get language
   * @return language
  **/
  @ApiModelProperty(value = "")
  public String getLanguage() {
    return language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }

  public AudioStream resolution(Integer resolution) {
    this.resolution = resolution;
    return this;
  }

   /**
   * Get resolution
   * @return resolution
  **/
  @ApiModelProperty(value = "")
  public Integer getResolution() {
    return resolution;
  }

  public void setResolution(Integer resolution) {
    this.resolution = resolution;
  }

  public AudioStream samplingRate(Integer samplingRate) {
    this.samplingRate = samplingRate;
    return this;
  }

   /**
   * Get samplingRate
   * @return samplingRate
  **/
  @ApiModelProperty(value = "")
  public Integer getSamplingRate() {
    return samplingRate;
  }

  public void setSamplingRate(Integer samplingRate) {
    this.samplingRate = samplingRate;
  }

  public AudioStream streamSize(Long streamSize) {
    this.streamSize = streamSize;
    return this;
  }

   /**
   * Get streamSize
   * @return streamSize
  **/
  @ApiModelProperty(value = "")
  public Long getStreamSize() {
    return streamSize;
  }

  public void setStreamSize(Long streamSize) {
    this.streamSize = streamSize;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AudioStream audioStream = (AudioStream) o;
    return Objects.equals(this.bitRate, audioStream.bitRate) &&
        Objects.equals(this.bitRateMode, audioStream.bitRateMode) &&
        Objects.equals(this.channels, audioStream.channels) &&
        Objects.equals(this.channelPositions, audioStream.channelPositions) &&
        Objects.equals(this.codec, audioStream.codec) &&
        Objects.equals(this.durationInSeconds, audioStream.durationInSeconds) &&
        Objects.equals(this.format, audioStream.format) &&
        Objects.equals(this.language, audioStream.language) &&
        Objects.equals(this.resolution, audioStream.resolution) &&
        Objects.equals(this.samplingRate, audioStream.samplingRate) &&
        Objects.equals(this.streamSize, audioStream.streamSize);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bitRate, bitRateMode, channels, channelPositions, codec, durationInSeconds, format, language, resolution, samplingRate, streamSize);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AudioStream {\n");
    
    sb.append("    bitRate: ").append(toIndentedString(bitRate)).append("\n");
    sb.append("    bitRateMode: ").append(toIndentedString(bitRateMode)).append("\n");
    sb.append("    channels: ").append(toIndentedString(channels)).append("\n");
    sb.append("    channelPositions: ").append(toIndentedString(channelPositions)).append("\n");
    sb.append("    codec: ").append(toIndentedString(codec)).append("\n");
    sb.append("    durationInSeconds: ").append(toIndentedString(durationInSeconds)).append("\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    resolution: ").append(toIndentedString(resolution)).append("\n");
    sb.append("    samplingRate: ").append(toIndentedString(samplingRate)).append("\n");
    sb.append("    streamSize: ").append(toIndentedString(streamSize)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

