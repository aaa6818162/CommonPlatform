/*
 * Web API Swagger specification
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Count info of fields for search operations
 */
@ApiModel(description = "Count info of fields for search operations")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-10-04T14:36:42.044Z")
public class SearchFieldCount {
  @SerializedName("dataField")
  private Integer dataField = null;

  @SerializedName("indexedField")
  private Integer indexedField = null;

  @SerializedName("simpleSearchField")
  private Integer simpleSearchField = null;

  public SearchFieldCount dataField(Integer dataField) {
    this.dataField = dataField;
    return this;
  }

   /**
   * The number of fields generated by the schema in the Search index.
   * @return dataField
  **/
  @ApiModelProperty(required = true, value = "The number of fields generated by the schema in the Search index.")
  public Integer getDataField() {
    return dataField;
  }

  public void setDataField(Integer dataField) {
    this.dataField = dataField;
  }

  public SearchFieldCount indexedField(Integer indexedField) {
    this.indexedField = indexedField;
    return this;
  }

   /**
   * The number of indexed fields generated by the schema in the Search index.
   * @return indexedField
  **/
  @ApiModelProperty(required = true, value = "The number of indexed fields generated by the schema in the Search index.")
  public Integer getIndexedField() {
    return indexedField;
  }

  public void setIndexedField(Integer indexedField) {
    this.indexedField = indexedField;
  }

  public SearchFieldCount simpleSearchField(Integer simpleSearchField) {
    this.simpleSearchField = simpleSearchField;
    return this;
  }

   /**
   * The number of fields to be queried in the simple search for the schema.
   * @return simpleSearchField
  **/
  @ApiModelProperty(required = true, value = "The number of fields to be queried in the simple search for the schema.")
  public Integer getSimpleSearchField() {
    return simpleSearchField;
  }

  public void setSimpleSearchField(Integer simpleSearchField) {
    this.simpleSearchField = simpleSearchField;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchFieldCount searchFieldCount = (SearchFieldCount) o;
    return Objects.equals(this.dataField, searchFieldCount.dataField) &&
        Objects.equals(this.indexedField, searchFieldCount.indexedField) &&
        Objects.equals(this.simpleSearchField, searchFieldCount.simpleSearchField);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dataField, indexedField, simpleSearchField);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchFieldCount {\n");
    
    sb.append("    dataField: ").append(toIndentedString(dataField)).append("\n");
    sb.append("    indexedField: ").append(toIndentedString(indexedField)).append("\n");
    sb.append("    simpleSearchField: ").append(toIndentedString(simpleSearchField)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

