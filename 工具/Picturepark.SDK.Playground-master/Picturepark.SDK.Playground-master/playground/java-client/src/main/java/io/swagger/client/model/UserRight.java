/*
 * Web API Swagger specification
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * 
 */
@JsonAdapter(UserRight.Adapter.class)
public enum UserRight {
  
  MANAGECONTENT("ManageContent"),
  
  MANAGESHARINGS("ManageSharings"),
  
  MANAGEDRIVES("ManageDrives"),
  
  MANAGETRANSFER("ManageTransfer"),
  
  MANAGECHANNELS("ManageChannels"),
  
  MANAGESCHEMAS("ManageSchemas"),
  
  MANAGEUSERS("ManageUsers"),
  
  MANAGEUSERROLES("ManageUserRoles"),
  
  MANAGEPERMISSIONS("ManagePermissions"),
  
  MANAGESEARCHINDEXES("ManageSearchIndexes"),
  
  MANAGERECIPIENTS("ManageRecipients"),
  
  MANAGECOLLECTIONS("ManageCollections"),
  
  MANAGELISTITEMS("ManageListItems"),
  
  MANAGESERVICEPROVIDERS("ManageServiceProviders"),
  
  MANAGEEMBEDS("ManageEmbeds"),
  
  MANAGETEMPLATES("ManageTemplates");

  private String value;

  UserRight(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static UserRight fromValue(String text) {
    for (UserRight b : UserRight.values()) {
      if (String.valueOf(b.value).equals(text)) {
        return b;
      }
    }
    return null;
  }

  public static class Adapter extends TypeAdapter<UserRight> {
    @Override
    public void write(final JsonWriter jsonWriter, final UserRight enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public UserRight read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return UserRight.fromValue(String.valueOf(value));
    }
  }
}

