/*
 * Web API Swagger specification
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * DocumentHistoryDifference
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-10-04T14:36:42.044Z")
public class DocumentHistoryDifference {
  @SerializedName("documentId")
  private String documentId = null;

  @SerializedName("oldDocumentVersion")
  private Long oldDocumentVersion = null;

  @SerializedName("newDocumentVersion")
  private Long newDocumentVersion = null;

  public DocumentHistoryDifference documentId(String documentId) {
    this.documentId = documentId;
    return this;
  }

   /**
   * Get documentId
   * @return documentId
  **/
  @ApiModelProperty(value = "")
  public String getDocumentId() {
    return documentId;
  }

  public void setDocumentId(String documentId) {
    this.documentId = documentId;
  }

  public DocumentHistoryDifference oldDocumentVersion(Long oldDocumentVersion) {
    this.oldDocumentVersion = oldDocumentVersion;
    return this;
  }

   /**
   * Get oldDocumentVersion
   * @return oldDocumentVersion
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getOldDocumentVersion() {
    return oldDocumentVersion;
  }

  public void setOldDocumentVersion(Long oldDocumentVersion) {
    this.oldDocumentVersion = oldDocumentVersion;
  }

  public DocumentHistoryDifference newDocumentVersion(Long newDocumentVersion) {
    this.newDocumentVersion = newDocumentVersion;
    return this;
  }

   /**
   * Get newDocumentVersion
   * @return newDocumentVersion
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getNewDocumentVersion() {
    return newDocumentVersion;
  }

  public void setNewDocumentVersion(Long newDocumentVersion) {
    this.newDocumentVersion = newDocumentVersion;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DocumentHistoryDifference documentHistoryDifference = (DocumentHistoryDifference) o;
    return Objects.equals(this.documentId, documentHistoryDifference.documentId) &&
        Objects.equals(this.oldDocumentVersion, documentHistoryDifference.oldDocumentVersion) &&
        Objects.equals(this.newDocumentVersion, documentHistoryDifference.newDocumentVersion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(documentId, oldDocumentVersion, newDocumentVersion);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DocumentHistoryDifference {\n");
    
    sb.append("    documentId: ").append(toIndentedString(documentId)).append("\n");
    sb.append("    oldDocumentVersion: ").append(toIndentedString(oldDocumentVersion)).append("\n");
    sb.append("    newDocumentVersion: ").append(toIndentedString(newDocumentVersion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

