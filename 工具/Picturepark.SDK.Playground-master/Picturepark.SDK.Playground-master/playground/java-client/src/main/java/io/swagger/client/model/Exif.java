/*
 * Web API Swagger specification
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CFAPattern;
import io.swagger.client.model.ColorSpace;
import io.swagger.client.model.Contrast;
import io.swagger.client.model.CustomRendered;
import io.swagger.client.model.DeviceSettings;
import io.swagger.client.model.ExifVersion;
import io.swagger.client.model.ExposureMode;
import io.swagger.client.model.ExposureProgram;
import io.swagger.client.model.FileSource;
import io.swagger.client.model.Flash;
import io.swagger.client.model.FlashpixVersion;
import io.swagger.client.model.FocalPlaneResolutionUnit;
import io.swagger.client.model.GPSAltitudeRef;
import io.swagger.client.model.GPSCoordinate;
import io.swagger.client.model.GPSDestBearingRef;
import io.swagger.client.model.GPSDestDistanceRef;
import io.swagger.client.model.GPSDifferential;
import io.swagger.client.model.GPSImgDirectionRef;
import io.swagger.client.model.GPSSpeedRef;
import io.swagger.client.model.GPSStatus;
import io.swagger.client.model.GainControl;
import io.swagger.client.model.LightSource;
import io.swagger.client.model.MeteringMode;
import io.swagger.client.model.OECF;
import io.swagger.client.model.SFR;
import io.swagger.client.model.Saturation;
import io.swagger.client.model.SceneCaptureType;
import io.swagger.client.model.SceneType;
import io.swagger.client.model.SensingMethod;
import io.swagger.client.model.Sharpness;
import io.swagger.client.model.SubjectDistanceRange;
import io.swagger.client.model.WhiteBalanceExif;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.joda.time.DateTime;

/**
 * Exif
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-10-04T14:36:42.044Z")
public class Exif {
  @SerializedName("apertureValue")
  private String apertureValue = null;

  @SerializedName("brightnessValue")
  private String brightnessValue = null;

  @SerializedName("cfaPattern")
  private CFAPattern cfaPattern = null;

  @SerializedName("colorSpace")
  private ColorSpace colorSpace = null;

  @SerializedName("componentsConfiguration")
  private List<Integer> componentsConfiguration = null;

  @SerializedName("compressedBitsPerPixel")
  private String compressedBitsPerPixel = null;

  @SerializedName("contrast")
  private Contrast contrast = null;

  @SerializedName("customRendered")
  private CustomRendered customRendered = null;

  @SerializedName("dateTimeOriginal")
  private DateTime dateTimeOriginal = null;

  @SerializedName("dateTimeDigitized")
  private DateTime dateTimeDigitized = null;

  @SerializedName("deviceSettingDescription")
  private DeviceSettings deviceSettingDescription = null;

  @SerializedName("digitalZoomRatio")
  private String digitalZoomRatio = null;

  @SerializedName("exifVersion")
  private ExifVersion exifVersion = null;

  @SerializedName("exposureBiasValue")
  private String exposureBiasValue = null;

  @SerializedName("exposureIndex")
  private String exposureIndex = null;

  @SerializedName("exposureMode")
  private ExposureMode exposureMode = null;

  @SerializedName("exposureProgram")
  private ExposureProgram exposureProgram = null;

  @SerializedName("exposureTime")
  private String exposureTime = null;

  @SerializedName("fileSource")
  private FileSource fileSource = null;

  @SerializedName("flash")
  private Flash flash = null;

  @SerializedName("flashEnergy")
  private String flashEnergy = null;

  @SerializedName("flashpixVersion")
  private FlashpixVersion flashpixVersion = null;

  @SerializedName("fNumber")
  private String fNumber = null;

  @SerializedName("focalLength")
  private String focalLength = null;

  @SerializedName("focalLengthIn35mmFilm")
  private Integer focalLengthIn35mmFilm = null;

  @SerializedName("focalPlaneResolutionUnit")
  private FocalPlaneResolutionUnit focalPlaneResolutionUnit = null;

  @SerializedName("focalPlaneXResolution")
  private String focalPlaneXResolution = null;

  @SerializedName("focalPlaneYResolution")
  private String focalPlaneYResolution = null;

  @SerializedName("gainControl")
  private GainControl gainControl = null;

  @SerializedName("gpsAltitude")
  private String gpsAltitude = null;

  @SerializedName("gpsAltitudeRef")
  private GPSAltitudeRef gpsAltitudeRef = null;

  @SerializedName("gpsAreaInformation")
  private String gpsAreaInformation = null;

  @SerializedName("gpsDestBearing")
  private String gpsDestBearing = null;

  @SerializedName("gpsDestBearingRef")
  private GPSDestBearingRef gpsDestBearingRef = null;

  @SerializedName("gpsDestDistance")
  private String gpsDestDistance = null;

  @SerializedName("gpsDestDistanceRef")
  private GPSDestDistanceRef gpsDestDistanceRef = null;

  @SerializedName("gpsDestLatitude")
  private String gpsDestLatitude = null;

  @SerializedName("gpsDestLongitude")
  private String gpsDestLongitude = null;

  @SerializedName("gpsDifferential")
  private GPSDifferential gpsDifferential = null;

  @SerializedName("gpsdop")
  private String gpsdop = null;

  @SerializedName("gpsImgDirection")
  private String gpsImgDirection = null;

  @SerializedName("gpsImgDirectionRef")
  private GPSImgDirectionRef gpsImgDirectionRef = null;

  @SerializedName("gpsCoordinate")
  private GPSCoordinate gpsCoordinate = null;

  @SerializedName("gpsLatitude")
  private String gpsLatitude = null;

  @SerializedName("gpsLongitude")
  private String gpsLongitude = null;

  @SerializedName("gpsMapDatum")
  private String gpsMapDatum = null;

  @SerializedName("gpsMeasureMode")
  private String gpsMeasureMode = null;

  @SerializedName("gpsProcessingMethod")
  private String gpsProcessingMethod = null;

  @SerializedName("gpsSatellites")
  private String gpsSatellites = null;

  @SerializedName("gpsSpeed")
  private String gpsSpeed = null;

  @SerializedName("gpsSpeedRef")
  private GPSSpeedRef gpsSpeedRef = null;

  @SerializedName("gpsStatus")
  private GPSStatus gpsStatus = null;

  @SerializedName("gpsTimeStamp")
  private DateTime gpsTimeStamp = null;

  @SerializedName("gpsTrack")
  private String gpsTrack = null;

  @SerializedName("gpsTrackRef")
  private String gpsTrackRef = null;

  @SerializedName("gpsVersionID")
  private String gpsVersionID = null;

  @SerializedName("imageUniqueID")
  private String imageUniqueID = null;

  @SerializedName("isoSpeedRatings")
  private List<Integer> isoSpeedRatings = null;

  @SerializedName("lightSource")
  private LightSource lightSource = null;

  @SerializedName("maxApertureValue")
  private String maxApertureValue = null;

  @SerializedName("meteringMode")
  private MeteringMode meteringMode = null;

  @SerializedName("oecf")
  private OECF oecf = null;

  @SerializedName("pixelXDimension")
  private Integer pixelXDimension = null;

  @SerializedName("pixelYDimension")
  private Integer pixelYDimension = null;

  @SerializedName("relatedSoundFile")
  private String relatedSoundFile = null;

  @SerializedName("saturation")
  private Saturation saturation = null;

  @SerializedName("sceneCaptureType")
  private SceneCaptureType sceneCaptureType = null;

  @SerializedName("sceneType")
  private SceneType sceneType = null;

  @SerializedName("sensingMethod")
  private SensingMethod sensingMethod = null;

  @SerializedName("sharpness")
  private Sharpness sharpness = null;

  @SerializedName("shutterSpeedValue")
  private String shutterSpeedValue = null;

  @SerializedName("spatialFrequencyResponse")
  private SFR spatialFrequencyResponse = null;

  @SerializedName("spectralSensitivity")
  private String spectralSensitivity = null;

  @SerializedName("subjectArea")
  private List<Integer> subjectArea = null;

  @SerializedName("subjectDistance")
  private String subjectDistance = null;

  @SerializedName("subjectDistanceRange")
  private SubjectDistanceRange subjectDistanceRange = null;

  @SerializedName("subjectLocation")
  private List<Integer> subjectLocation = null;

  @SerializedName("userComment")
  private Map<String, String> userComment = null;

  @SerializedName("whiteBalance")
  private WhiteBalanceExif whiteBalance = null;

  @SerializedName("nativeDigest")
  private String nativeDigest = null;

  public Exif apertureValue(String apertureValue) {
    this.apertureValue = apertureValue;
    return this;
  }

   /**
   * Get apertureValue
   * @return apertureValue
  **/
  @ApiModelProperty(value = "")
  public String getApertureValue() {
    return apertureValue;
  }

  public void setApertureValue(String apertureValue) {
    this.apertureValue = apertureValue;
  }

  public Exif brightnessValue(String brightnessValue) {
    this.brightnessValue = brightnessValue;
    return this;
  }

   /**
   * Get brightnessValue
   * @return brightnessValue
  **/
  @ApiModelProperty(value = "")
  public String getBrightnessValue() {
    return brightnessValue;
  }

  public void setBrightnessValue(String brightnessValue) {
    this.brightnessValue = brightnessValue;
  }

  public Exif cfaPattern(CFAPattern cfaPattern) {
    this.cfaPattern = cfaPattern;
    return this;
  }

   /**
   * Get cfaPattern
   * @return cfaPattern
  **/
  @ApiModelProperty(value = "")
  public CFAPattern getCfaPattern() {
    return cfaPattern;
  }

  public void setCfaPattern(CFAPattern cfaPattern) {
    this.cfaPattern = cfaPattern;
  }

  public Exif colorSpace(ColorSpace colorSpace) {
    this.colorSpace = colorSpace;
    return this;
  }

   /**
   * Get colorSpace
   * @return colorSpace
  **/
  @ApiModelProperty(value = "")
  public ColorSpace getColorSpace() {
    return colorSpace;
  }

  public void setColorSpace(ColorSpace colorSpace) {
    this.colorSpace = colorSpace;
  }

  public Exif componentsConfiguration(List<Integer> componentsConfiguration) {
    this.componentsConfiguration = componentsConfiguration;
    return this;
  }

  public Exif addComponentsConfigurationItem(Integer componentsConfigurationItem) {
    if (this.componentsConfiguration == null) {
      this.componentsConfiguration = new ArrayList<Integer>();
    }
    this.componentsConfiguration.add(componentsConfigurationItem);
    return this;
  }

   /**
   * Get componentsConfiguration
   * @return componentsConfiguration
  **/
  @ApiModelProperty(value = "")
  public List<Integer> getComponentsConfiguration() {
    return componentsConfiguration;
  }

  public void setComponentsConfiguration(List<Integer> componentsConfiguration) {
    this.componentsConfiguration = componentsConfiguration;
  }

  public Exif compressedBitsPerPixel(String compressedBitsPerPixel) {
    this.compressedBitsPerPixel = compressedBitsPerPixel;
    return this;
  }

   /**
   * Get compressedBitsPerPixel
   * @return compressedBitsPerPixel
  **/
  @ApiModelProperty(value = "")
  public String getCompressedBitsPerPixel() {
    return compressedBitsPerPixel;
  }

  public void setCompressedBitsPerPixel(String compressedBitsPerPixel) {
    this.compressedBitsPerPixel = compressedBitsPerPixel;
  }

  public Exif contrast(Contrast contrast) {
    this.contrast = contrast;
    return this;
  }

   /**
   * Get contrast
   * @return contrast
  **/
  @ApiModelProperty(value = "")
  public Contrast getContrast() {
    return contrast;
  }

  public void setContrast(Contrast contrast) {
    this.contrast = contrast;
  }

  public Exif customRendered(CustomRendered customRendered) {
    this.customRendered = customRendered;
    return this;
  }

   /**
   * Get customRendered
   * @return customRendered
  **/
  @ApiModelProperty(value = "")
  public CustomRendered getCustomRendered() {
    return customRendered;
  }

  public void setCustomRendered(CustomRendered customRendered) {
    this.customRendered = customRendered;
  }

  public Exif dateTimeOriginal(DateTime dateTimeOriginal) {
    this.dateTimeOriginal = dateTimeOriginal;
    return this;
  }

   /**
   * Get dateTimeOriginal
   * @return dateTimeOriginal
  **/
  @ApiModelProperty(value = "")
  public DateTime getDateTimeOriginal() {
    return dateTimeOriginal;
  }

  public void setDateTimeOriginal(DateTime dateTimeOriginal) {
    this.dateTimeOriginal = dateTimeOriginal;
  }

  public Exif dateTimeDigitized(DateTime dateTimeDigitized) {
    this.dateTimeDigitized = dateTimeDigitized;
    return this;
  }

   /**
   * Get dateTimeDigitized
   * @return dateTimeDigitized
  **/
  @ApiModelProperty(value = "")
  public DateTime getDateTimeDigitized() {
    return dateTimeDigitized;
  }

  public void setDateTimeDigitized(DateTime dateTimeDigitized) {
    this.dateTimeDigitized = dateTimeDigitized;
  }

  public Exif deviceSettingDescription(DeviceSettings deviceSettingDescription) {
    this.deviceSettingDescription = deviceSettingDescription;
    return this;
  }

   /**
   * Get deviceSettingDescription
   * @return deviceSettingDescription
  **/
  @ApiModelProperty(value = "")
  public DeviceSettings getDeviceSettingDescription() {
    return deviceSettingDescription;
  }

  public void setDeviceSettingDescription(DeviceSettings deviceSettingDescription) {
    this.deviceSettingDescription = deviceSettingDescription;
  }

  public Exif digitalZoomRatio(String digitalZoomRatio) {
    this.digitalZoomRatio = digitalZoomRatio;
    return this;
  }

   /**
   * Get digitalZoomRatio
   * @return digitalZoomRatio
  **/
  @ApiModelProperty(value = "")
  public String getDigitalZoomRatio() {
    return digitalZoomRatio;
  }

  public void setDigitalZoomRatio(String digitalZoomRatio) {
    this.digitalZoomRatio = digitalZoomRatio;
  }

  public Exif exifVersion(ExifVersion exifVersion) {
    this.exifVersion = exifVersion;
    return this;
  }

   /**
   * Get exifVersion
   * @return exifVersion
  **/
  @ApiModelProperty(value = "")
  public ExifVersion getExifVersion() {
    return exifVersion;
  }

  public void setExifVersion(ExifVersion exifVersion) {
    this.exifVersion = exifVersion;
  }

  public Exif exposureBiasValue(String exposureBiasValue) {
    this.exposureBiasValue = exposureBiasValue;
    return this;
  }

   /**
   * Get exposureBiasValue
   * @return exposureBiasValue
  **/
  @ApiModelProperty(value = "")
  public String getExposureBiasValue() {
    return exposureBiasValue;
  }

  public void setExposureBiasValue(String exposureBiasValue) {
    this.exposureBiasValue = exposureBiasValue;
  }

  public Exif exposureIndex(String exposureIndex) {
    this.exposureIndex = exposureIndex;
    return this;
  }

   /**
   * Get exposureIndex
   * @return exposureIndex
  **/
  @ApiModelProperty(value = "")
  public String getExposureIndex() {
    return exposureIndex;
  }

  public void setExposureIndex(String exposureIndex) {
    this.exposureIndex = exposureIndex;
  }

  public Exif exposureMode(ExposureMode exposureMode) {
    this.exposureMode = exposureMode;
    return this;
  }

   /**
   * Get exposureMode
   * @return exposureMode
  **/
  @ApiModelProperty(value = "")
  public ExposureMode getExposureMode() {
    return exposureMode;
  }

  public void setExposureMode(ExposureMode exposureMode) {
    this.exposureMode = exposureMode;
  }

  public Exif exposureProgram(ExposureProgram exposureProgram) {
    this.exposureProgram = exposureProgram;
    return this;
  }

   /**
   * Get exposureProgram
   * @return exposureProgram
  **/
  @ApiModelProperty(value = "")
  public ExposureProgram getExposureProgram() {
    return exposureProgram;
  }

  public void setExposureProgram(ExposureProgram exposureProgram) {
    this.exposureProgram = exposureProgram;
  }

  public Exif exposureTime(String exposureTime) {
    this.exposureTime = exposureTime;
    return this;
  }

   /**
   * Get exposureTime
   * @return exposureTime
  **/
  @ApiModelProperty(value = "")
  public String getExposureTime() {
    return exposureTime;
  }

  public void setExposureTime(String exposureTime) {
    this.exposureTime = exposureTime;
  }

  public Exif fileSource(FileSource fileSource) {
    this.fileSource = fileSource;
    return this;
  }

   /**
   * Get fileSource
   * @return fileSource
  **/
  @ApiModelProperty(value = "")
  public FileSource getFileSource() {
    return fileSource;
  }

  public void setFileSource(FileSource fileSource) {
    this.fileSource = fileSource;
  }

  public Exif flash(Flash flash) {
    this.flash = flash;
    return this;
  }

   /**
   * Get flash
   * @return flash
  **/
  @ApiModelProperty(value = "")
  public Flash getFlash() {
    return flash;
  }

  public void setFlash(Flash flash) {
    this.flash = flash;
  }

  public Exif flashEnergy(String flashEnergy) {
    this.flashEnergy = flashEnergy;
    return this;
  }

   /**
   * Get flashEnergy
   * @return flashEnergy
  **/
  @ApiModelProperty(value = "")
  public String getFlashEnergy() {
    return flashEnergy;
  }

  public void setFlashEnergy(String flashEnergy) {
    this.flashEnergy = flashEnergy;
  }

  public Exif flashpixVersion(FlashpixVersion flashpixVersion) {
    this.flashpixVersion = flashpixVersion;
    return this;
  }

   /**
   * Get flashpixVersion
   * @return flashpixVersion
  **/
  @ApiModelProperty(value = "")
  public FlashpixVersion getFlashpixVersion() {
    return flashpixVersion;
  }

  public void setFlashpixVersion(FlashpixVersion flashpixVersion) {
    this.flashpixVersion = flashpixVersion;
  }

  public Exif fNumber(String fNumber) {
    this.fNumber = fNumber;
    return this;
  }

   /**
   * Get fNumber
   * @return fNumber
  **/
  @ApiModelProperty(value = "")
  public String getFNumber() {
    return fNumber;
  }

  public void setFNumber(String fNumber) {
    this.fNumber = fNumber;
  }

  public Exif focalLength(String focalLength) {
    this.focalLength = focalLength;
    return this;
  }

   /**
   * Get focalLength
   * @return focalLength
  **/
  @ApiModelProperty(value = "")
  public String getFocalLength() {
    return focalLength;
  }

  public void setFocalLength(String focalLength) {
    this.focalLength = focalLength;
  }

  public Exif focalLengthIn35mmFilm(Integer focalLengthIn35mmFilm) {
    this.focalLengthIn35mmFilm = focalLengthIn35mmFilm;
    return this;
  }

   /**
   * Get focalLengthIn35mmFilm
   * @return focalLengthIn35mmFilm
  **/
  @ApiModelProperty(value = "")
  public Integer getFocalLengthIn35mmFilm() {
    return focalLengthIn35mmFilm;
  }

  public void setFocalLengthIn35mmFilm(Integer focalLengthIn35mmFilm) {
    this.focalLengthIn35mmFilm = focalLengthIn35mmFilm;
  }

  public Exif focalPlaneResolutionUnit(FocalPlaneResolutionUnit focalPlaneResolutionUnit) {
    this.focalPlaneResolutionUnit = focalPlaneResolutionUnit;
    return this;
  }

   /**
   * Get focalPlaneResolutionUnit
   * @return focalPlaneResolutionUnit
  **/
  @ApiModelProperty(value = "")
  public FocalPlaneResolutionUnit getFocalPlaneResolutionUnit() {
    return focalPlaneResolutionUnit;
  }

  public void setFocalPlaneResolutionUnit(FocalPlaneResolutionUnit focalPlaneResolutionUnit) {
    this.focalPlaneResolutionUnit = focalPlaneResolutionUnit;
  }

  public Exif focalPlaneXResolution(String focalPlaneXResolution) {
    this.focalPlaneXResolution = focalPlaneXResolution;
    return this;
  }

   /**
   * Get focalPlaneXResolution
   * @return focalPlaneXResolution
  **/
  @ApiModelProperty(value = "")
  public String getFocalPlaneXResolution() {
    return focalPlaneXResolution;
  }

  public void setFocalPlaneXResolution(String focalPlaneXResolution) {
    this.focalPlaneXResolution = focalPlaneXResolution;
  }

  public Exif focalPlaneYResolution(String focalPlaneYResolution) {
    this.focalPlaneYResolution = focalPlaneYResolution;
    return this;
  }

   /**
   * Get focalPlaneYResolution
   * @return focalPlaneYResolution
  **/
  @ApiModelProperty(value = "")
  public String getFocalPlaneYResolution() {
    return focalPlaneYResolution;
  }

  public void setFocalPlaneYResolution(String focalPlaneYResolution) {
    this.focalPlaneYResolution = focalPlaneYResolution;
  }

  public Exif gainControl(GainControl gainControl) {
    this.gainControl = gainControl;
    return this;
  }

   /**
   * Get gainControl
   * @return gainControl
  **/
  @ApiModelProperty(value = "")
  public GainControl getGainControl() {
    return gainControl;
  }

  public void setGainControl(GainControl gainControl) {
    this.gainControl = gainControl;
  }

  public Exif gpsAltitude(String gpsAltitude) {
    this.gpsAltitude = gpsAltitude;
    return this;
  }

   /**
   * Get gpsAltitude
   * @return gpsAltitude
  **/
  @ApiModelProperty(value = "")
  public String getGpsAltitude() {
    return gpsAltitude;
  }

  public void setGpsAltitude(String gpsAltitude) {
    this.gpsAltitude = gpsAltitude;
  }

  public Exif gpsAltitudeRef(GPSAltitudeRef gpsAltitudeRef) {
    this.gpsAltitudeRef = gpsAltitudeRef;
    return this;
  }

   /**
   * Get gpsAltitudeRef
   * @return gpsAltitudeRef
  **/
  @ApiModelProperty(value = "")
  public GPSAltitudeRef getGpsAltitudeRef() {
    return gpsAltitudeRef;
  }

  public void setGpsAltitudeRef(GPSAltitudeRef gpsAltitudeRef) {
    this.gpsAltitudeRef = gpsAltitudeRef;
  }

  public Exif gpsAreaInformation(String gpsAreaInformation) {
    this.gpsAreaInformation = gpsAreaInformation;
    return this;
  }

   /**
   * Get gpsAreaInformation
   * @return gpsAreaInformation
  **/
  @ApiModelProperty(value = "")
  public String getGpsAreaInformation() {
    return gpsAreaInformation;
  }

  public void setGpsAreaInformation(String gpsAreaInformation) {
    this.gpsAreaInformation = gpsAreaInformation;
  }

  public Exif gpsDestBearing(String gpsDestBearing) {
    this.gpsDestBearing = gpsDestBearing;
    return this;
  }

   /**
   * Get gpsDestBearing
   * @return gpsDestBearing
  **/
  @ApiModelProperty(value = "")
  public String getGpsDestBearing() {
    return gpsDestBearing;
  }

  public void setGpsDestBearing(String gpsDestBearing) {
    this.gpsDestBearing = gpsDestBearing;
  }

  public Exif gpsDestBearingRef(GPSDestBearingRef gpsDestBearingRef) {
    this.gpsDestBearingRef = gpsDestBearingRef;
    return this;
  }

   /**
   * Get gpsDestBearingRef
   * @return gpsDestBearingRef
  **/
  @ApiModelProperty(value = "")
  public GPSDestBearingRef getGpsDestBearingRef() {
    return gpsDestBearingRef;
  }

  public void setGpsDestBearingRef(GPSDestBearingRef gpsDestBearingRef) {
    this.gpsDestBearingRef = gpsDestBearingRef;
  }

  public Exif gpsDestDistance(String gpsDestDistance) {
    this.gpsDestDistance = gpsDestDistance;
    return this;
  }

   /**
   * Get gpsDestDistance
   * @return gpsDestDistance
  **/
  @ApiModelProperty(value = "")
  public String getGpsDestDistance() {
    return gpsDestDistance;
  }

  public void setGpsDestDistance(String gpsDestDistance) {
    this.gpsDestDistance = gpsDestDistance;
  }

  public Exif gpsDestDistanceRef(GPSDestDistanceRef gpsDestDistanceRef) {
    this.gpsDestDistanceRef = gpsDestDistanceRef;
    return this;
  }

   /**
   * Get gpsDestDistanceRef
   * @return gpsDestDistanceRef
  **/
  @ApiModelProperty(value = "")
  public GPSDestDistanceRef getGpsDestDistanceRef() {
    return gpsDestDistanceRef;
  }

  public void setGpsDestDistanceRef(GPSDestDistanceRef gpsDestDistanceRef) {
    this.gpsDestDistanceRef = gpsDestDistanceRef;
  }

  public Exif gpsDestLatitude(String gpsDestLatitude) {
    this.gpsDestLatitude = gpsDestLatitude;
    return this;
  }

   /**
   * Get gpsDestLatitude
   * @return gpsDestLatitude
  **/
  @ApiModelProperty(value = "")
  public String getGpsDestLatitude() {
    return gpsDestLatitude;
  }

  public void setGpsDestLatitude(String gpsDestLatitude) {
    this.gpsDestLatitude = gpsDestLatitude;
  }

  public Exif gpsDestLongitude(String gpsDestLongitude) {
    this.gpsDestLongitude = gpsDestLongitude;
    return this;
  }

   /**
   * Get gpsDestLongitude
   * @return gpsDestLongitude
  **/
  @ApiModelProperty(value = "")
  public String getGpsDestLongitude() {
    return gpsDestLongitude;
  }

  public void setGpsDestLongitude(String gpsDestLongitude) {
    this.gpsDestLongitude = gpsDestLongitude;
  }

  public Exif gpsDifferential(GPSDifferential gpsDifferential) {
    this.gpsDifferential = gpsDifferential;
    return this;
  }

   /**
   * Get gpsDifferential
   * @return gpsDifferential
  **/
  @ApiModelProperty(value = "")
  public GPSDifferential getGpsDifferential() {
    return gpsDifferential;
  }

  public void setGpsDifferential(GPSDifferential gpsDifferential) {
    this.gpsDifferential = gpsDifferential;
  }

  public Exif gpsdop(String gpsdop) {
    this.gpsdop = gpsdop;
    return this;
  }

   /**
   * Get gpsdop
   * @return gpsdop
  **/
  @ApiModelProperty(value = "")
  public String getGpsdop() {
    return gpsdop;
  }

  public void setGpsdop(String gpsdop) {
    this.gpsdop = gpsdop;
  }

  public Exif gpsImgDirection(String gpsImgDirection) {
    this.gpsImgDirection = gpsImgDirection;
    return this;
  }

   /**
   * Get gpsImgDirection
   * @return gpsImgDirection
  **/
  @ApiModelProperty(value = "")
  public String getGpsImgDirection() {
    return gpsImgDirection;
  }

  public void setGpsImgDirection(String gpsImgDirection) {
    this.gpsImgDirection = gpsImgDirection;
  }

  public Exif gpsImgDirectionRef(GPSImgDirectionRef gpsImgDirectionRef) {
    this.gpsImgDirectionRef = gpsImgDirectionRef;
    return this;
  }

   /**
   * Get gpsImgDirectionRef
   * @return gpsImgDirectionRef
  **/
  @ApiModelProperty(value = "")
  public GPSImgDirectionRef getGpsImgDirectionRef() {
    return gpsImgDirectionRef;
  }

  public void setGpsImgDirectionRef(GPSImgDirectionRef gpsImgDirectionRef) {
    this.gpsImgDirectionRef = gpsImgDirectionRef;
  }

  public Exif gpsCoordinate(GPSCoordinate gpsCoordinate) {
    this.gpsCoordinate = gpsCoordinate;
    return this;
  }

   /**
   * Get gpsCoordinate
   * @return gpsCoordinate
  **/
  @ApiModelProperty(value = "")
  public GPSCoordinate getGpsCoordinate() {
    return gpsCoordinate;
  }

  public void setGpsCoordinate(GPSCoordinate gpsCoordinate) {
    this.gpsCoordinate = gpsCoordinate;
  }

  public Exif gpsLatitude(String gpsLatitude) {
    this.gpsLatitude = gpsLatitude;
    return this;
  }

   /**
   * Get gpsLatitude
   * @return gpsLatitude
  **/
  @ApiModelProperty(value = "")
  public String getGpsLatitude() {
    return gpsLatitude;
  }

  public void setGpsLatitude(String gpsLatitude) {
    this.gpsLatitude = gpsLatitude;
  }

  public Exif gpsLongitude(String gpsLongitude) {
    this.gpsLongitude = gpsLongitude;
    return this;
  }

   /**
   * Get gpsLongitude
   * @return gpsLongitude
  **/
  @ApiModelProperty(value = "")
  public String getGpsLongitude() {
    return gpsLongitude;
  }

  public void setGpsLongitude(String gpsLongitude) {
    this.gpsLongitude = gpsLongitude;
  }

  public Exif gpsMapDatum(String gpsMapDatum) {
    this.gpsMapDatum = gpsMapDatum;
    return this;
  }

   /**
   * Get gpsMapDatum
   * @return gpsMapDatum
  **/
  @ApiModelProperty(value = "")
  public String getGpsMapDatum() {
    return gpsMapDatum;
  }

  public void setGpsMapDatum(String gpsMapDatum) {
    this.gpsMapDatum = gpsMapDatum;
  }

  public Exif gpsMeasureMode(String gpsMeasureMode) {
    this.gpsMeasureMode = gpsMeasureMode;
    return this;
  }

   /**
   * Get gpsMeasureMode
   * @return gpsMeasureMode
  **/
  @ApiModelProperty(value = "")
  public String getGpsMeasureMode() {
    return gpsMeasureMode;
  }

  public void setGpsMeasureMode(String gpsMeasureMode) {
    this.gpsMeasureMode = gpsMeasureMode;
  }

  public Exif gpsProcessingMethod(String gpsProcessingMethod) {
    this.gpsProcessingMethod = gpsProcessingMethod;
    return this;
  }

   /**
   * Get gpsProcessingMethod
   * @return gpsProcessingMethod
  **/
  @ApiModelProperty(value = "")
  public String getGpsProcessingMethod() {
    return gpsProcessingMethod;
  }

  public void setGpsProcessingMethod(String gpsProcessingMethod) {
    this.gpsProcessingMethod = gpsProcessingMethod;
  }

  public Exif gpsSatellites(String gpsSatellites) {
    this.gpsSatellites = gpsSatellites;
    return this;
  }

   /**
   * Get gpsSatellites
   * @return gpsSatellites
  **/
  @ApiModelProperty(value = "")
  public String getGpsSatellites() {
    return gpsSatellites;
  }

  public void setGpsSatellites(String gpsSatellites) {
    this.gpsSatellites = gpsSatellites;
  }

  public Exif gpsSpeed(String gpsSpeed) {
    this.gpsSpeed = gpsSpeed;
    return this;
  }

   /**
   * Get gpsSpeed
   * @return gpsSpeed
  **/
  @ApiModelProperty(value = "")
  public String getGpsSpeed() {
    return gpsSpeed;
  }

  public void setGpsSpeed(String gpsSpeed) {
    this.gpsSpeed = gpsSpeed;
  }

  public Exif gpsSpeedRef(GPSSpeedRef gpsSpeedRef) {
    this.gpsSpeedRef = gpsSpeedRef;
    return this;
  }

   /**
   * Get gpsSpeedRef
   * @return gpsSpeedRef
  **/
  @ApiModelProperty(value = "")
  public GPSSpeedRef getGpsSpeedRef() {
    return gpsSpeedRef;
  }

  public void setGpsSpeedRef(GPSSpeedRef gpsSpeedRef) {
    this.gpsSpeedRef = gpsSpeedRef;
  }

  public Exif gpsStatus(GPSStatus gpsStatus) {
    this.gpsStatus = gpsStatus;
    return this;
  }

   /**
   * Get gpsStatus
   * @return gpsStatus
  **/
  @ApiModelProperty(value = "")
  public GPSStatus getGpsStatus() {
    return gpsStatus;
  }

  public void setGpsStatus(GPSStatus gpsStatus) {
    this.gpsStatus = gpsStatus;
  }

  public Exif gpsTimeStamp(DateTime gpsTimeStamp) {
    this.gpsTimeStamp = gpsTimeStamp;
    return this;
  }

   /**
   * Get gpsTimeStamp
   * @return gpsTimeStamp
  **/
  @ApiModelProperty(value = "")
  public DateTime getGpsTimeStamp() {
    return gpsTimeStamp;
  }

  public void setGpsTimeStamp(DateTime gpsTimeStamp) {
    this.gpsTimeStamp = gpsTimeStamp;
  }

  public Exif gpsTrack(String gpsTrack) {
    this.gpsTrack = gpsTrack;
    return this;
  }

   /**
   * Get gpsTrack
   * @return gpsTrack
  **/
  @ApiModelProperty(value = "")
  public String getGpsTrack() {
    return gpsTrack;
  }

  public void setGpsTrack(String gpsTrack) {
    this.gpsTrack = gpsTrack;
  }

  public Exif gpsTrackRef(String gpsTrackRef) {
    this.gpsTrackRef = gpsTrackRef;
    return this;
  }

   /**
   * Get gpsTrackRef
   * @return gpsTrackRef
  **/
  @ApiModelProperty(value = "")
  public String getGpsTrackRef() {
    return gpsTrackRef;
  }

  public void setGpsTrackRef(String gpsTrackRef) {
    this.gpsTrackRef = gpsTrackRef;
  }

  public Exif gpsVersionID(String gpsVersionID) {
    this.gpsVersionID = gpsVersionID;
    return this;
  }

   /**
   * Get gpsVersionID
   * @return gpsVersionID
  **/
  @ApiModelProperty(value = "")
  public String getGpsVersionID() {
    return gpsVersionID;
  }

  public void setGpsVersionID(String gpsVersionID) {
    this.gpsVersionID = gpsVersionID;
  }

  public Exif imageUniqueID(String imageUniqueID) {
    this.imageUniqueID = imageUniqueID;
    return this;
  }

   /**
   * Get imageUniqueID
   * @return imageUniqueID
  **/
  @ApiModelProperty(value = "")
  public String getImageUniqueID() {
    return imageUniqueID;
  }

  public void setImageUniqueID(String imageUniqueID) {
    this.imageUniqueID = imageUniqueID;
  }

  public Exif isoSpeedRatings(List<Integer> isoSpeedRatings) {
    this.isoSpeedRatings = isoSpeedRatings;
    return this;
  }

  public Exif addIsoSpeedRatingsItem(Integer isoSpeedRatingsItem) {
    if (this.isoSpeedRatings == null) {
      this.isoSpeedRatings = new ArrayList<Integer>();
    }
    this.isoSpeedRatings.add(isoSpeedRatingsItem);
    return this;
  }

   /**
   * Get isoSpeedRatings
   * @return isoSpeedRatings
  **/
  @ApiModelProperty(value = "")
  public List<Integer> getIsoSpeedRatings() {
    return isoSpeedRatings;
  }

  public void setIsoSpeedRatings(List<Integer> isoSpeedRatings) {
    this.isoSpeedRatings = isoSpeedRatings;
  }

  public Exif lightSource(LightSource lightSource) {
    this.lightSource = lightSource;
    return this;
  }

   /**
   * Get lightSource
   * @return lightSource
  **/
  @ApiModelProperty(value = "")
  public LightSource getLightSource() {
    return lightSource;
  }

  public void setLightSource(LightSource lightSource) {
    this.lightSource = lightSource;
  }

  public Exif maxApertureValue(String maxApertureValue) {
    this.maxApertureValue = maxApertureValue;
    return this;
  }

   /**
   * Get maxApertureValue
   * @return maxApertureValue
  **/
  @ApiModelProperty(value = "")
  public String getMaxApertureValue() {
    return maxApertureValue;
  }

  public void setMaxApertureValue(String maxApertureValue) {
    this.maxApertureValue = maxApertureValue;
  }

  public Exif meteringMode(MeteringMode meteringMode) {
    this.meteringMode = meteringMode;
    return this;
  }

   /**
   * Get meteringMode
   * @return meteringMode
  **/
  @ApiModelProperty(value = "")
  public MeteringMode getMeteringMode() {
    return meteringMode;
  }

  public void setMeteringMode(MeteringMode meteringMode) {
    this.meteringMode = meteringMode;
  }

  public Exif oecf(OECF oecf) {
    this.oecf = oecf;
    return this;
  }

   /**
   * Get oecf
   * @return oecf
  **/
  @ApiModelProperty(value = "")
  public OECF getOecf() {
    return oecf;
  }

  public void setOecf(OECF oecf) {
    this.oecf = oecf;
  }

  public Exif pixelXDimension(Integer pixelXDimension) {
    this.pixelXDimension = pixelXDimension;
    return this;
  }

   /**
   * Get pixelXDimension
   * @return pixelXDimension
  **/
  @ApiModelProperty(value = "")
  public Integer getPixelXDimension() {
    return pixelXDimension;
  }

  public void setPixelXDimension(Integer pixelXDimension) {
    this.pixelXDimension = pixelXDimension;
  }

  public Exif pixelYDimension(Integer pixelYDimension) {
    this.pixelYDimension = pixelYDimension;
    return this;
  }

   /**
   * Get pixelYDimension
   * @return pixelYDimension
  **/
  @ApiModelProperty(value = "")
  public Integer getPixelYDimension() {
    return pixelYDimension;
  }

  public void setPixelYDimension(Integer pixelYDimension) {
    this.pixelYDimension = pixelYDimension;
  }

  public Exif relatedSoundFile(String relatedSoundFile) {
    this.relatedSoundFile = relatedSoundFile;
    return this;
  }

   /**
   * Get relatedSoundFile
   * @return relatedSoundFile
  **/
  @ApiModelProperty(value = "")
  public String getRelatedSoundFile() {
    return relatedSoundFile;
  }

  public void setRelatedSoundFile(String relatedSoundFile) {
    this.relatedSoundFile = relatedSoundFile;
  }

  public Exif saturation(Saturation saturation) {
    this.saturation = saturation;
    return this;
  }

   /**
   * Get saturation
   * @return saturation
  **/
  @ApiModelProperty(value = "")
  public Saturation getSaturation() {
    return saturation;
  }

  public void setSaturation(Saturation saturation) {
    this.saturation = saturation;
  }

  public Exif sceneCaptureType(SceneCaptureType sceneCaptureType) {
    this.sceneCaptureType = sceneCaptureType;
    return this;
  }

   /**
   * Get sceneCaptureType
   * @return sceneCaptureType
  **/
  @ApiModelProperty(value = "")
  public SceneCaptureType getSceneCaptureType() {
    return sceneCaptureType;
  }

  public void setSceneCaptureType(SceneCaptureType sceneCaptureType) {
    this.sceneCaptureType = sceneCaptureType;
  }

  public Exif sceneType(SceneType sceneType) {
    this.sceneType = sceneType;
    return this;
  }

   /**
   * Get sceneType
   * @return sceneType
  **/
  @ApiModelProperty(value = "")
  public SceneType getSceneType() {
    return sceneType;
  }

  public void setSceneType(SceneType sceneType) {
    this.sceneType = sceneType;
  }

  public Exif sensingMethod(SensingMethod sensingMethod) {
    this.sensingMethod = sensingMethod;
    return this;
  }

   /**
   * Get sensingMethod
   * @return sensingMethod
  **/
  @ApiModelProperty(value = "")
  public SensingMethod getSensingMethod() {
    return sensingMethod;
  }

  public void setSensingMethod(SensingMethod sensingMethod) {
    this.sensingMethod = sensingMethod;
  }

  public Exif sharpness(Sharpness sharpness) {
    this.sharpness = sharpness;
    return this;
  }

   /**
   * Get sharpness
   * @return sharpness
  **/
  @ApiModelProperty(value = "")
  public Sharpness getSharpness() {
    return sharpness;
  }

  public void setSharpness(Sharpness sharpness) {
    this.sharpness = sharpness;
  }

  public Exif shutterSpeedValue(String shutterSpeedValue) {
    this.shutterSpeedValue = shutterSpeedValue;
    return this;
  }

   /**
   * Get shutterSpeedValue
   * @return shutterSpeedValue
  **/
  @ApiModelProperty(value = "")
  public String getShutterSpeedValue() {
    return shutterSpeedValue;
  }

  public void setShutterSpeedValue(String shutterSpeedValue) {
    this.shutterSpeedValue = shutterSpeedValue;
  }

  public Exif spatialFrequencyResponse(SFR spatialFrequencyResponse) {
    this.spatialFrequencyResponse = spatialFrequencyResponse;
    return this;
  }

   /**
   * Get spatialFrequencyResponse
   * @return spatialFrequencyResponse
  **/
  @ApiModelProperty(value = "")
  public SFR getSpatialFrequencyResponse() {
    return spatialFrequencyResponse;
  }

  public void setSpatialFrequencyResponse(SFR spatialFrequencyResponse) {
    this.spatialFrequencyResponse = spatialFrequencyResponse;
  }

  public Exif spectralSensitivity(String spectralSensitivity) {
    this.spectralSensitivity = spectralSensitivity;
    return this;
  }

   /**
   * Get spectralSensitivity
   * @return spectralSensitivity
  **/
  @ApiModelProperty(value = "")
  public String getSpectralSensitivity() {
    return spectralSensitivity;
  }

  public void setSpectralSensitivity(String spectralSensitivity) {
    this.spectralSensitivity = spectralSensitivity;
  }

  public Exif subjectArea(List<Integer> subjectArea) {
    this.subjectArea = subjectArea;
    return this;
  }

  public Exif addSubjectAreaItem(Integer subjectAreaItem) {
    if (this.subjectArea == null) {
      this.subjectArea = new ArrayList<Integer>();
    }
    this.subjectArea.add(subjectAreaItem);
    return this;
  }

   /**
   * Get subjectArea
   * @return subjectArea
  **/
  @ApiModelProperty(value = "")
  public List<Integer> getSubjectArea() {
    return subjectArea;
  }

  public void setSubjectArea(List<Integer> subjectArea) {
    this.subjectArea = subjectArea;
  }

  public Exif subjectDistance(String subjectDistance) {
    this.subjectDistance = subjectDistance;
    return this;
  }

   /**
   * Get subjectDistance
   * @return subjectDistance
  **/
  @ApiModelProperty(value = "")
  public String getSubjectDistance() {
    return subjectDistance;
  }

  public void setSubjectDistance(String subjectDistance) {
    this.subjectDistance = subjectDistance;
  }

  public Exif subjectDistanceRange(SubjectDistanceRange subjectDistanceRange) {
    this.subjectDistanceRange = subjectDistanceRange;
    return this;
  }

   /**
   * Get subjectDistanceRange
   * @return subjectDistanceRange
  **/
  @ApiModelProperty(value = "")
  public SubjectDistanceRange getSubjectDistanceRange() {
    return subjectDistanceRange;
  }

  public void setSubjectDistanceRange(SubjectDistanceRange subjectDistanceRange) {
    this.subjectDistanceRange = subjectDistanceRange;
  }

  public Exif subjectLocation(List<Integer> subjectLocation) {
    this.subjectLocation = subjectLocation;
    return this;
  }

  public Exif addSubjectLocationItem(Integer subjectLocationItem) {
    if (this.subjectLocation == null) {
      this.subjectLocation = new ArrayList<Integer>();
    }
    this.subjectLocation.add(subjectLocationItem);
    return this;
  }

   /**
   * Get subjectLocation
   * @return subjectLocation
  **/
  @ApiModelProperty(value = "")
  public List<Integer> getSubjectLocation() {
    return subjectLocation;
  }

  public void setSubjectLocation(List<Integer> subjectLocation) {
    this.subjectLocation = subjectLocation;
  }

  public Exif userComment(Map<String, String> userComment) {
    this.userComment = userComment;
    return this;
  }

  public Exif putUserCommentItem(String key, String userCommentItem) {
    if (this.userComment == null) {
      this.userComment = new HashMap<String, String>();
    }
    this.userComment.put(key, userCommentItem);
    return this;
  }

   /**
   * Get userComment
   * @return userComment
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getUserComment() {
    return userComment;
  }

  public void setUserComment(Map<String, String> userComment) {
    this.userComment = userComment;
  }

  public Exif whiteBalance(WhiteBalanceExif whiteBalance) {
    this.whiteBalance = whiteBalance;
    return this;
  }

   /**
   * Get whiteBalance
   * @return whiteBalance
  **/
  @ApiModelProperty(value = "")
  public WhiteBalanceExif getWhiteBalance() {
    return whiteBalance;
  }

  public void setWhiteBalance(WhiteBalanceExif whiteBalance) {
    this.whiteBalance = whiteBalance;
  }

  public Exif nativeDigest(String nativeDigest) {
    this.nativeDigest = nativeDigest;
    return this;
  }

   /**
   * Get nativeDigest
   * @return nativeDigest
  **/
  @ApiModelProperty(value = "")
  public String getNativeDigest() {
    return nativeDigest;
  }

  public void setNativeDigest(String nativeDigest) {
    this.nativeDigest = nativeDigest;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Exif exif = (Exif) o;
    return Objects.equals(this.apertureValue, exif.apertureValue) &&
        Objects.equals(this.brightnessValue, exif.brightnessValue) &&
        Objects.equals(this.cfaPattern, exif.cfaPattern) &&
        Objects.equals(this.colorSpace, exif.colorSpace) &&
        Objects.equals(this.componentsConfiguration, exif.componentsConfiguration) &&
        Objects.equals(this.compressedBitsPerPixel, exif.compressedBitsPerPixel) &&
        Objects.equals(this.contrast, exif.contrast) &&
        Objects.equals(this.customRendered, exif.customRendered) &&
        Objects.equals(this.dateTimeOriginal, exif.dateTimeOriginal) &&
        Objects.equals(this.dateTimeDigitized, exif.dateTimeDigitized) &&
        Objects.equals(this.deviceSettingDescription, exif.deviceSettingDescription) &&
        Objects.equals(this.digitalZoomRatio, exif.digitalZoomRatio) &&
        Objects.equals(this.exifVersion, exif.exifVersion) &&
        Objects.equals(this.exposureBiasValue, exif.exposureBiasValue) &&
        Objects.equals(this.exposureIndex, exif.exposureIndex) &&
        Objects.equals(this.exposureMode, exif.exposureMode) &&
        Objects.equals(this.exposureProgram, exif.exposureProgram) &&
        Objects.equals(this.exposureTime, exif.exposureTime) &&
        Objects.equals(this.fileSource, exif.fileSource) &&
        Objects.equals(this.flash, exif.flash) &&
        Objects.equals(this.flashEnergy, exif.flashEnergy) &&
        Objects.equals(this.flashpixVersion, exif.flashpixVersion) &&
        Objects.equals(this.fNumber, exif.fNumber) &&
        Objects.equals(this.focalLength, exif.focalLength) &&
        Objects.equals(this.focalLengthIn35mmFilm, exif.focalLengthIn35mmFilm) &&
        Objects.equals(this.focalPlaneResolutionUnit, exif.focalPlaneResolutionUnit) &&
        Objects.equals(this.focalPlaneXResolution, exif.focalPlaneXResolution) &&
        Objects.equals(this.focalPlaneYResolution, exif.focalPlaneYResolution) &&
        Objects.equals(this.gainControl, exif.gainControl) &&
        Objects.equals(this.gpsAltitude, exif.gpsAltitude) &&
        Objects.equals(this.gpsAltitudeRef, exif.gpsAltitudeRef) &&
        Objects.equals(this.gpsAreaInformation, exif.gpsAreaInformation) &&
        Objects.equals(this.gpsDestBearing, exif.gpsDestBearing) &&
        Objects.equals(this.gpsDestBearingRef, exif.gpsDestBearingRef) &&
        Objects.equals(this.gpsDestDistance, exif.gpsDestDistance) &&
        Objects.equals(this.gpsDestDistanceRef, exif.gpsDestDistanceRef) &&
        Objects.equals(this.gpsDestLatitude, exif.gpsDestLatitude) &&
        Objects.equals(this.gpsDestLongitude, exif.gpsDestLongitude) &&
        Objects.equals(this.gpsDifferential, exif.gpsDifferential) &&
        Objects.equals(this.gpsdop, exif.gpsdop) &&
        Objects.equals(this.gpsImgDirection, exif.gpsImgDirection) &&
        Objects.equals(this.gpsImgDirectionRef, exif.gpsImgDirectionRef) &&
        Objects.equals(this.gpsCoordinate, exif.gpsCoordinate) &&
        Objects.equals(this.gpsLatitude, exif.gpsLatitude) &&
        Objects.equals(this.gpsLongitude, exif.gpsLongitude) &&
        Objects.equals(this.gpsMapDatum, exif.gpsMapDatum) &&
        Objects.equals(this.gpsMeasureMode, exif.gpsMeasureMode) &&
        Objects.equals(this.gpsProcessingMethod, exif.gpsProcessingMethod) &&
        Objects.equals(this.gpsSatellites, exif.gpsSatellites) &&
        Objects.equals(this.gpsSpeed, exif.gpsSpeed) &&
        Objects.equals(this.gpsSpeedRef, exif.gpsSpeedRef) &&
        Objects.equals(this.gpsStatus, exif.gpsStatus) &&
        Objects.equals(this.gpsTimeStamp, exif.gpsTimeStamp) &&
        Objects.equals(this.gpsTrack, exif.gpsTrack) &&
        Objects.equals(this.gpsTrackRef, exif.gpsTrackRef) &&
        Objects.equals(this.gpsVersionID, exif.gpsVersionID) &&
        Objects.equals(this.imageUniqueID, exif.imageUniqueID) &&
        Objects.equals(this.isoSpeedRatings, exif.isoSpeedRatings) &&
        Objects.equals(this.lightSource, exif.lightSource) &&
        Objects.equals(this.maxApertureValue, exif.maxApertureValue) &&
        Objects.equals(this.meteringMode, exif.meteringMode) &&
        Objects.equals(this.oecf, exif.oecf) &&
        Objects.equals(this.pixelXDimension, exif.pixelXDimension) &&
        Objects.equals(this.pixelYDimension, exif.pixelYDimension) &&
        Objects.equals(this.relatedSoundFile, exif.relatedSoundFile) &&
        Objects.equals(this.saturation, exif.saturation) &&
        Objects.equals(this.sceneCaptureType, exif.sceneCaptureType) &&
        Objects.equals(this.sceneType, exif.sceneType) &&
        Objects.equals(this.sensingMethod, exif.sensingMethod) &&
        Objects.equals(this.sharpness, exif.sharpness) &&
        Objects.equals(this.shutterSpeedValue, exif.shutterSpeedValue) &&
        Objects.equals(this.spatialFrequencyResponse, exif.spatialFrequencyResponse) &&
        Objects.equals(this.spectralSensitivity, exif.spectralSensitivity) &&
        Objects.equals(this.subjectArea, exif.subjectArea) &&
        Objects.equals(this.subjectDistance, exif.subjectDistance) &&
        Objects.equals(this.subjectDistanceRange, exif.subjectDistanceRange) &&
        Objects.equals(this.subjectLocation, exif.subjectLocation) &&
        Objects.equals(this.userComment, exif.userComment) &&
        Objects.equals(this.whiteBalance, exif.whiteBalance) &&
        Objects.equals(this.nativeDigest, exif.nativeDigest);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apertureValue, brightnessValue, cfaPattern, colorSpace, componentsConfiguration, compressedBitsPerPixel, contrast, customRendered, dateTimeOriginal, dateTimeDigitized, deviceSettingDescription, digitalZoomRatio, exifVersion, exposureBiasValue, exposureIndex, exposureMode, exposureProgram, exposureTime, fileSource, flash, flashEnergy, flashpixVersion, fNumber, focalLength, focalLengthIn35mmFilm, focalPlaneResolutionUnit, focalPlaneXResolution, focalPlaneYResolution, gainControl, gpsAltitude, gpsAltitudeRef, gpsAreaInformation, gpsDestBearing, gpsDestBearingRef, gpsDestDistance, gpsDestDistanceRef, gpsDestLatitude, gpsDestLongitude, gpsDifferential, gpsdop, gpsImgDirection, gpsImgDirectionRef, gpsCoordinate, gpsLatitude, gpsLongitude, gpsMapDatum, gpsMeasureMode, gpsProcessingMethod, gpsSatellites, gpsSpeed, gpsSpeedRef, gpsStatus, gpsTimeStamp, gpsTrack, gpsTrackRef, gpsVersionID, imageUniqueID, isoSpeedRatings, lightSource, maxApertureValue, meteringMode, oecf, pixelXDimension, pixelYDimension, relatedSoundFile, saturation, sceneCaptureType, sceneType, sensingMethod, sharpness, shutterSpeedValue, spatialFrequencyResponse, spectralSensitivity, subjectArea, subjectDistance, subjectDistanceRange, subjectLocation, userComment, whiteBalance, nativeDigest);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Exif {\n");
    
    sb.append("    apertureValue: ").append(toIndentedString(apertureValue)).append("\n");
    sb.append("    brightnessValue: ").append(toIndentedString(brightnessValue)).append("\n");
    sb.append("    cfaPattern: ").append(toIndentedString(cfaPattern)).append("\n");
    sb.append("    colorSpace: ").append(toIndentedString(colorSpace)).append("\n");
    sb.append("    componentsConfiguration: ").append(toIndentedString(componentsConfiguration)).append("\n");
    sb.append("    compressedBitsPerPixel: ").append(toIndentedString(compressedBitsPerPixel)).append("\n");
    sb.append("    contrast: ").append(toIndentedString(contrast)).append("\n");
    sb.append("    customRendered: ").append(toIndentedString(customRendered)).append("\n");
    sb.append("    dateTimeOriginal: ").append(toIndentedString(dateTimeOriginal)).append("\n");
    sb.append("    dateTimeDigitized: ").append(toIndentedString(dateTimeDigitized)).append("\n");
    sb.append("    deviceSettingDescription: ").append(toIndentedString(deviceSettingDescription)).append("\n");
    sb.append("    digitalZoomRatio: ").append(toIndentedString(digitalZoomRatio)).append("\n");
    sb.append("    exifVersion: ").append(toIndentedString(exifVersion)).append("\n");
    sb.append("    exposureBiasValue: ").append(toIndentedString(exposureBiasValue)).append("\n");
    sb.append("    exposureIndex: ").append(toIndentedString(exposureIndex)).append("\n");
    sb.append("    exposureMode: ").append(toIndentedString(exposureMode)).append("\n");
    sb.append("    exposureProgram: ").append(toIndentedString(exposureProgram)).append("\n");
    sb.append("    exposureTime: ").append(toIndentedString(exposureTime)).append("\n");
    sb.append("    fileSource: ").append(toIndentedString(fileSource)).append("\n");
    sb.append("    flash: ").append(toIndentedString(flash)).append("\n");
    sb.append("    flashEnergy: ").append(toIndentedString(flashEnergy)).append("\n");
    sb.append("    flashpixVersion: ").append(toIndentedString(flashpixVersion)).append("\n");
    sb.append("    fNumber: ").append(toIndentedString(fNumber)).append("\n");
    sb.append("    focalLength: ").append(toIndentedString(focalLength)).append("\n");
    sb.append("    focalLengthIn35mmFilm: ").append(toIndentedString(focalLengthIn35mmFilm)).append("\n");
    sb.append("    focalPlaneResolutionUnit: ").append(toIndentedString(focalPlaneResolutionUnit)).append("\n");
    sb.append("    focalPlaneXResolution: ").append(toIndentedString(focalPlaneXResolution)).append("\n");
    sb.append("    focalPlaneYResolution: ").append(toIndentedString(focalPlaneYResolution)).append("\n");
    sb.append("    gainControl: ").append(toIndentedString(gainControl)).append("\n");
    sb.append("    gpsAltitude: ").append(toIndentedString(gpsAltitude)).append("\n");
    sb.append("    gpsAltitudeRef: ").append(toIndentedString(gpsAltitudeRef)).append("\n");
    sb.append("    gpsAreaInformation: ").append(toIndentedString(gpsAreaInformation)).append("\n");
    sb.append("    gpsDestBearing: ").append(toIndentedString(gpsDestBearing)).append("\n");
    sb.append("    gpsDestBearingRef: ").append(toIndentedString(gpsDestBearingRef)).append("\n");
    sb.append("    gpsDestDistance: ").append(toIndentedString(gpsDestDistance)).append("\n");
    sb.append("    gpsDestDistanceRef: ").append(toIndentedString(gpsDestDistanceRef)).append("\n");
    sb.append("    gpsDestLatitude: ").append(toIndentedString(gpsDestLatitude)).append("\n");
    sb.append("    gpsDestLongitude: ").append(toIndentedString(gpsDestLongitude)).append("\n");
    sb.append("    gpsDifferential: ").append(toIndentedString(gpsDifferential)).append("\n");
    sb.append("    gpsdop: ").append(toIndentedString(gpsdop)).append("\n");
    sb.append("    gpsImgDirection: ").append(toIndentedString(gpsImgDirection)).append("\n");
    sb.append("    gpsImgDirectionRef: ").append(toIndentedString(gpsImgDirectionRef)).append("\n");
    sb.append("    gpsCoordinate: ").append(toIndentedString(gpsCoordinate)).append("\n");
    sb.append("    gpsLatitude: ").append(toIndentedString(gpsLatitude)).append("\n");
    sb.append("    gpsLongitude: ").append(toIndentedString(gpsLongitude)).append("\n");
    sb.append("    gpsMapDatum: ").append(toIndentedString(gpsMapDatum)).append("\n");
    sb.append("    gpsMeasureMode: ").append(toIndentedString(gpsMeasureMode)).append("\n");
    sb.append("    gpsProcessingMethod: ").append(toIndentedString(gpsProcessingMethod)).append("\n");
    sb.append("    gpsSatellites: ").append(toIndentedString(gpsSatellites)).append("\n");
    sb.append("    gpsSpeed: ").append(toIndentedString(gpsSpeed)).append("\n");
    sb.append("    gpsSpeedRef: ").append(toIndentedString(gpsSpeedRef)).append("\n");
    sb.append("    gpsStatus: ").append(toIndentedString(gpsStatus)).append("\n");
    sb.append("    gpsTimeStamp: ").append(toIndentedString(gpsTimeStamp)).append("\n");
    sb.append("    gpsTrack: ").append(toIndentedString(gpsTrack)).append("\n");
    sb.append("    gpsTrackRef: ").append(toIndentedString(gpsTrackRef)).append("\n");
    sb.append("    gpsVersionID: ").append(toIndentedString(gpsVersionID)).append("\n");
    sb.append("    imageUniqueID: ").append(toIndentedString(imageUniqueID)).append("\n");
    sb.append("    isoSpeedRatings: ").append(toIndentedString(isoSpeedRatings)).append("\n");
    sb.append("    lightSource: ").append(toIndentedString(lightSource)).append("\n");
    sb.append("    maxApertureValue: ").append(toIndentedString(maxApertureValue)).append("\n");
    sb.append("    meteringMode: ").append(toIndentedString(meteringMode)).append("\n");
    sb.append("    oecf: ").append(toIndentedString(oecf)).append("\n");
    sb.append("    pixelXDimension: ").append(toIndentedString(pixelXDimension)).append("\n");
    sb.append("    pixelYDimension: ").append(toIndentedString(pixelYDimension)).append("\n");
    sb.append("    relatedSoundFile: ").append(toIndentedString(relatedSoundFile)).append("\n");
    sb.append("    saturation: ").append(toIndentedString(saturation)).append("\n");
    sb.append("    sceneCaptureType: ").append(toIndentedString(sceneCaptureType)).append("\n");
    sb.append("    sceneType: ").append(toIndentedString(sceneType)).append("\n");
    sb.append("    sensingMethod: ").append(toIndentedString(sensingMethod)).append("\n");
    sb.append("    sharpness: ").append(toIndentedString(sharpness)).append("\n");
    sb.append("    shutterSpeedValue: ").append(toIndentedString(shutterSpeedValue)).append("\n");
    sb.append("    spatialFrequencyResponse: ").append(toIndentedString(spatialFrequencyResponse)).append("\n");
    sb.append("    spectralSensitivity: ").append(toIndentedString(spectralSensitivity)).append("\n");
    sb.append("    subjectArea: ").append(toIndentedString(subjectArea)).append("\n");
    sb.append("    subjectDistance: ").append(toIndentedString(subjectDistance)).append("\n");
    sb.append("    subjectDistanceRange: ").append(toIndentedString(subjectDistanceRange)).append("\n");
    sb.append("    subjectLocation: ").append(toIndentedString(subjectLocation)).append("\n");
    sb.append("    userComment: ").append(toIndentedString(userComment)).append("\n");
    sb.append("    whiteBalance: ").append(toIndentedString(whiteBalance)).append("\n");
    sb.append("    nativeDigest: ").append(toIndentedString(nativeDigest)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

